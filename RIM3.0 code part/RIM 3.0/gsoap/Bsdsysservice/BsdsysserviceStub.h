/* BsdsysserviceStub.h
   Generated by gSOAP 2.8.2 from Bsdsysservice.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef BsdsysserviceStub_H
#define BsdsysserviceStub_H
#define SOAP_NAMESPACE_OF_Bsdsysservice	"BSDSYS"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace Bsdsysservice {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__SourceType
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__SourceType (68)
/* Bsdsysservice:SourceType */
enum Bsdsysservice__SourceType {Bsdsysservice__SourceType__xDMS = 0, Bsdsysservice__SourceType__xRMS = 1, Bsdsysservice__SourceType__xMAS = 2, Bsdsysservice__SourceType__xECS = 3, Bsdsysservice__SourceType__xBSD = 4, Bsdsysservice__SourceType__xFRS = 5, Bsdsysservice__SourceType__xSMS = 6, Bsdsysservice__SourceType__xLES = 7, Bsdsysservice__SourceType__xOAS = 8, Bsdsysservice__SourceType__xGIS = 9, Bsdsysservice__SourceType__xCASE = 10, Bsdsysservice__SourceType__xWF = 11, Bsdsysservice__SourceType__xNULL = 12};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__LogType
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__LogType (69)
/* Bsdsysservice:LogType */
enum Bsdsysservice__LogType {Bsdsysservice__LogType__Error = 0, Bsdsysservice__LogType__Warning = 1, Bsdsysservice__LogType__Info = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfComm_USCOREuserEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfComm_USCOREuserEntity (9)
/* Bsdsysservice:OptResultOfComm_userEntity */
class SOAP_CMAC Bsdsysservice__OptResultOfComm_USCOREuserEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfComm_USCOREuserEntity *Data;	/* optional element of type Bsdsysservice:ArrayOfComm_userEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfComm_USCOREuserEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfComm_USCOREuserEntity() { Bsdsysservice__OptResultOfComm_USCOREuserEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfComm_USCOREuserEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfComm_USCOREuserEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfComm_USCOREuserEntity (10)
/* Bsdsysservice:ArrayOfComm_userEntity */
class SOAP_CMAC Bsdsysservice__ArrayOfComm_USCOREuserEntity
{
public:
	int __sizeComm_USCOREuserEntity;	/* sequence of elements <Comm_userEntity> */
	class Bsdsysservice__Comm_USCOREuserEntity **Comm_USCOREuserEntity;	/* optional element of type Bsdsysservice:Comm_userEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfComm_USCOREuserEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfComm_USCOREuserEntity() { Bsdsysservice__ArrayOfComm_USCOREuserEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfComm_USCOREuserEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREuserEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREuserEntity (11)
/* Bsdsysservice:Comm_userEntity */
class SOAP_CMAC Bsdsysservice__Comm_USCOREuserEntity
{
public:
	std::string Userid;	/* optional element of type xsd:string */
	std::string Username;	/* optional element of type xsd:string */
	std::string ApplePCID;	/* optional element of type xsd:string */
	std::string Empno;	/* optional element of type xsd:string */
	std::string Userdesc;	/* optional element of type xsd:string */
	std::string Password;	/* optional element of type xsd:string */
	std::string Areacode;	/* optional element of type xsd:string */
	std::string UserToken;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREuserEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__Comm_USCOREuserEntity() { Bsdsysservice__Comm_USCOREuserEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__Comm_USCOREuserEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfUserForAppleEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfUserForAppleEntity (12)
/* Bsdsysservice:OptResultOfUserForAppleEntity */
class SOAP_CMAC Bsdsysservice__OptResultOfUserForAppleEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfUserForAppleEntity *Data;	/* optional element of type Bsdsysservice:ArrayOfUserForAppleEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfUserForAppleEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfUserForAppleEntity() { Bsdsysservice__OptResultOfUserForAppleEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfUserForAppleEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfUserForAppleEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfUserForAppleEntity (13)
/* Bsdsysservice:ArrayOfUserForAppleEntity */
class SOAP_CMAC Bsdsysservice__ArrayOfUserForAppleEntity
{
public:
	int __sizeUserForAppleEntity;	/* sequence of elements <UserForAppleEntity> */
	class Bsdsysservice__UserForAppleEntity **UserForAppleEntity;	/* optional element of type Bsdsysservice:UserForAppleEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfUserForAppleEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfUserForAppleEntity() { Bsdsysservice__ArrayOfUserForAppleEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfUserForAppleEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__UserForAppleEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__UserForAppleEntity (14)
/* Bsdsysservice:UserForAppleEntity */
class SOAP_CMAC Bsdsysservice__UserForAppleEntity
{
public:
	std::string Userid;	/* optional element of type xsd:string */
	std::string Username;	/* optional element of type xsd:string */
	std::string ApplePCID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__UserForAppleEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__UserForAppleEntity() { Bsdsysservice__UserForAppleEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__UserForAppleEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfBoolean
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfBoolean (15)
/* Bsdsysservice:OptResultOfBoolean */
class SOAP_CMAC Bsdsysservice__OptResultOfBoolean
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfBoolean *Data;	/* optional element of type Bsdsysservice:ArrayOfBoolean */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfBoolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfBoolean() { Bsdsysservice__OptResultOfBoolean::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfBoolean() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfBoolean
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfBoolean (16)
/* Bsdsysservice:ArrayOfBoolean */
class SOAP_CMAC Bsdsysservice__ArrayOfBoolean
{
public:
	int __sizeboolean;	/* sequence of elements <boolean> */
	bool *boolean;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfBoolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfBoolean() { Bsdsysservice__ArrayOfBoolean::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfBoolean() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfString
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfString (17)
/* Bsdsysservice:OptResultOfString */
class SOAP_CMAC Bsdsysservice__OptResultOfString
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfString *Data;	/* optional element of type Bsdsysservice:ArrayOfString */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfString() { Bsdsysservice__OptResultOfString::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfString() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfString
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfString (18)
/* Bsdsysservice:ArrayOfString */
class SOAP_CMAC Bsdsysservice__ArrayOfString
{
public:
	int __sizestring;	/* sequence of elements <string> */
	std::string *string;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfString() { Bsdsysservice__ArrayOfString::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfString() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfAlertEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfAlertEntity (19)
/* Bsdsysservice:OptResultOfAlertEntity */
class SOAP_CMAC Bsdsysservice__OptResultOfAlertEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfAlertEntity *Data;	/* optional element of type Bsdsysservice:ArrayOfAlertEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfAlertEntity() { Bsdsysservice__OptResultOfAlertEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfAlertEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfAlertEntity (20)
/* Bsdsysservice:ArrayOfAlertEntity */
class SOAP_CMAC Bsdsysservice__ArrayOfAlertEntity
{
public:
	int __sizeAlertEntity;	/* sequence of elements <AlertEntity> */
	class Bsdsysservice__AlertEntity **AlertEntity;	/* optional element of type Bsdsysservice:AlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfAlertEntity() { Bsdsysservice__ArrayOfAlertEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__AlertEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__AlertEntity (21)
/* Bsdsysservice:AlertEntity */
class SOAP_CMAC Bsdsysservice__AlertEntity
{
public:
	std::string Message;	/* optional element of type xsd:string */
	Bsdsysservice__ArrayOfString *Users;	/* optional element of type Bsdsysservice:ArrayOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__AlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__AlertEntity() { Bsdsysservice__AlertEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__AlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfRtmTypeEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfRtmTypeEntity (22)
/* Bsdsysservice:OptResultOfRtmTypeEntity */
class SOAP_CMAC Bsdsysservice__OptResultOfRtmTypeEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfRtmTypeEntity *Data;	/* optional element of type Bsdsysservice:ArrayOfRtmTypeEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfRtmTypeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfRtmTypeEntity() { Bsdsysservice__OptResultOfRtmTypeEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfRtmTypeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfRtmTypeEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfRtmTypeEntity (23)
/* Bsdsysservice:ArrayOfRtmTypeEntity */
class SOAP_CMAC Bsdsysservice__ArrayOfRtmTypeEntity
{
public:
	int __sizeRtmTypeEntity;	/* sequence of elements <RtmTypeEntity> */
	class Bsdsysservice__RtmTypeEntity **RtmTypeEntity;	/* optional element of type Bsdsysservice:RtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfRtmTypeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfRtmTypeEntity() { Bsdsysservice__ArrayOfRtmTypeEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfRtmTypeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__RtmTypeEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__RtmTypeEntity (24)
/* Bsdsysservice:RtmTypeEntity */
class SOAP_CMAC Bsdsysservice__RtmTypeEntity
{
public:
	std::string Itemid;	/* optional element of type xsd:string */
	std::string Itemname;	/* optional element of type xsd:string */
	std::string Desc;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__RtmTypeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__RtmTypeEntity() { Bsdsysservice__RtmTypeEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__RtmTypeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity (25)
/* Bsdsysservice:OptResultOfV_Comm_UserListEntity */
class SOAP_CMAC Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity *Data;	/* optional element of type Bsdsysservice:ArrayOfV_Comm_UserListEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity() { Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity (26)
/* Bsdsysservice:ArrayOfV_Comm_UserListEntity */
class SOAP_CMAC Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity
{
public:
	int __sizeV_USCOREComm_USCOREUserListEntity;	/* sequence of elements <V_Comm_UserListEntity> */
	class Bsdsysservice__V_USCOREComm_USCOREUserListEntity **V_USCOREComm_USCOREUserListEntity;	/* optional element of type Bsdsysservice:V_Comm_UserListEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity() { Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfV_USCOREComm_USCOREUserListEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__V_USCOREComm_USCOREUserListEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__V_USCOREComm_USCOREUserListEntity (27)
/* Bsdsysservice:V_Comm_UserListEntity */
class SOAP_CMAC Bsdsysservice__V_USCOREComm_USCOREUserListEntity
{
public:
	std::string UserID;	/* optional element of type xsd:string */
	std::string UserName;	/* optional element of type xsd:string */
	std::string EmpNO;	/* optional element of type xsd:string */
	std::string AreaCode;	/* optional element of type xsd:string */
	std::string DeptID;	/* optional element of type xsd:string */
	std::string DeptName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__V_USCOREComm_USCOREUserListEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__V_USCOREComm_USCOREUserListEntity() { Bsdsysservice__V_USCOREComm_USCOREUserListEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__V_USCOREComm_USCOREUserListEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity (28)
/* Bsdsysservice:OptResultOfComm_departmentEntity */
class SOAP_CMAC Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity *Data;	/* optional element of type Bsdsysservice:ArrayOfComm_departmentEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity() { Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity (29)
/* Bsdsysservice:ArrayOfComm_departmentEntity */
class SOAP_CMAC Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity
{
public:
	int __sizeComm_USCOREdepartmentEntity;	/* sequence of elements <Comm_departmentEntity> */
	class Bsdsysservice__Comm_USCOREdepartmentEntity **Comm_USCOREdepartmentEntity;	/* optional element of type Bsdsysservice:Comm_departmentEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity() { Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__ArrayOfComm_USCOREdepartmentEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREdepartmentEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREdepartmentEntity (30)
/* Bsdsysservice:Comm_departmentEntity */
class SOAP_CMAC Bsdsysservice__Comm_USCOREdepartmentEntity
{
public:
	std::string Deptname;	/* optional element of type xsd:string */
	std::string Parentid;	/* optional element of type xsd:string */
	std::string Tel;	/* optional element of type xsd:string */
	std::string Fax;	/* optional element of type xsd:string */
	std::string Email;	/* optional element of type xsd:string */
	std::string Manager;	/* optional element of type xsd:string */
	std::string Note;	/* optional element of type xsd:string */
	std::string Deptlevel;	/* required element of type xsd:decimal */
	std::string Deptid;	/* optional element of type xsd:string */
	std::string Delflag;	/* optional element of type xsd:string */
	class Bsdsysservice__Comm_USCOREemployeeEntity *Leader;	/* optional element of type Bsdsysservice:Comm_employeeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREdepartmentEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__Comm_USCOREdepartmentEntity() { Bsdsysservice__Comm_USCOREdepartmentEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__Comm_USCOREdepartmentEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREemployeeEntity
#define SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREemployeeEntity (31)
/* Bsdsysservice:Comm_employeeEntity */
class SOAP_CMAC Bsdsysservice__Comm_USCOREemployeeEntity
{
public:
	std::string Empno;	/* optional element of type xsd:string */
	std::string Name;	/* optional element of type xsd:string */
	std::string Sex;	/* optional element of type xsd:string */
	std::string Nationality;	/* optional element of type xsd:string */
	time_t Birth;	/* required element of type xsd:dateTime */
	std::string Education;	/* optional element of type xsd:string */
	std::string Principalship;	/* optional element of type xsd:string */
	std::string Technicalpost;	/* optional element of type xsd:string */
	std::string Mobile;	/* optional element of type xsd:string */
	std::string Homeaddress;	/* optional element of type xsd:string */
	std::string Postalcode;	/* optional element of type xsd:string */
	std::string Hometel;	/* optional element of type xsd:string */
	std::string Email;	/* optional element of type xsd:string */
	std::string Note;	/* optional element of type xsd:string */
	std::string Delflag;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_Bsdsysservice_Bsdsysservice__Comm_USCOREemployeeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdsysservice__Comm_USCOREemployeeEntity() { Bsdsysservice__Comm_USCOREemployeeEntity::soap_default(NULL); }
	virtual ~Bsdsysservice__Comm_USCOREemployeeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyUser
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyUser (32)
/* Bsdsysservice:VerifyUser */
class SOAP_CMAC _Bsdsysservice__VerifyUser
{
public:
	std::string userID;	/* optional element of type xsd:string */
	std::string password;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__VerifyUser() { _Bsdsysservice__VerifyUser::soap_default(NULL); }
	virtual ~_Bsdsysservice__VerifyUser() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyUserResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyUserResponse (33)
/* Bsdsysservice:VerifyUserResponse */
class SOAP_CMAC _Bsdsysservice__VerifyUserResponse
{
public:
	Bsdsysservice__OptResultOfComm_USCOREuserEntity *VerifyUserResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfComm_userEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__VerifyUserResponse() { _Bsdsysservice__VerifyUserResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__VerifyUserResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUsersForApple
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUsersForApple (34)
/* Bsdsysservice:GetUsersForApple */
class SOAP_CMAC _Bsdsysservice__GetUsersForApple
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUsersForApple */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUsersForApple() { _Bsdsysservice__GetUsersForApple::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUsersForApple() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUsersForAppleResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUsersForAppleResponse (35)
/* Bsdsysservice:GetUsersForAppleResponse */
class SOAP_CMAC _Bsdsysservice__GetUsersForAppleResponse
{
public:
	Bsdsysservice__OptResultOfUserForAppleEntity *GetUsersForAppleResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfUserForAppleEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUsersForAppleResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUsersForAppleResponse() { _Bsdsysservice__GetUsersForAppleResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUsersForAppleResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyFunction
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyFunction (36)
/* Bsdsysservice:VerifyFunction */
class SOAP_CMAC _Bsdsysservice__VerifyFunction
{
public:
	std::string userID;	/* optional element of type xsd:string */
	std::string functionID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyFunction */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__VerifyFunction() { _Bsdsysservice__VerifyFunction::soap_default(NULL); }
	virtual ~_Bsdsysservice__VerifyFunction() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyFunctionResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyFunctionResponse (37)
/* Bsdsysservice:VerifyFunctionResponse */
class SOAP_CMAC _Bsdsysservice__VerifyFunctionResponse
{
public:
	Bsdsysservice__OptResultOfBoolean *VerifyFunctionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfBoolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__VerifyFunctionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__VerifyFunctionResponse() { _Bsdsysservice__VerifyFunctionResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__VerifyFunctionResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetServerTime
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetServerTime (38)
/* Bsdsysservice:GetServerTime */
class SOAP_CMAC _Bsdsysservice__GetServerTime
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetServerTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetServerTime() { _Bsdsysservice__GetServerTime::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetServerTime() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetServerTimeResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetServerTimeResponse (39)
/* Bsdsysservice:GetServerTimeResponse */
class SOAP_CMAC _Bsdsysservice__GetServerTimeResponse
{
public:
	time_t GetServerTimeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetServerTimeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetServerTimeResponse() { _Bsdsysservice__GetServerTimeResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetServerTimeResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAppSetting
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAppSetting (40)
/* Bsdsysservice:GetAppSetting */
class SOAP_CMAC _Bsdsysservice__GetAppSetting
{
public:
	std::string key;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAppSetting */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetAppSetting() { _Bsdsysservice__GetAppSetting::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetAppSetting() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAppSettingResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAppSettingResponse (41)
/* Bsdsysservice:GetAppSettingResponse */
class SOAP_CMAC _Bsdsysservice__GetAppSettingResponse
{
public:
	Bsdsysservice__OptResultOfString *GetAppSettingResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAppSettingResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetAppSettingResponse() { _Bsdsysservice__GetAppSettingResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetAppSettingResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetConnString
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetConnString (42)
/* Bsdsysservice:GetConnString */
class SOAP_CMAC _Bsdsysservice__GetConnString
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetConnString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetConnString() { _Bsdsysservice__GetConnString::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetConnString() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetConnStringResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetConnStringResponse (43)
/* Bsdsysservice:GetConnStringResponse */
class SOAP_CMAC _Bsdsysservice__GetConnStringResponse
{
public:
	Bsdsysservice__OptResultOfString *GetConnStringResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetConnStringResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetConnStringResponse() { _Bsdsysservice__GetConnStringResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetConnStringResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__AlertMsgDirect
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__AlertMsgDirect (44)
/* Bsdsysservice:AlertMsgDirect */
class SOAP_CMAC _Bsdsysservice__AlertMsgDirect
{
public:
	int msgType;	/* required element of type xsd:int */
	std::string target;	/* optional element of type xsd:string */
	std::string msg;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__AlertMsgDirect */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__AlertMsgDirect() { _Bsdsysservice__AlertMsgDirect::soap_default(NULL); }
	virtual ~_Bsdsysservice__AlertMsgDirect() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__AlertMsgDirectResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__AlertMsgDirectResponse (45)
/* Bsdsysservice:AlertMsgDirectResponse */
class SOAP_CMAC _Bsdsysservice__AlertMsgDirectResponse
{
public:
	Bsdsysservice__OptResultOfString *AlertMsgDirectResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__AlertMsgDirectResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__AlertMsgDirectResponse() { _Bsdsysservice__AlertMsgDirectResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__AlertMsgDirectResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUnSendMsg
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUnSendMsg (46)
/* Bsdsysservice:GetUnSendMsg */
class SOAP_CMAC _Bsdsysservice__GetUnSendMsg
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUnSendMsg */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUnSendMsg() { _Bsdsysservice__GetUnSendMsg::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUnSendMsg() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUnSendMsgResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUnSendMsgResponse (47)
/* Bsdsysservice:GetUnSendMsgResponse */
class SOAP_CMAC _Bsdsysservice__GetUnSendMsgResponse
{
public:
	Bsdsysservice__OptResultOfAlertEntity *GetUnSendMsgResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUnSendMsgResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUnSendMsgResponse() { _Bsdsysservice__GetUnSendMsgResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUnSendMsgResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__WriteLog
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__WriteLog (48)
/* Bsdsysservice:WriteLog */
class SOAP_CMAC _Bsdsysservice__WriteLog
{
public:
	std::string userID;	/* optional element of type xsd:string */
	std::string userName;	/* optional element of type xsd:string */
	std::string hostIP;	/* optional element of type xsd:string */
	enum Bsdsysservice__SourceType sourceType;	/* required element of type Bsdsysservice:SourceType */
	std::string log;	/* optional element of type xsd:string */
	enum Bsdsysservice__LogType logtype;	/* required element of type Bsdsysservice:LogType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__WriteLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__WriteLog() { _Bsdsysservice__WriteLog::soap_default(NULL); }
	virtual ~_Bsdsysservice__WriteLog() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__WriteLogResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__WriteLogResponse (49)
/* Bsdsysservice:WriteLogResponse */
class SOAP_CMAC _Bsdsysservice__WriteLogResponse
{
public:
	Bsdsysservice__OptResultOfString *WriteLogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__WriteLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__WriteLogResponse() { _Bsdsysservice__WriteLogResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__WriteLogResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetMobileByUserId
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetMobileByUserId (50)
/* Bsdsysservice:GetMobileByUserId */
class SOAP_CMAC _Bsdsysservice__GetMobileByUserId
{
public:
	std::string userID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetMobileByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetMobileByUserId() { _Bsdsysservice__GetMobileByUserId::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetMobileByUserId() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetMobileByUserIdResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetMobileByUserIdResponse (51)
/* Bsdsysservice:GetMobileByUserIdResponse */
class SOAP_CMAC _Bsdsysservice__GetMobileByUserIdResponse
{
public:
	Bsdsysservice__OptResultOfString *GetMobileByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetMobileByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetMobileByUserIdResponse() { _Bsdsysservice__GetMobileByUserIdResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetMobileByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctionsByUserId
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctionsByUserId (52)
/* Bsdsysservice:GetFunctionsByUserId */
class SOAP_CMAC _Bsdsysservice__GetFunctionsByUserId
{
public:
	std::string userID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctionsByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetFunctionsByUserId() { _Bsdsysservice__GetFunctionsByUserId::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetFunctionsByUserId() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctionsByUserIdResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctionsByUserIdResponse (53)
/* Bsdsysservice:GetFunctionsByUserIdResponse */
class SOAP_CMAC _Bsdsysservice__GetFunctionsByUserIdResponse
{
public:
	Bsdsysservice__OptResultOfString *GetFunctionsByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctionsByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetFunctionsByUserIdResponse() { _Bsdsysservice__GetFunctionsByUserIdResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetFunctionsByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctions3
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctions3 (54)
/* Bsdsysservice:GetFunctions3 */
class SOAP_CMAC _Bsdsysservice__GetFunctions3
{
public:
	std::string userID;	/* optional element of type xsd:string */
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctions3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetFunctions3() { _Bsdsysservice__GetFunctions3::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetFunctions3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctions3Response
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctions3Response (55)
/* Bsdsysservice:GetFunctions3Response */
class SOAP_CMAC _Bsdsysservice__GetFunctions3Response
{
public:
	Bsdsysservice__OptResultOfString *GetFunctions3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetFunctions3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetFunctions3Response() { _Bsdsysservice__GetFunctions3Response::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetFunctions3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions (56)
/* Bsdsysservice:GetRegions */
class SOAP_CMAC _Bsdsysservice__GetRegions
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetRegions() { _Bsdsysservice__GetRegions::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetRegions() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegionsResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegionsResponse (57)
/* Bsdsysservice:GetRegionsResponse */
class SOAP_CMAC _Bsdsysservice__GetRegionsResponse
{
public:
	Bsdsysservice__OptResultOfRtmTypeEntity *GetRegionsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegionsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetRegionsResponse() { _Bsdsysservice__GetRegionsResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetRegionsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions3
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions3 (58)
/* Bsdsysservice:GetRegions3 */
class SOAP_CMAC _Bsdsysservice__GetRegions3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetRegions3() { _Bsdsysservice__GetRegions3::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetRegions3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions3Response
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions3Response (59)
/* Bsdsysservice:GetRegions3Response */
class SOAP_CMAC _Bsdsysservice__GetRegions3Response
{
public:
	Bsdsysservice__OptResultOfRtmTypeEntity *GetRegions3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetRegions3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetRegions3Response() { _Bsdsysservice__GetRegions3Response::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetRegions3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList3
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList3 (60)
/* Bsdsysservice:GetUserList3 */
class SOAP_CMAC _Bsdsysservice__GetUserList3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUserList3() { _Bsdsysservice__GetUserList3::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUserList3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList3Response
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList3Response (61)
/* Bsdsysservice:GetUserList3Response */
class SOAP_CMAC _Bsdsysservice__GetUserList3Response
{
public:
	Bsdsysservice__OptResultOfV_USCOREComm_USCOREUserListEntity *GetUserList3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfV_Comm_UserListEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUserList3Response() { _Bsdsysservice__GetUserList3Response::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUserList3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetDepartmentList3
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetDepartmentList3 (62)
/* Bsdsysservice:GetDepartmentList3 */
class SOAP_CMAC _Bsdsysservice__GetDepartmentList3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetDepartmentList3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetDepartmentList3() { _Bsdsysservice__GetDepartmentList3::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetDepartmentList3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetDepartmentList3Response
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetDepartmentList3Response (63)
/* Bsdsysservice:GetDepartmentList3Response */
class SOAP_CMAC _Bsdsysservice__GetDepartmentList3Response
{
public:
	Bsdsysservice__OptResultOfComm_USCOREdepartmentEntity *GetDepartmentList3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfComm_departmentEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetDepartmentList3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetDepartmentList3Response() { _Bsdsysservice__GetDepartmentList3Response::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetDepartmentList3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAllUserID
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAllUserID (64)
/* Bsdsysservice:GetAllUserID */
class SOAP_CMAC _Bsdsysservice__GetAllUserID
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAllUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetAllUserID() { _Bsdsysservice__GetAllUserID::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetAllUserID() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAllUserIDResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAllUserIDResponse (65)
/* Bsdsysservice:GetAllUserIDResponse */
class SOAP_CMAC _Bsdsysservice__GetAllUserIDResponse
{
public:
	Bsdsysservice__OptResultOfString *GetAllUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetAllUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetAllUserIDResponse() { _Bsdsysservice__GetAllUserIDResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetAllUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList (66)
/* Bsdsysservice:GetUserList */
class SOAP_CMAC _Bsdsysservice__GetUserList
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUserList() { _Bsdsysservice__GetUserList::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUserList() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserListResponse
#define SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserListResponse (67)
/* Bsdsysservice:GetUserListResponse */
class SOAP_CMAC _Bsdsysservice__GetUserListResponse
{
public:
	Bsdsysservice__OptResultOfString *GetUserListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdsysservice:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE_Bsdsysservice__Bsdsysservice__GetUserListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdsysservice__GetUserListResponse() { _Bsdsysservice__GetUserListResponse::soap_default(NULL); }
	virtual ~_Bsdsysservice__GetUserListResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__VerifyUser
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__VerifyUser (107)
/* Operation wrapper: */
struct __Bsdsysservice__VerifyUser
{
public:
	_Bsdsysservice__VerifyUser *Bsdsysservice__VerifyUser;	/* optional element of type Bsdsysservice:VerifyUser */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUsersForApple
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUsersForApple (111)
/* Operation wrapper: */
struct __Bsdsysservice__GetUsersForApple
{
public:
	_Bsdsysservice__GetUsersForApple *Bsdsysservice__GetUsersForApple;	/* optional element of type Bsdsysservice:GetUsersForApple */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__VerifyFunction
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__VerifyFunction (115)
/* Operation wrapper: */
struct __Bsdsysservice__VerifyFunction
{
public:
	_Bsdsysservice__VerifyFunction *Bsdsysservice__VerifyFunction;	/* optional element of type Bsdsysservice:VerifyFunction */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetServerTime
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetServerTime (119)
/* Operation wrapper: */
struct __Bsdsysservice__GetServerTime
{
public:
	_Bsdsysservice__GetServerTime *Bsdsysservice__GetServerTime;	/* optional element of type Bsdsysservice:GetServerTime */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetAppSetting
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetAppSetting (123)
/* Operation wrapper: */
struct __Bsdsysservice__GetAppSetting
{
public:
	_Bsdsysservice__GetAppSetting *Bsdsysservice__GetAppSetting;	/* optional element of type Bsdsysservice:GetAppSetting */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetConnString
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetConnString (127)
/* Operation wrapper: */
struct __Bsdsysservice__GetConnString
{
public:
	_Bsdsysservice__GetConnString *Bsdsysservice__GetConnString;	/* optional element of type Bsdsysservice:GetConnString */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__AlertMsgDirect
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__AlertMsgDirect (131)
/* Operation wrapper: */
struct __Bsdsysservice__AlertMsgDirect
{
public:
	_Bsdsysservice__AlertMsgDirect *Bsdsysservice__AlertMsgDirect;	/* optional element of type Bsdsysservice:AlertMsgDirect */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUnSendMsg
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUnSendMsg (135)
/* Operation wrapper: */
struct __Bsdsysservice__GetUnSendMsg
{
public:
	_Bsdsysservice__GetUnSendMsg *Bsdsysservice__GetUnSendMsg;	/* optional element of type Bsdsysservice:GetUnSendMsg */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__WriteLog
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__WriteLog (139)
/* Operation wrapper: */
struct __Bsdsysservice__WriteLog
{
public:
	_Bsdsysservice__WriteLog *Bsdsysservice__WriteLog;	/* optional element of type Bsdsysservice:WriteLog */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetMobileByUserId
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetMobileByUserId (143)
/* Operation wrapper: */
struct __Bsdsysservice__GetMobileByUserId
{
public:
	_Bsdsysservice__GetMobileByUserId *Bsdsysservice__GetMobileByUserId;	/* optional element of type Bsdsysservice:GetMobileByUserId */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetFunctionsByUserId
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetFunctionsByUserId (147)
/* Operation wrapper: */
struct __Bsdsysservice__GetFunctionsByUserId
{
public:
	_Bsdsysservice__GetFunctionsByUserId *Bsdsysservice__GetFunctionsByUserId;	/* optional element of type Bsdsysservice:GetFunctionsByUserId */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetFunctions3
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetFunctions3 (151)
/* Operation wrapper: */
struct __Bsdsysservice__GetFunctions3
{
public:
	_Bsdsysservice__GetFunctions3 *Bsdsysservice__GetFunctions3;	/* optional element of type Bsdsysservice:GetFunctions3 */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetRegions
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetRegions (155)
/* Operation wrapper: */
struct __Bsdsysservice__GetRegions
{
public:
	_Bsdsysservice__GetRegions *Bsdsysservice__GetRegions;	/* optional element of type Bsdsysservice:GetRegions */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetRegions3
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetRegions3 (159)
/* Operation wrapper: */
struct __Bsdsysservice__GetRegions3
{
public:
	_Bsdsysservice__GetRegions3 *Bsdsysservice__GetRegions3;	/* optional element of type Bsdsysservice:GetRegions3 */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUserList3
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUserList3 (163)
/* Operation wrapper: */
struct __Bsdsysservice__GetUserList3
{
public:
	_Bsdsysservice__GetUserList3 *Bsdsysservice__GetUserList3;	/* optional element of type Bsdsysservice:GetUserList3 */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetDepartmentList3
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetDepartmentList3 (167)
/* Operation wrapper: */
struct __Bsdsysservice__GetDepartmentList3
{
public:
	_Bsdsysservice__GetDepartmentList3 *Bsdsysservice__GetDepartmentList3;	/* optional element of type Bsdsysservice:GetDepartmentList3 */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetAllUserID
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetAllUserID (171)
/* Operation wrapper: */
struct __Bsdsysservice__GetAllUserID
{
public:
	_Bsdsysservice__GetAllUserID *Bsdsysservice__GetAllUserID;	/* optional element of type Bsdsysservice:GetAllUserID */
};
#endif

#ifndef SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUserList
#define SOAP_TYPE_Bsdsysservice___Bsdsysservice__GetUserList (175)
/* Operation wrapper: */
struct __Bsdsysservice__GetUserList
{
public:
	_Bsdsysservice__GetUserList *Bsdsysservice__GetUserList;	/* optional element of type Bsdsysservice:GetUserList */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdsysservice_SOAP_ENV__Header
#define SOAP_TYPE_Bsdsysservice_SOAP_ENV__Header (176)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdsysservice_SOAP_ENV__Code
#define SOAP_TYPE_Bsdsysservice_SOAP_ENV__Code (177)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdsysservice_SOAP_ENV__Detail
#define SOAP_TYPE_Bsdsysservice_SOAP_ENV__Detail (179)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdsysservice_SOAP_ENV__Reason
#define SOAP_TYPE_Bsdsysservice_SOAP_ENV__Reason (182)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdsysservice_SOAP_ENV__Fault
#define SOAP_TYPE_Bsdsysservice_SOAP_ENV__Fault (183)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_Bsdsysservice__QName
#define SOAP_TYPE_Bsdsysservice__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_Bsdsysservice__XML
#define SOAP_TYPE_Bsdsysservice__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_Bsdsysservice_xsd__decimal
#define SOAP_TYPE_Bsdsysservice_xsd__decimal (8)
typedef std::string xsd__decimal;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace Bsdsysservice


#endif

/* End of BsdsysserviceStub.h */
