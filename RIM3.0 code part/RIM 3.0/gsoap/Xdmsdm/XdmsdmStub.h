/* XdmsdmStub.h
   Generated by gSOAP 2.8.2 from Xdmsdm.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef XdmsdmStub_H
#define XdmsdmStub_H
#define SOAP_NAMESPACE_OF_Xdmsdm	"urn:Xdmsdm"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace Xdmsdm {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__SubSystemID
#define SOAP_TYPE_Xdmsdm_Xdmsdm__SubSystemID (55)
/* Xdmsdm:SubSystemID */
enum Xdmsdm__SubSystemID {Xdmsdm__SubSystemID__xDMS = 0, Xdmsdm__SubSystemID__xRMS = 1, Xdmsdm__SubSystemID__xMSA = 2, Xdmsdm__SubSystemID__xECS = 3, Xdmsdm__SubSystemID__xBSD = 4, Xdmsdm__SubSystemID__xFRS = 5, Xdmsdm__SubSystemID__xSMS = 6, Xdmsdm__SubSystemID__xLES = 7, Xdmsdm__SubSystemID__xOAS = 8, Xdmsdm__SubSystemID__xGIS = 9, Xdmsdm__SubSystemID__xNULL = 10};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__LogType
#define SOAP_TYPE_Xdmsdm_Xdmsdm__LogType (56)
/* Xdmsdm:LogType */
enum Xdmsdm__LogType {Xdmsdm__LogType__xError = 0, Xdmsdm__LogType__xWarning = 1, Xdmsdm__LogType__xInfo = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__RegionNO
#define SOAP_TYPE_Xdmsdm_Xdmsdm__RegionNO (7)
/* Xdmsdm:RegionNO */
class SOAP_CMAC Xdmsdm__RegionNO
{
public:
	std::string sName;	/* required element of type xsd:string */
	std::string sRegionNO;	/* required element of type xsd:string */
	std::string sNote;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__RegionNO */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__RegionNO() { Xdmsdm__RegionNO::soap_default(NULL); }
	virtual ~Xdmsdm__RegionNO() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__RegionNOArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__RegionNOArray (8)
/* Xdmsdm:RegionNOArray */
class SOAP_CMAC Xdmsdm__RegionNOArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__RegionNO **item;	/* optional element of type Xdmsdm:RegionNO */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__RegionNOArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__RegionNOArray() { Xdmsdm__RegionNOArray::soap_default(NULL); }
	virtual ~Xdmsdm__RegionNOArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__FreqLayout
#define SOAP_TYPE_Xdmsdm_Xdmsdm__FreqLayout (9)
/* Xdmsdm:FreqLayout */
class SOAP_CMAC Xdmsdm__FreqLayout
{
public:
	std::string sLayoutName;	/* required element of type xsd:string */
	LONG64 nStartFreq;	/* required element of type xsd:long */
	LONG64 nEndFreq;	/* required element of type xsd:long */
	std::string sGroupName;	/* required element of type xsd:string */
	LONG64 nDistince;	/* required element of type xsd:long */
	LONG64 nEmitWidth;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__FreqLayout */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__FreqLayout() { Xdmsdm__FreqLayout::soap_default(NULL); }
	virtual ~Xdmsdm__FreqLayout() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__FreqLayoutArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__FreqLayoutArray (10)
/* Xdmsdm:FreqLayoutArray */
class SOAP_CMAC Xdmsdm__FreqLayoutArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__FreqLayout **item;	/* optional element of type Xdmsdm:FreqLayout */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__FreqLayoutArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__FreqLayoutArray() { Xdmsdm__FreqLayoutArray::soap_default(NULL); }
	virtual ~Xdmsdm__FreqLayoutArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__VersionInfo
#define SOAP_TYPE_Xdmsdm_Xdmsdm__VersionInfo (11)
/* Xdmsdm:VersionInfo */
class SOAP_CMAC Xdmsdm__VersionInfo
{
public:
	std::string sName;	/* required element of type xsd:string */
	std::string sVersion;	/* required element of type xsd:string */
	std::string sDescription;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__VersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__VersionInfo() { Xdmsdm__VersionInfo::soap_default(NULL); }
	virtual ~Xdmsdm__VersionInfo() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__VersionInfoArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__VersionInfoArray (12)
/* Xdmsdm:VersionInfoArray */
class SOAP_CMAC Xdmsdm__VersionInfoArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__VersionInfo **item;	/* optional element of type Xdmsdm:VersionInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__VersionInfoArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__VersionInfoArray() { Xdmsdm__VersionInfoArray::soap_default(NULL); }
	virtual ~Xdmsdm__VersionInfoArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__WebServiceInfo
#define SOAP_TYPE_Xdmsdm_Xdmsdm__WebServiceInfo (13)
/* Xdmsdm:WebServiceInfo */
class SOAP_CMAC Xdmsdm__WebServiceInfo
{
public:
	std::string sName;	/* required element of type xsd:string */
	int nSubModeID;	/* required element of type xsd:int */
	std::string sLocation;	/* required element of type xsd:string */
	short nPort;	/* required element of type xsd:short */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__WebServiceInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__WebServiceInfo() { Xdmsdm__WebServiceInfo::soap_default(NULL); }
	virtual ~Xdmsdm__WebServiceInfo() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__WebServiceInfoArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__WebServiceInfoArray (14)
/* Xdmsdm:WebServiceInfoArray */
class SOAP_CMAC Xdmsdm__WebServiceInfoArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__WebServiceInfo **item;	/* optional element of type Xdmsdm:WebServiceInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__WebServiceInfoArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__WebServiceInfoArray() { Xdmsdm__WebServiceInfoArray::soap_default(NULL); }
	virtual ~Xdmsdm__WebServiceInfoArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__UserInfo
#define SOAP_TYPE_Xdmsdm_Xdmsdm__UserInfo (15)
/* Xdmsdm:UserInfo */
class SOAP_CMAC Xdmsdm__UserInfo
{
public:
	std::string sName;	/* required element of type xsd:string */
	std::string sID;	/* required element of type xsd:string */
	std::string sAppleID;	/* required element of type xsd:string */
	std::string sOther;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__UserInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__UserInfo() { Xdmsdm__UserInfo::soap_default(NULL); }
	virtual ~Xdmsdm__UserInfo() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__UserInfoArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__UserInfoArray (16)
/* Xdmsdm:UserInfoArray */
class SOAP_CMAC Xdmsdm__UserInfoArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__UserInfo **item;	/* optional element of type Xdmsdm:UserInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__UserInfoArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__UserInfoArray() { Xdmsdm__UserInfoArray::soap_default(NULL); }
	virtual ~Xdmsdm__UserInfoArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__LicenseFunc
#define SOAP_TYPE_Xdmsdm_Xdmsdm__LicenseFunc (17)
/* Xdmsdm:LicenseFunc */
class SOAP_CMAC Xdmsdm__LicenseFunc
{
public:
	std::string sFuncNO;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__LicenseFunc */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__LicenseFunc() { Xdmsdm__LicenseFunc::soap_default(NULL); }
	virtual ~Xdmsdm__LicenseFunc() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__LicenseFuncArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__LicenseFuncArray (18)
/* Xdmsdm:LicenseFuncArray */
class SOAP_CMAC Xdmsdm__LicenseFuncArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__LicenseFunc **item;	/* optional element of type Xdmsdm:LicenseFunc */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__LicenseFuncArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__LicenseFuncArray() { Xdmsdm__LicenseFuncArray::soap_default(NULL); }
	virtual ~Xdmsdm__LicenseFuncArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportWorkPlan
#define SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportWorkPlan (19)
/* Xdmsdm:MonthReportWorkPlan */
class SOAP_CMAC Xdmsdm__MonthReportWorkPlan
{
public:
	std::string sUID;	/* required element of type xsd:string */
	std::string sAreaNO;	/* required element of type xsd:string */
	int nDate;	/* required element of type xsd:int */
	std::string sWork;	/* required element of type xsd:string */
	int nMonType;	/* required element of type xsd:int */
	std::string sRemark;	/* required element of type xsd:string */
	std::string sMaker;	/* required element of type xsd:string */
	std::string sChecker;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportWorkPlan */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__MonthReportWorkPlan() { Xdmsdm__MonthReportWorkPlan::soap_default(NULL); }
	virtual ~Xdmsdm__MonthReportWorkPlan() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportWorkPlanArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportWorkPlanArray (20)
/* Xdmsdm:MonthReportWorkPlanArray */
class SOAP_CMAC Xdmsdm__MonthReportWorkPlanArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__MonthReportWorkPlan **item;	/* optional element of type Xdmsdm:MonthReportWorkPlan */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportWorkPlanArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__MonthReportWorkPlanArray() { Xdmsdm__MonthReportWorkPlanArray::soap_default(NULL); }
	virtual ~Xdmsdm__MonthReportWorkPlanArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportBusFreq
#define SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportBusFreq (21)
/* Xdmsdm:MonthReportBusFreq */
class SOAP_CMAC Xdmsdm__MonthReportBusFreq
{
public:
	std::string sUID;	/* required element of type xsd:string */
	std::string sAreaNO;	/* required element of type xsd:string */
	int nDate;	/* required element of type xsd:int */
	std::string sName;	/* required element of type xsd:string */
	LONG64 nMinFreq;	/* required element of type xsd:long */
	LONG64 nMaxFreq;	/* required element of type xsd:long */
	LONG64 nStep;	/* required element of type xsd:long */
	std::string sThr;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportBusFreq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__MonthReportBusFreq() { Xdmsdm__MonthReportBusFreq::soap_default(NULL); }
	virtual ~Xdmsdm__MonthReportBusFreq() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportBusFreqArray
#define SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportBusFreqArray (22)
/* Xdmsdm:MonthReportBusFreqArray */
class SOAP_CMAC Xdmsdm__MonthReportBusFreqArray
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	Xdmsdm__MonthReportBusFreq **item;	/* optional element of type Xdmsdm:MonthReportBusFreq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_Xdmsdm_Xdmsdm__MonthReportBusFreqArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Xdmsdm__MonthReportBusFreqArray() { Xdmsdm__MonthReportBusFreqArray::soap_default(NULL); }
	virtual ~Xdmsdm__MonthReportBusFreqArray() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryVersionInfo
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryVersionInfo (23)
/* Xdmsdm:QueryVersionInfo */
class SOAP_CMAC _Xdmsdm__QueryVersionInfo
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryVersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryVersionInfo() { _Xdmsdm__QueryVersionInfo::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryVersionInfo() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryVersionInfoResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryVersionInfoResponse (24)
/* Xdmsdm:QueryVersionInfoResponse */
class SOAP_CMAC _Xdmsdm__QueryVersionInfoResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__VersionInfoArray *VerInfoArray;	/* required element of type Xdmsdm:VersionInfoArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryVersionInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryVersionInfoResponse() { _Xdmsdm__QueryVersionInfoResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryVersionInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryRegionNO
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryRegionNO (25)
/* Xdmsdm:QueryRegionNO */
class SOAP_CMAC _Xdmsdm__QueryRegionNO
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryRegionNO */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryRegionNO() { _Xdmsdm__QueryRegionNO::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryRegionNO() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryRegionNOResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryRegionNOResponse (26)
/* Xdmsdm:QueryRegionNOResponse */
class SOAP_CMAC _Xdmsdm__QueryRegionNOResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__RegionNOArray *RegionNOArray;	/* required element of type Xdmsdm:RegionNOArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryRegionNOResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryRegionNOResponse() { _Xdmsdm__QueryRegionNOResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryRegionNOResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryFreqLayout
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryFreqLayout (27)
/* Xdmsdm:QueryFreqLayout */
class SOAP_CMAC _Xdmsdm__QueryFreqLayout
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryFreqLayout */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryFreqLayout() { _Xdmsdm__QueryFreqLayout::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryFreqLayout() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryFreqLayoutResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryFreqLayoutResponse (28)
/* Xdmsdm:QueryFreqLayoutResponse */
class SOAP_CMAC _Xdmsdm__QueryFreqLayoutResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__FreqLayoutArray *cArray;	/* required element of type Xdmsdm:FreqLayoutArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryFreqLayoutResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryFreqLayoutResponse() { _Xdmsdm__QueryFreqLayoutResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryFreqLayoutResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryWebService
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryWebService (29)
/* Xdmsdm:QueryWebService */
class SOAP_CMAC _Xdmsdm__QueryWebService
{
public:
	enum Xdmsdm__SubSystemID eSubSystemID;	/* required element of type Xdmsdm:SubSystemID */
	int nSubSystemModID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryWebService */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryWebService() { _Xdmsdm__QueryWebService::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryWebService() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryWebServiceResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryWebServiceResponse (30)
/* Xdmsdm:QueryWebServiceResponse */
class SOAP_CMAC _Xdmsdm__QueryWebServiceResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__WebServiceInfoArray *WebServiceInfoArray;	/* required element of type Xdmsdm:WebServiceInfoArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryWebServiceResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryWebServiceResponse() { _Xdmsdm__QueryWebServiceResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryWebServiceResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUser
#define SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUser (31)
/* Xdmsdm:AuthUser */
class SOAP_CMAC _Xdmsdm__AuthUser
{
public:
	std::string sUser;	/* required element of type xsd:string */
	std::string sPassword;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__AuthUser() { _Xdmsdm__AuthUser::soap_default(NULL); }
	virtual ~_Xdmsdm__AuthUser() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserResponse (32)
/* Xdmsdm:AuthUserResponse */
class SOAP_CMAC _Xdmsdm__AuthUserResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	bool bPass;	/* required element of type xsd:boolean */
	std::string sUserToken;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__AuthUserResponse() { _Xdmsdm__AuthUserResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__AuthUserResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserLicenseFunc
#define SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserLicenseFunc (33)
/* Xdmsdm:AuthUserLicenseFunc */
class SOAP_CMAC _Xdmsdm__AuthUserLicenseFunc
{
public:
	std::string sUser;	/* required element of type xsd:string */
	std::string sFuncNO;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserLicenseFunc */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__AuthUserLicenseFunc() { _Xdmsdm__AuthUserLicenseFunc::soap_default(NULL); }
	virtual ~_Xdmsdm__AuthUserLicenseFunc() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserLicenseFuncResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserLicenseFuncResponse (34)
/* Xdmsdm:AuthUserLicenseFuncResponse */
class SOAP_CMAC _Xdmsdm__AuthUserLicenseFuncResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	bool bPass;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__AuthUserLicenseFuncResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__AuthUserLicenseFuncResponse() { _Xdmsdm__AuthUserLicenseFuncResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__AuthUserLicenseFuncResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserLicenseFunc
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserLicenseFunc (35)
/* Xdmsdm:QueryUserLicenseFunc */
class SOAP_CMAC _Xdmsdm__QueryUserLicenseFunc
{
public:
	std::string sUser;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserLicenseFunc */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryUserLicenseFunc() { _Xdmsdm__QueryUserLicenseFunc::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryUserLicenseFunc() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserLicenseFuncResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserLicenseFuncResponse (36)
/* Xdmsdm:QueryUserLicenseFuncResponse */
class SOAP_CMAC _Xdmsdm__QueryUserLicenseFuncResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__LicenseFuncArray *LicenseFuncArray;	/* required element of type Xdmsdm:LicenseFuncArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserLicenseFuncResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryUserLicenseFuncResponse() { _Xdmsdm__QueryUserLicenseFuncResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryUserLicenseFuncResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SubmitOperateLog
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SubmitOperateLog (37)
/* Xdmsdm:SubmitOperateLog */
class SOAP_CMAC _Xdmsdm__SubmitOperateLog
{
public:
	std::string sUser;	/* required element of type xsd:string */
	enum Xdmsdm__SubSystemID eSubSystemID;	/* required element of type Xdmsdm:SubSystemID */
	std::string sIP;	/* required element of type xsd:string */
	std::string sLog;	/* required element of type xsd:string */
	enum Xdmsdm__LogType eLogType;	/* required element of type Xdmsdm:LogType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SubmitOperateLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SubmitOperateLog() { _Xdmsdm__SubmitOperateLog::soap_default(NULL); }
	virtual ~_Xdmsdm__SubmitOperateLog() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SubmitOperateLogResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SubmitOperateLogResponse (38)
/* Xdmsdm:SubmitOperateLogResponse */
class SOAP_CMAC _Xdmsdm__SubmitOperateLogResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SubmitOperateLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SubmitOperateLogResponse() { _Xdmsdm__SubmitOperateLogResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__SubmitOperateLogResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryStandardTime
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryStandardTime (39)
/* Xdmsdm:QueryStandardTime */
class SOAP_CMAC _Xdmsdm__QueryStandardTime
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryStandardTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryStandardTime() { _Xdmsdm__QueryStandardTime::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryStandardTime() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryStandardTimeResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryStandardTimeResponse (40)
/* Xdmsdm:QueryStandardTimeResponse */
class SOAP_CMAC _Xdmsdm__QueryStandardTimeResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	LONG64 nTime;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryStandardTimeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryStandardTimeResponse() { _Xdmsdm__QueryStandardTimeResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryStandardTimeResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserMobileNO
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserMobileNO (41)
/* Xdmsdm:QueryUserMobileNO */
class SOAP_CMAC _Xdmsdm__QueryUserMobileNO
{
public:
	std::string sUser;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserMobileNO */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryUserMobileNO() { _Xdmsdm__QueryUserMobileNO::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryUserMobileNO() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserMobileNOResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserMobileNOResponse (42)
/* Xdmsdm:QueryUserMobileNOResponse */
class SOAP_CMAC _Xdmsdm__QueryUserMobileNOResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	std::string sMobileNO;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserMobileNOResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryUserMobileNOResponse() { _Xdmsdm__QueryUserMobileNOResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryUserMobileNOResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SendMobileMessage
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SendMobileMessage (43)
/* Xdmsdm:SendMobileMessage */
class SOAP_CMAC _Xdmsdm__SendMobileMessage
{
public:
	std::string sMobileNo;	/* required element of type xsd:string */
	std::string sMsg;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SendMobileMessage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SendMobileMessage() { _Xdmsdm__SendMobileMessage::soap_default(NULL); }
	virtual ~_Xdmsdm__SendMobileMessage() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SendMobileMessageResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SendMobileMessageResponse (44)
/* Xdmsdm:SendMobileMessageResponse */
class SOAP_CMAC _Xdmsdm__SendMobileMessageResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SendMobileMessageResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SendMobileMessageResponse() { _Xdmsdm__SendMobileMessageResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__SendMobileMessageResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserInfo
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserInfo (45)
/* Xdmsdm:QueryUserInfo */
class SOAP_CMAC _Xdmsdm__QueryUserInfo
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryUserInfo() { _Xdmsdm__QueryUserInfo::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryUserInfo() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserInfoResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserInfoResponse (46)
/* Xdmsdm:QueryUserInfoResponse */
class SOAP_CMAC _Xdmsdm__QueryUserInfoResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__UserInfoArray *cArray;	/* required element of type Xdmsdm:UserInfoArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__QueryUserInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__QueryUserInfoResponse() { _Xdmsdm__QueryUserInfoResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__QueryUserInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportWorkPlans
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportWorkPlans (47)
/* Xdmsdm:SetMonthReportWorkPlans */
class SOAP_CMAC _Xdmsdm__SetMonthReportWorkPlans
{
public:
	Xdmsdm__MonthReportWorkPlanArray *cArray;	/* required element of type Xdmsdm:MonthReportWorkPlanArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportWorkPlans */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SetMonthReportWorkPlans() { _Xdmsdm__SetMonthReportWorkPlans::soap_default(NULL); }
	virtual ~_Xdmsdm__SetMonthReportWorkPlans() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportWorkPlansResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportWorkPlansResponse (48)
/* Xdmsdm:SetMonthReportWorkPlansResponse */
class SOAP_CMAC _Xdmsdm__SetMonthReportWorkPlansResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportWorkPlansResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SetMonthReportWorkPlansResponse() { _Xdmsdm__SetMonthReportWorkPlansResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__SetMonthReportWorkPlansResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportWorkPlans
#define SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportWorkPlans (49)
/* Xdmsdm:GetMonthReportWorkPlans */
class SOAP_CMAC _Xdmsdm__GetMonthReportWorkPlans
{
public:
	std::string sAreaNO;	/* required element of type xsd:string */
	int nDate;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportWorkPlans */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__GetMonthReportWorkPlans() { _Xdmsdm__GetMonthReportWorkPlans::soap_default(NULL); }
	virtual ~_Xdmsdm__GetMonthReportWorkPlans() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportWorkPlansResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportWorkPlansResponse (50)
/* Xdmsdm:GetMonthReportWorkPlansResponse */
class SOAP_CMAC _Xdmsdm__GetMonthReportWorkPlansResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__MonthReportWorkPlanArray *cArray;	/* required element of type Xdmsdm:MonthReportWorkPlanArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportWorkPlansResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__GetMonthReportWorkPlansResponse() { _Xdmsdm__GetMonthReportWorkPlansResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__GetMonthReportWorkPlansResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportBusFreqs
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportBusFreqs (51)
/* Xdmsdm:SetMonthReportBusFreqs */
class SOAP_CMAC _Xdmsdm__SetMonthReportBusFreqs
{
public:
	Xdmsdm__MonthReportBusFreqArray *cArray;	/* required element of type Xdmsdm:MonthReportBusFreqArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportBusFreqs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SetMonthReportBusFreqs() { _Xdmsdm__SetMonthReportBusFreqs::soap_default(NULL); }
	virtual ~_Xdmsdm__SetMonthReportBusFreqs() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportBusFreqsResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportBusFreqsResponse (52)
/* Xdmsdm:SetMonthReportBusFreqsResponse */
class SOAP_CMAC _Xdmsdm__SetMonthReportBusFreqsResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__SetMonthReportBusFreqsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__SetMonthReportBusFreqsResponse() { _Xdmsdm__SetMonthReportBusFreqsResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__SetMonthReportBusFreqsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportBusFreqs
#define SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportBusFreqs (53)
/* Xdmsdm:GetMonthReportBusFreqs */
class SOAP_CMAC _Xdmsdm__GetMonthReportBusFreqs
{
public:
	std::string sAreaNO;	/* required element of type xsd:string */
	int nDate;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportBusFreqs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__GetMonthReportBusFreqs() { _Xdmsdm__GetMonthReportBusFreqs::soap_default(NULL); }
	virtual ~_Xdmsdm__GetMonthReportBusFreqs() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportBusFreqsResponse
#define SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportBusFreqsResponse (54)
/* Xdmsdm:GetMonthReportBusFreqsResponse */
class SOAP_CMAC _Xdmsdm__GetMonthReportBusFreqsResponse
{
public:
	int nResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string sResult;	/* required element of type xsd:string */
	Xdmsdm__MonthReportBusFreqArray *cArray;	/* required element of type Xdmsdm:MonthReportBusFreqArray */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_Xdmsdm__Xdmsdm__GetMonthReportBusFreqsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Xdmsdm__GetMonthReportBusFreqsResponse() { _Xdmsdm__GetMonthReportBusFreqsResponse::soap_default(NULL); }
	virtual ~_Xdmsdm__GetMonthReportBusFreqsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryVersionInfo
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryVersionInfo (89)
/* Operation wrapper: */
struct __Xdmsdm__QueryVersionInfo
{
public:
	_Xdmsdm__QueryVersionInfo *Xdmsdm__QueryVersionInfo;	/* optional element of type Xdmsdm:QueryVersionInfo */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryRegionNO
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryRegionNO (93)
/* Operation wrapper: */
struct __Xdmsdm__QueryRegionNO
{
public:
	_Xdmsdm__QueryRegionNO *Xdmsdm__QueryRegionNO;	/* optional element of type Xdmsdm:QueryRegionNO */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryFreqLayout
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryFreqLayout (97)
/* Operation wrapper: */
struct __Xdmsdm__QueryFreqLayout
{
public:
	_Xdmsdm__QueryFreqLayout *Xdmsdm__QueryFreqLayout;	/* optional element of type Xdmsdm:QueryFreqLayout */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryWebService
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryWebService (101)
/* Operation wrapper: */
struct __Xdmsdm__QueryWebService
{
public:
	_Xdmsdm__QueryWebService *Xdmsdm__QueryWebService;	/* optional element of type Xdmsdm:QueryWebService */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__AuthUser
#define SOAP_TYPE_Xdmsdm___Xdmsdm__AuthUser (105)
/* Operation wrapper: */
struct __Xdmsdm__AuthUser
{
public:
	_Xdmsdm__AuthUser *Xdmsdm__AuthUser;	/* optional element of type Xdmsdm:AuthUser */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__AuthUserLicenseFunc
#define SOAP_TYPE_Xdmsdm___Xdmsdm__AuthUserLicenseFunc (109)
/* Operation wrapper: */
struct __Xdmsdm__AuthUserLicenseFunc
{
public:
	_Xdmsdm__AuthUserLicenseFunc *Xdmsdm__AuthUserLicenseFunc;	/* optional element of type Xdmsdm:AuthUserLicenseFunc */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryUserLicenseFunc
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryUserLicenseFunc (113)
/* Operation wrapper: */
struct __Xdmsdm__QueryUserLicenseFunc
{
public:
	_Xdmsdm__QueryUserLicenseFunc *Xdmsdm__QueryUserLicenseFunc;	/* optional element of type Xdmsdm:QueryUserLicenseFunc */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__SubmitOperateLog
#define SOAP_TYPE_Xdmsdm___Xdmsdm__SubmitOperateLog (117)
/* Operation wrapper: */
struct __Xdmsdm__SubmitOperateLog
{
public:
	_Xdmsdm__SubmitOperateLog *Xdmsdm__SubmitOperateLog;	/* optional element of type Xdmsdm:SubmitOperateLog */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryStandardTime
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryStandardTime (121)
/* Operation wrapper: */
struct __Xdmsdm__QueryStandardTime
{
public:
	_Xdmsdm__QueryStandardTime *Xdmsdm__QueryStandardTime;	/* optional element of type Xdmsdm:QueryStandardTime */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryUserMobileNO
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryUserMobileNO (125)
/* Operation wrapper: */
struct __Xdmsdm__QueryUserMobileNO
{
public:
	_Xdmsdm__QueryUserMobileNO *Xdmsdm__QueryUserMobileNO;	/* optional element of type Xdmsdm:QueryUserMobileNO */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__SendMobileMessage
#define SOAP_TYPE_Xdmsdm___Xdmsdm__SendMobileMessage (129)
/* Operation wrapper: */
struct __Xdmsdm__SendMobileMessage
{
public:
	_Xdmsdm__SendMobileMessage *Xdmsdm__SendMobileMessage;	/* optional element of type Xdmsdm:SendMobileMessage */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__QueryUserInfo
#define SOAP_TYPE_Xdmsdm___Xdmsdm__QueryUserInfo (133)
/* Operation wrapper: */
struct __Xdmsdm__QueryUserInfo
{
public:
	_Xdmsdm__QueryUserInfo *Xdmsdm__QueryUserInfo;	/* optional element of type Xdmsdm:QueryUserInfo */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__SetMonthReportWorkPlans
#define SOAP_TYPE_Xdmsdm___Xdmsdm__SetMonthReportWorkPlans (137)
/* Operation wrapper: */
struct __Xdmsdm__SetMonthReportWorkPlans
{
public:
	_Xdmsdm__SetMonthReportWorkPlans *Xdmsdm__SetMonthReportWorkPlans;	/* optional element of type Xdmsdm:SetMonthReportWorkPlans */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__GetMonthReportWorkPlans
#define SOAP_TYPE_Xdmsdm___Xdmsdm__GetMonthReportWorkPlans (141)
/* Operation wrapper: */
struct __Xdmsdm__GetMonthReportWorkPlans
{
public:
	_Xdmsdm__GetMonthReportWorkPlans *Xdmsdm__GetMonthReportWorkPlans;	/* optional element of type Xdmsdm:GetMonthReportWorkPlans */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__SetMonthReportBusFreqs
#define SOAP_TYPE_Xdmsdm___Xdmsdm__SetMonthReportBusFreqs (145)
/* Operation wrapper: */
struct __Xdmsdm__SetMonthReportBusFreqs
{
public:
	_Xdmsdm__SetMonthReportBusFreqs *Xdmsdm__SetMonthReportBusFreqs;	/* optional element of type Xdmsdm:SetMonthReportBusFreqs */
};
#endif

#ifndef SOAP_TYPE_Xdmsdm___Xdmsdm__GetMonthReportBusFreqs
#define SOAP_TYPE_Xdmsdm___Xdmsdm__GetMonthReportBusFreqs (149)
/* Operation wrapper: */
struct __Xdmsdm__GetMonthReportBusFreqs
{
public:
	_Xdmsdm__GetMonthReportBusFreqs *Xdmsdm__GetMonthReportBusFreqs;	/* optional element of type Xdmsdm:GetMonthReportBusFreqs */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Xdmsdm_SOAP_ENV__Header
#define SOAP_TYPE_Xdmsdm_SOAP_ENV__Header (150)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Xdmsdm_SOAP_ENV__Code
#define SOAP_TYPE_Xdmsdm_SOAP_ENV__Code (151)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Xdmsdm_SOAP_ENV__Detail
#define SOAP_TYPE_Xdmsdm_SOAP_ENV__Detail (153)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Xdmsdm_SOAP_ENV__Reason
#define SOAP_TYPE_Xdmsdm_SOAP_ENV__Reason (156)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Xdmsdm_SOAP_ENV__Fault
#define SOAP_TYPE_Xdmsdm_SOAP_ENV__Fault (157)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_Xdmsdm__QName
#define SOAP_TYPE_Xdmsdm__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_Xdmsdm__XML
#define SOAP_TYPE_Xdmsdm__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace Xdmsdm


#endif

/* End of XdmsdmStub.h */
