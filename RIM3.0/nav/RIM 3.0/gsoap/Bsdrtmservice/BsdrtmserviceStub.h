/* BsdrtmserviceStub.h
   Generated by gSOAP 2.8.2 from Bsdrtmservice.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef BsdrtmserviceStub_H
#define BsdrtmserviceStub_H
#define SOAP_NAMESPACE_OF_Bsdrtmservice1	"BSDRTM"
#define SOAP_NAMESPACE_OF_Bsdrtmservice2	"BSDRTM/AbstractTypes"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace Bsdrtmservice {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_Bsdrtmservice_xsd__base64Binary
#define SOAP_TYPE_Bsdrtmservice_xsd__base64Binary (7)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_Bsdrtmservice_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfString
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfString (14)
/* Bsdrtmservice1:OptResultOfString */
class SOAP_CMAC Bsdrtmservice1__OptResultOfString
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfString *Data;	/* optional element of type Bsdrtmservice1:ArrayOfString */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfString() { Bsdrtmservice1__OptResultOfString::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfString() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfString
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfString (15)
/* Bsdrtmservice1:ArrayOfString */
class SOAP_CMAC Bsdrtmservice1__ArrayOfString
{
public:
	int __sizestring;	/* sequence of elements <string> */
	std::string *string;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfString() { Bsdrtmservice1__ArrayOfString::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfString() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmTypeEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmTypeEntity (16)
/* Bsdrtmservice1:OptResultOfRtmTypeEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmTypeEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmTypeEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmTypeEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmTypeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmTypeEntity() { Bsdrtmservice1__OptResultOfRtmTypeEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmTypeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmTypeEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmTypeEntity (17)
/* Bsdrtmservice1:ArrayOfRtmTypeEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmTypeEntity
{
public:
	int __sizeRtmTypeEntity;	/* sequence of elements <RtmTypeEntity> */
	class Bsdrtmservice1__RtmTypeEntity **RtmTypeEntity;	/* optional element of type Bsdrtmservice1:RtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmTypeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmTypeEntity() { Bsdrtmservice1__ArrayOfRtmTypeEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmTypeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmTypeEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmTypeEntity (18)
/* Bsdrtmservice1:RtmTypeEntity */
class SOAP_CMAC Bsdrtmservice1__RtmTypeEntity
{
public:
	std::string Itemid;	/* optional element of type xsd:string */
	std::string Itemname;	/* optional element of type xsd:string */
	std::string Desc;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmTypeEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmTypeEntity() { Bsdrtmservice1__RtmTypeEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmTypeEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmDevModelEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmDevModelEntity (19)
/* Bsdrtmservice1:OptResultOfRtmDevModelEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmDevModelEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmDevModelEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmDevModelEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmDevModelEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmDevModelEntity() { Bsdrtmservice1__OptResultOfRtmDevModelEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmDevModelEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmDevModelEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmDevModelEntity (20)
/* Bsdrtmservice1:ArrayOfRtmDevModelEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmDevModelEntity
{
public:
	int __sizeRtmDevModelEntity;	/* sequence of elements <RtmDevModelEntity> */
	class Bsdrtmservice1__RtmDevModelEntity **RtmDevModelEntity;	/* optional element of type Bsdrtmservice1:RtmDevModelEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmDevModelEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmDevModelEntity() { Bsdrtmservice1__ArrayOfRtmDevModelEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmDevModelEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevModelEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevModelEntity (21)
/* Bsdrtmservice1:RtmDevModelEntity */
class SOAP_CMAC Bsdrtmservice1__RtmDevModelEntity
{
public:
	std::string DEVModelUID;	/* required element of type xsd:decimal */
	std::string DEVModelNAME;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevModelEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmDevModelEntity() { Bsdrtmservice1__RtmDevModelEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmDevModelEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity (22)
/* Bsdrtmservice1:OptResultOfvRtmDevModelFunParamEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmDevModelFunParamEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity() { Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity (23)
/* Bsdrtmservice1:ArrayOfVRtmDevModelFunParamEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity
{
public:
	int __sizevRtmDevModelFunParamEntity;	/* sequence of elements <vRtmDevModelFunParamEntity> */
	class Bsdrtmservice1__vRtmDevModelFunParamEntity **vRtmDevModelFunParamEntity;	/* optional element of type Bsdrtmservice1:vRtmDevModelFunParamEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity() { Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmDevModelFunParamEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevModelFunParamEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevModelFunParamEntity (25)
/* Bsdrtmservice1:RtmDevModelFunParamEntity */
class SOAP_CMAC Bsdrtmservice1__RtmDevModelFunParamEntity
{
public:
	std::string DEVModelUID;	/* required element of type xsd:decimal */
	std::string Devparam;	/* optional element of type xsd:string */
	std::string Funno;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevModelFunParamEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmDevModelFunParamEntity() { Bsdrtmservice1__RtmDevModelFunParamEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmDevModelFunParamEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonOrgEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonOrgEntity (26)
/* Bsdrtmservice1:OptResultOfRtmMonOrgEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmMonOrgEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmMonOrgEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmMonOrgEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonOrgEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmMonOrgEntity() { Bsdrtmservice1__OptResultOfRtmMonOrgEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmMonOrgEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonOrgEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonOrgEntity (27)
/* Bsdrtmservice1:ArrayOfRtmMonOrgEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmMonOrgEntity
{
public:
	int __sizeRtmMonOrgEntity;	/* sequence of elements <RtmMonOrgEntity> */
	class Bsdrtmservice1__RtmMonOrgEntity **RtmMonOrgEntity;	/* optional element of type Bsdrtmservice1:RtmMonOrgEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonOrgEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmMonOrgEntity() { Bsdrtmservice1__ArrayOfRtmMonOrgEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmMonOrgEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonOrgEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonOrgEntity (28)
/* Bsdrtmservice1:RtmMonOrgEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMonOrgEntity
{
public:
	std::string Monorgno;	/* optional element of type xsd:string */
	std::string Monorgname;	/* optional element of type xsd:string */
	std::string Address;	/* optional element of type xsd:string */
	std::string Post;	/* optional element of type xsd:string */
	std::string Responperson;	/* optional element of type xsd:string */
	std::string Linkman;	/* optional element of type xsd:string */
	std::string Fixstationnum;	/* required element of type xsd:decimal */
	std::string Movestationnum;	/* required element of type xsd:decimal */
	std::string Porstationnum;	/* required element of type xsd:decimal */
	std::string Smallstationnum;	/* required element of type xsd:decimal */
	std::string Brief;	/* optional element of type xsd:string */
	std::string Note;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonOrgEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMonOrgEntity() { Bsdrtmservice1__RtmMonOrgEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMonOrgEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmControlCenterEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmControlCenterEntity (29)
/* Bsdrtmservice1:OptResultOfRtmControlCenterEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmControlCenterEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmControlCenterEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmControlCenterEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmControlCenterEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmControlCenterEntity() { Bsdrtmservice1__OptResultOfRtmControlCenterEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmControlCenterEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmControlCenterEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmControlCenterEntity (30)
/* Bsdrtmservice1:ArrayOfRtmControlCenterEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmControlCenterEntity
{
public:
	int __sizeRtmControlCenterEntity;	/* sequence of elements <RtmControlCenterEntity> */
	class Bsdrtmservice1__RtmControlCenterEntity **RtmControlCenterEntity;	/* optional element of type Bsdrtmservice1:RtmControlCenterEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmControlCenterEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmControlCenterEntity() { Bsdrtmservice1__ArrayOfRtmControlCenterEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmControlCenterEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmControlCenterEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmControlCenterEntity (31)
/* Bsdrtmservice1:RtmControlCenterEntity */
class SOAP_CMAC Bsdrtmservice1__RtmControlCenterEntity
{
public:
	std::string ControlerUID;	/* required element of type xsd:decimal */
	std::string Controlername;	/* optional element of type xsd:string */
	std::string Address;	/* optional element of type xsd:string */
	std::string Longi;	/* required element of type xsd:decimal */
	std::string Lati;	/* required element of type xsd:decimal */
	std::string Note;	/* optional element of type xsd:string */
	std::string AreaCode;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmControlCenterEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmControlCenterEntity() { Bsdrtmservice1__RtmControlCenterEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmControlCenterEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmMonStationEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmMonStationEntity (32)
/* Bsdrtmservice1:OptResultOfvRtmMonStationEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfvRtmMonStationEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmMonStationEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmMonStationEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmMonStationEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfvRtmMonStationEntity() { Bsdrtmservice1__OptResultOfvRtmMonStationEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfvRtmMonStationEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmMonStationEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmMonStationEntity (33)
/* Bsdrtmservice1:ArrayOfVRtmMonStationEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmMonStationEntity
{
public:
	int __sizevRtmMonStationEntity;	/* sequence of elements <vRtmMonStationEntity> */
	class Bsdrtmservice1__vRtmMonStationEntity **vRtmMonStationEntity;	/* optional element of type Bsdrtmservice1:vRtmMonStationEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmMonStationEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmMonStationEntity() { Bsdrtmservice1__ArrayOfVRtmMonStationEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmMonStationEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonStationEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonStationEntity (35)
/* Bsdrtmservice1:RtmMonStationEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMonStationEntity
{
public:
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Monstationname;	/* optional element of type xsd:string */
	time_t Createtime;	/* required element of type xsd:dateTime */
	std::string Address;	/* optional element of type xsd:string */
	std::string Longi;	/* required element of type xsd:decimal */
	std::string Lati;	/* required element of type xsd:decimal */
	std::string Monrange;	/* required element of type xsd:decimal */
	std::string State;	/* optional element of type xsd:string */
	std::string Type;	/* optional element of type xsd:string */
	std::string Linkman;	/* optional element of type xsd:string */
	std::string Monorgno;	/* optional element of type xsd:string */
	std::string Monstationdesc;	/* optional element of type xsd:string */
	std::string Gpsip;	/* optional element of type xsd:string */
	std::string Gpsport;	/* required element of type xsd:decimal */
	std::string Compassip;	/* optional element of type xsd:string */
	std::string Compassport;	/* required element of type xsd:decimal */
	std::string Opttype;	/* optional element of type xsd:string */
	std::string Nettype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonStationEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMonStationEntity() { Bsdrtmservice1__RtmMonStationEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMonStationEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmRncPORTEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmRncPORTEntity (36)
/* Bsdrtmservice1:OptResultOfvRtmRncPORTEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfvRtmRncPORTEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmRncPORTEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmRncPORTEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmRncPORTEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfvRtmRncPORTEntity() { Bsdrtmservice1__OptResultOfvRtmRncPORTEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfvRtmRncPORTEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmRncPORTEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmRncPORTEntity (37)
/* Bsdrtmservice1:ArrayOfVRtmRncPORTEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmRncPORTEntity
{
public:
	int __sizevRtmRncPORTEntity;	/* sequence of elements <vRtmRncPORTEntity> */
	class Bsdrtmservice1__vRtmRncPORTEntity **vRtmRncPORTEntity;	/* optional element of type Bsdrtmservice1:vRtmRncPORTEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmRncPORTEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmRncPORTEntity() { Bsdrtmservice1__ArrayOfVRtmRncPORTEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmRncPORTEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmRncPortEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmRncPortEntity (39)
/* Bsdrtmservice1:RtmRncPortEntity */
class SOAP_CMAC Bsdrtmservice1__RtmRncPortEntity
{
public:
	std::string RncPortUID;	/* required element of type xsd:decimal */
	std::string RncUID;	/* required element of type xsd:decimal */
	std::string Devname;	/* optional element of type xsd:string */
	std::string Powerport;	/* required element of type xsd:decimal */
	std::string Hasos;	/* optional element of type xsd:string */
	std::string Osip;	/* optional element of type xsd:string */
	std::string Osport;	/* required element of type xsd:decimal */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmRncPortEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmRncPortEntity() { Bsdrtmservice1__RtmRncPortEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmRncPortEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmRncPort2Entity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmRncPort2Entity (40)
/* Bsdrtmservice1:OptResultOfvRtmRncPort2Entity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfvRtmRncPort2Entity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmRncPort2Entity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmRncPort2Entity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmRncPort2Entity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfvRtmRncPort2Entity() { Bsdrtmservice1__OptResultOfvRtmRncPort2Entity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfvRtmRncPort2Entity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmRncPort2Entity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmRncPort2Entity (41)
/* Bsdrtmservice1:ArrayOfVRtmRncPort2Entity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmRncPort2Entity
{
public:
	int __sizevRtmRncPort2Entity;	/* sequence of elements <vRtmRncPort2Entity> */
	class Bsdrtmservice1__vRtmRncPort2Entity **vRtmRncPort2Entity;	/* optional element of type Bsdrtmservice1:vRtmRncPort2Entity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmRncPort2Entity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmRncPort2Entity() { Bsdrtmservice1__ArrayOfVRtmRncPort2Entity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmRncPort2Entity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmDeviceEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmDeviceEntity (43)
/* Bsdrtmservice1:OptResultOfRtmDeviceEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmDeviceEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmDeviceEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmDeviceEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmDeviceEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmDeviceEntity() { Bsdrtmservice1__OptResultOfRtmDeviceEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmDeviceEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmDeviceEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmDeviceEntity (44)
/* Bsdrtmservice1:ArrayOfRtmDeviceEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmDeviceEntity
{
public:
	int __sizeRtmDeviceEntity;	/* sequence of elements <RtmDeviceEntity> */
	class Bsdrtmservice1__RtmDeviceEntity **RtmDeviceEntity;	/* optional element of type Bsdrtmservice1:RtmDeviceEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmDeviceEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmDeviceEntity() { Bsdrtmservice1__ArrayOfRtmDeviceEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmDeviceEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDeviceEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDeviceEntity (45)
/* Bsdrtmservice1:RtmDeviceEntity */
class SOAP_CMAC Bsdrtmservice1__RtmDeviceEntity
{
public:
	std::string DevUID;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string Devname;	/* optional element of type xsd:string */
	std::string DevmodelUID;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devdesc;	/* optional element of type xsd:string */
	std::string Devtype;	/* optional element of type xsd:string */
	time_t Buydate;	/* required element of type xsd:dateTime */
	std::string Supplier;	/* optional element of type xsd:string */
	std::string Repairtel;	/* optional element of type xsd:string */
	std::string Curaddress;	/* optional element of type xsd:string */
	std::string Curstate;	/* optional element of type xsd:string */
	std::string Responer;	/* optional element of type xsd:string */
	std::string Maxrunnum;	/* required element of type xsd:decimal */
	std::string Serviceip;	/* optional element of type xsd:string */
	std::string Serviceport;	/* required element of type xsd:decimal */
	std::string Devprotocol;	/* required element of type xsd:decimal */
	std::string Opttype;	/* optional element of type xsd:string */
	std::string Isintegrated;	/* optional element of type xsd:string */
	std::string Tdoaip;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDeviceEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmDeviceEntity() { Bsdrtmservice1__RtmDeviceEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmDeviceEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfVRtmDevFunEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfVRtmDevFunEntity (46)
/* Bsdrtmservice1:OptResultOfVRtmDevFunEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfVRtmDevFunEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmDevFunEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmDevFunEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfVRtmDevFunEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfVRtmDevFunEntity() { Bsdrtmservice1__OptResultOfVRtmDevFunEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfVRtmDevFunEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevFunEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevFunEntity (47)
/* Bsdrtmservice1:ArrayOfVRtmDevFunEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmDevFunEntity
{
public:
	int __sizeVRtmDevFunEntity;	/* sequence of elements <VRtmDevFunEntity> */
	class Bsdrtmservice1__VRtmDevFunEntity **VRtmDevFunEntity;	/* optional element of type Bsdrtmservice1:VRtmDevFunEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevFunEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmDevFunEntity() { Bsdrtmservice1__ArrayOfVRtmDevFunEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmDevFunEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevFunEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevFunEntity (49)
/* Bsdrtmservice1:RtmDevFunEntity */
class SOAP_CMAC Bsdrtmservice1__RtmDevFunEntity
{
public:
	std::string DevFunUID;	/* required element of type xsd:decimal */
	std::string DevUID;	/* optional element of type xsd:string */
	std::string DevModelUID;	/* required element of type xsd:decimal */
	std::string FunNo;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevFunEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmDevFunEntity() { Bsdrtmservice1__RtmDevFunEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmDevFunEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmDevAntEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmDevAntEntity (50)
/* Bsdrtmservice1:OptResultOfvRtmDevAntEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfvRtmDevAntEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmDevAntEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmDevAntEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmDevAntEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfvRtmDevAntEntity() { Bsdrtmservice1__OptResultOfvRtmDevAntEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfvRtmDevAntEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevAntEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevAntEntity (51)
/* Bsdrtmservice1:ArrayOfVRtmDevAntEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmDevAntEntity
{
public:
	int __sizevRtmDevAntEntity;	/* sequence of elements <vRtmDevAntEntity> */
	class Bsdrtmservice1__vRtmDevAntEntity **vRtmDevAntEntity;	/* optional element of type Bsdrtmservice1:vRtmDevAntEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmDevAntEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmDevAntEntity() { Bsdrtmservice1__ArrayOfVRtmDevAntEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmDevAntEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmAntEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmAntEntity (53)
/* Bsdrtmservice1:OptResultOfRtmAntEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmAntEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmAntEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmAntEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmAntEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmAntEntity() { Bsdrtmservice1__OptResultOfRtmAntEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmAntEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmAntEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmAntEntity (54)
/* Bsdrtmservice1:ArrayOfRtmAntEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmAntEntity
{
public:
	int __sizeRtmAntEntity;	/* sequence of elements <RtmAntEntity> */
	class Bsdrtmservice1__RtmAntEntity **RtmAntEntity;	/* optional element of type Bsdrtmservice1:RtmAntEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmAntEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmAntEntity() { Bsdrtmservice1__ArrayOfRtmAntEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmAntEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmAntEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmAntEntity (55)
/* Bsdrtmservice1:RtmAntEntity */
class SOAP_CMAC Bsdrtmservice1__RtmAntEntity
{
public:
	std::string AntUID;	/* required element of type xsd:decimal */
	std::string Antname;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Antfactor;	/* optional element of type xsd:string */
	std::string Startfreq;	/* required element of type xsd:decimal */
	std::string Stopfreq;	/* required element of type xsd:decimal */
	std::string AntHeight;	/* required element of type xsd:decimal */
	std::string Note;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmAntEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmAntEntity() { Bsdrtmservice1__RtmAntEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmAntEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevUseLogEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevUseLogEntity (56)
/* Bsdrtmservice1:RtmDevUseLogEntity */
class SOAP_CMAC Bsdrtmservice1__RtmDevUseLogEntity
{
public:
	std::string Userid;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string Funno;	/* optional element of type xsd:string */
	time_t Starttime;	/* required element of type xsd:dateTime */
	time_t Endtime;	/* required element of type xsd:dateTime */
	std::string Devparam;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmDevUseLogEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmDevUseLogEntity() { Bsdrtmservice1__RtmDevUseLogEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmDevUseLogEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfTimeSpan
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfTimeSpan (57)
/* Bsdrtmservice1:OptResultOfTimeSpan */
class SOAP_CMAC Bsdrtmservice1__OptResultOfTimeSpan
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfTimeSpan *Data;	/* optional element of type Bsdrtmservice1:ArrayOfTimeSpan */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfTimeSpan */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfTimeSpan() { Bsdrtmservice1__OptResultOfTimeSpan::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfTimeSpan() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfTimeSpan
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfTimeSpan (58)
/* Bsdrtmservice1:ArrayOfTimeSpan */
class SOAP_CMAC Bsdrtmservice1__ArrayOfTimeSpan
{
public:
	int __sizeTimeSpan;	/* sequence of elements <TimeSpan> */
	class Bsdrtmservice1__TimeSpan **TimeSpan;	/* optional element of type Bsdrtmservice1:TimeSpan */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfTimeSpan */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfTimeSpan() { Bsdrtmservice1__ArrayOfTimeSpan::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfTimeSpan() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__TimeSpan
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__TimeSpan (59)
/* Bsdrtmservice1:TimeSpan */
class SOAP_CMAC Bsdrtmservice1__TimeSpan
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__TimeSpan */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__TimeSpan() { Bsdrtmservice1__TimeSpan::soap_default(NULL); }
	virtual ~Bsdrtmservice1__TimeSpan() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfVRtmMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfVRtmMonTaskEntity (60)
/* Bsdrtmservice1:OptResultOfVRtmMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfVRtmMonTaskEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmMonTaskEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmMonTaskEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfVRtmMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfVRtmMonTaskEntity() { Bsdrtmservice1__OptResultOfVRtmMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfVRtmMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmMonTaskEntity (61)
/* Bsdrtmservice1:ArrayOfVRtmMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmMonTaskEntity
{
public:
	int __sizeVRtmMonTaskEntity;	/* sequence of elements <VRtmMonTaskEntity> */
	class Bsdrtmservice1__VRtmMonTaskEntity **VRtmMonTaskEntity;	/* optional element of type Bsdrtmservice1:VRtmMonTaskEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmMonTaskEntity() { Bsdrtmservice1__ArrayOfVRtmMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonTaskEntity (63)
/* Bsdrtmservice1:RtmMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMonTaskEntity
{
public:
	std::string Taskuid;	/* required element of type xsd:decimal */
	std::string Taskname;	/* optional element of type xsd:string */
	std::string Curtel;	/* optional element of type xsd:string */
	time_t Monstartdate;	/* required element of type xsd:dateTime */
	time_t Monenddate;	/* required element of type xsd:dateTime */
	std::string Tasktypeid;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string Funno;	/* optional element of type xsd:string */
	std::string Devparam;	/* optional element of type xsd:string */
	std::string Monconfig;	/* optional element of type xsd:string */
	std::string Taskdesc;	/* optional element of type xsd:string */
	std::string Taskstate;	/* optional element of type xsd:string */
	std::string Statedesc;	/* optional element of type xsd:string */
	std::string Arrowrun;	/* optional element of type xsd:string */
	std::string MonType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMonTaskEntity() { Bsdrtmservice1__RtmMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonTaskLogEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonTaskLogEntity (64)
/* Bsdrtmservice1:RtmMonTaskLogEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMonTaskLogEntity
{
public:
	std::string Taskuid;	/* required element of type xsd:decimal */
	std::string Logtype;	/* optional element of type xsd:string */
	time_t Logtime;	/* required element of type xsd:dateTime */
	std::string Content;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonTaskLogEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMonTaskLogEntity() { Bsdrtmservice1__RtmMonTaskLogEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMonTaskLogEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonAlertEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonAlertEntity (65)
/* Bsdrtmservice1:RtmMonAlertEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMonAlertEntity
{
public:
	std::string AlertUID;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string Freq;	/* required element of type xsd:decimal */
	std::string AlertBand;	/* required element of type xsd:decimal */
	std::string Stfield;	/* required element of type xsd:decimal */
	time_t Alertdate;	/* required element of type xsd:dateTime */
	std::string Content;	/* optional element of type xsd:string */
	std::string Userid;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMonAlertEntity() { Bsdrtmservice1__RtmMonAlertEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMonAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonAlertEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonAlertEntity (66)
/* Bsdrtmservice1:OptResultOfRtmMonAlertEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmMonAlertEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmMonAlertEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmMonAlertEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmMonAlertEntity() { Bsdrtmservice1__OptResultOfRtmMonAlertEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmMonAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonAlertEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonAlertEntity (67)
/* Bsdrtmservice1:ArrayOfRtmMonAlertEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmMonAlertEntity
{
public:
	int __sizeRtmMonAlertEntity;	/* sequence of elements <RtmMonAlertEntity> */
	Bsdrtmservice1__RtmMonAlertEntity **RtmMonAlertEntity;	/* optional element of type Bsdrtmservice1:RtmMonAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmMonAlertEntity() { Bsdrtmservice1__ArrayOfRtmMonAlertEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmMonAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity (68)
/* Bsdrtmservice1:OptResultOfRtmPredefinedMonitorEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmPredefinedMonitorEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity() { Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity (69)
/* Bsdrtmservice1:ArrayOfRtmPredefinedMonitorEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity
{
public:
	int __sizeRtmPredefinedMonitorEntity;	/* sequence of elements <RtmPredefinedMonitorEntity> */
	class Bsdrtmservice1__RtmPredefinedMonitorEntity **RtmPredefinedMonitorEntity;	/* optional element of type Bsdrtmservice1:RtmPredefinedMonitorEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity() { Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmPredefinedMonitorEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmPredefinedMonitorEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmPredefinedMonitorEntity (70)
/* Bsdrtmservice1:RtmPredefinedMonitorEntity */
class SOAP_CMAC Bsdrtmservice1__RtmPredefinedMonitorEntity
{
public:
	std::string MonUID;	/* required element of type xsd:decimal */
	std::string Monname;	/* optional element of type xsd:string */
	time_t Createtime;	/* required element of type xsd:dateTime */
	std::string Funno;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string Creator;	/* optional element of type xsd:string */
	std::string Monconfig;	/* optional element of type xsd:string */
	std::string Devparam;	/* optional element of type xsd:string */
	std::string Opttype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmPredefinedMonitorEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmPredefinedMonitorEntity() { Bsdrtmservice1__RtmPredefinedMonitorEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmPredefinedMonitorEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonReportEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonReportEntity (71)
/* Bsdrtmservice1:RtmMonReportEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMonReportEntity
{
public:
	std::string Reportuid;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Freq;	/* required element of type xsd:decimal */
	time_t Montime;	/* required element of type xsd:dateTime */
	std::string Fieldstrength;	/* required element of type xsd:decimal */
	std::string Azimuth;	/* required element of type xsd:decimal */
	std::string Spectrumtype;	/* optional element of type xsd:string */
	std::string Layoutdesc;	/* optional element of type xsd:string */
	std::string Monband;	/* required element of type xsd:decimal */
	std::string Used;	/* optional element of type xsd:string */
	std::string Userreport;	/* optional element of type xsd:string */
	time_t Availdate;	/* required element of type xsd:dateTime */
	std::string Confirmed;	/* optional element of type xsd:string */
	time_t Confirmdate;	/* required element of type xsd:dateTime */
	std::string Monempno;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMonReportEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMonReportEntity() { Bsdrtmservice1__RtmMonReportEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMonReportEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonReportEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonReportEntity (72)
/* Bsdrtmservice1:OptResultOfRtmMonReportEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmMonReportEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmMonReportEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmMonReportEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMonReportEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmMonReportEntity() { Bsdrtmservice1__OptResultOfRtmMonReportEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmMonReportEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonReportEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonReportEntity (73)
/* Bsdrtmservice1:ArrayOfRtmMonReportEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmMonReportEntity
{
public:
	int __sizeRtmMonReportEntity;	/* sequence of elements <RtmMonReportEntity> */
	Bsdrtmservice1__RtmMonReportEntity **RtmMonReportEntity;	/* optional element of type Bsdrtmservice1:RtmMonReportEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMonReportEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmMonReportEntity() { Bsdrtmservice1__ArrayOfRtmMonReportEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmMonReportEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfLong
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfLong (74)
/* Bsdrtmservice1:ArrayOfLong */
class SOAP_CMAC Bsdrtmservice1__ArrayOfLong
{
public:
	int __sizelong_;	/* sequence of elements <long> */
	LONG64 *long_;	/* optional element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfLong() { Bsdrtmservice1__ArrayOfLong::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfLong() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfBoolean
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfBoolean (75)
/* Bsdrtmservice1:OptResultOfBoolean */
class SOAP_CMAC Bsdrtmservice1__OptResultOfBoolean
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfBoolean *Data;	/* optional element of type Bsdrtmservice1:ArrayOfBoolean */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfBoolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfBoolean() { Bsdrtmservice1__OptResultOfBoolean::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfBoolean() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfBoolean
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfBoolean (76)
/* Bsdrtmservice1:ArrayOfBoolean */
class SOAP_CMAC Bsdrtmservice1__ArrayOfBoolean
{
public:
	int __sizeboolean;	/* sequence of elements <boolean> */
	bool *boolean;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfBoolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfBoolean() { Bsdrtmservice1__ArrayOfBoolean::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfBoolean() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfAttachment
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfAttachment (77)
/* Bsdrtmservice1:OptResultOfAttachment */
class SOAP_CMAC Bsdrtmservice1__OptResultOfAttachment
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfAttachment *Data;	/* optional element of type Bsdrtmservice1:ArrayOfAttachment */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfAttachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfAttachment() { Bsdrtmservice1__OptResultOfAttachment::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfAttachment() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfAttachment
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfAttachment (78)
/* Bsdrtmservice1:ArrayOfAttachment */
class SOAP_CMAC Bsdrtmservice1__ArrayOfAttachment
{
public:
	int __sizeAttachment;	/* sequence of elements <Attachment> */
	class Bsdrtmservice1__Attachment **Attachment;	/* optional element of type Bsdrtmservice1:Attachment */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfAttachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfAttachment() { Bsdrtmservice1__ArrayOfAttachment::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfAttachment() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__Attachment
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__Attachment (79)
/* Bsdrtmservice1:Attachment */
class SOAP_CMAC Bsdrtmservice1__Attachment
{
public:
	std::string FileID;	/* optional element of type xsd:string */
	std::string FileName;	/* optional element of type xsd:string */
	std::string State;	/* optional element of type xsd:string */
	LONG64 Length;	/* required element of type xsd:long */
	std::string SizeHtmlView;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__Attachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__Attachment() { Bsdrtmservice1__Attachment::soap_default(NULL); }
	virtual ~Bsdrtmservice1__Attachment() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfArrayOfByte
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfArrayOfByte (80)
/* Bsdrtmservice1:OptResultOfArrayOfByte */
class SOAP_CMAC Bsdrtmservice1__OptResultOfArrayOfByte
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfBase64Binary *Data;	/* optional element of type Bsdrtmservice1:ArrayOfBase64Binary */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfArrayOfByte */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfArrayOfByte() { Bsdrtmservice1__OptResultOfArrayOfByte::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfArrayOfByte() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfBase64Binary
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfBase64Binary (81)
/* Bsdrtmservice1:ArrayOfBase64Binary */
class SOAP_CMAC Bsdrtmservice1__ArrayOfBase64Binary
{
public:
	int __sizebase64Binary;	/* sequence of elements <base64Binary> */
	xsd__base64Binary *base64Binary;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfBase64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfBase64Binary() { Bsdrtmservice1__ArrayOfBase64Binary::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfBase64Binary() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMalfunctionAlertEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMalfunctionAlertEntity (82)
/* Bsdrtmservice1:RtmMalfunctionAlertEntity */
class SOAP_CMAC Bsdrtmservice1__RtmMalfunctionAlertEntity
{
public:
	std::string AlertUID;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devtype;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	int Alerttype;	/* required element of type xsd:int */
	int Alertlevel;	/* required element of type xsd:int */
	std::string Content;	/* optional element of type xsd:string */
	time_t Alertdate;	/* required element of type xsd:dateTime */
	int Confirmed;	/* required element of type xsd:int */
	std::string Note;	/* optional element of type xsd:string */
	std::string Remark;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmMalfunctionAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmMalfunctionAlertEntity() { Bsdrtmservice1__RtmMalfunctionAlertEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmMalfunctionAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfInt
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfInt (83)
/* Bsdrtmservice1:ArrayOfInt */
class SOAP_CMAC Bsdrtmservice1__ArrayOfInt
{
public:
	int __sizeint_;	/* sequence of elements <int> */
	int *int_;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfInt() { Bsdrtmservice1__ArrayOfInt::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfInt() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfInt64
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfInt64 (84)
/* Bsdrtmservice1:OptResultOfInt64 */
class SOAP_CMAC Bsdrtmservice1__OptResultOfInt64
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	Bsdrtmservice1__ArrayOfLong *Data;	/* optional element of type Bsdrtmservice1:ArrayOfLong */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfInt64 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfInt64() { Bsdrtmservice1__OptResultOfInt64::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfInt64() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity (85)
/* Bsdrtmservice1:OptResultOfRtmMalfunctionAlertEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtmMalfunctionAlertEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity() { Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity (86)
/* Bsdrtmservice1:ArrayOfRtmMalfunctionAlertEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity
{
public:
	int __sizeRtmMalfunctionAlertEntity;	/* sequence of elements <RtmMalfunctionAlertEntity> */
	Bsdrtmservice1__RtmMalfunctionAlertEntity **RtmMalfunctionAlertEntity;	/* optional element of type Bsdrtmservice1:RtmMalfunctionAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity() { Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtmMalfunctionAlertEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity (87)
/* Bsdrtmservice1:OptResultOfvRtmIntellMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfVRtmIntellMonTaskEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity() { Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity (88)
/* Bsdrtmservice1:ArrayOfVRtmIntellMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity
{
public:
	int __sizevRtmIntellMonTaskEntity;	/* sequence of elements <vRtmIntellMonTaskEntity> */
	class Bsdrtmservice1__vRtmIntellMonTaskEntity **vRtmIntellMonTaskEntity;	/* optional element of type Bsdrtmservice1:vRtmIntellMonTaskEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity() { Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfVRtmIntellMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmIntellMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmIntellMonTaskEntity (90)
/* Bsdrtmservice1:RtmIntellMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__RtmIntellMonTaskEntity
{
public:
	std::string TaskId;	/* required element of type xsd:decimal */
	std::string TaskName;	/* optional element of type xsd:string */
	time_t MonStartDate;	/* required element of type xsd:dateTime */
	time_t MonEndDate;	/* required element of type xsd:dateTime */
	std::string Manager;	/* optional element of type xsd:string */
	std::string Tel;	/* optional element of type xsd:string */
	std::string MonStationNo;	/* optional element of type xsd:string */
	std::string DevNo;	/* optional element of type xsd:string */
	std::string FunNo;	/* optional element of type xsd:string */
	std::string DevParam;	/* optional element of type xsd:string */
	std::string TaskDesc;	/* optional element of type xsd:string */
	std::string TaskConfig;	/* optional element of type xsd:string */
	std::string TaskState;	/* optional element of type xsd:string */
	std::string ArrowRun;	/* optional element of type xsd:string */
	time_t CreateTime;	/* required element of type xsd:dateTime */
	std::string MonType;	/* optional element of type xsd:string */
	std::string ScanType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__RtmIntellMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__RtmIntellMonTaskEntity() { Bsdrtmservice1__RtmIntellMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__RtmIntellMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity (91)
/* Bsdrtmservice1:OptResultOfRtm_mon_ems_devEntity */
class SOAP_CMAC Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity
{
public:
	std::string Result;	/* optional element of type xsd:string */
	std::string Msg;	/* optional element of type xsd:string */
	class Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity *Data;	/* optional element of type Bsdrtmservice1:ArrayOfRtm_mon_ems_devEntity */
	std::string UpdateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity() { Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity (92)
/* Bsdrtmservice1:ArrayOfRtm_mon_ems_devEntity */
class SOAP_CMAC Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity
{
public:
	int __sizeRtm_USCOREmon_USCOREems_USCOREdevEntity;	/* sequence of elements <Rtm_mon_ems_devEntity> */
	class Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity **Rtm_USCOREmon_USCOREems_USCOREdevEntity;	/* optional element of type Bsdrtmservice1:Rtm_mon_ems_devEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity() { Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__ArrayOfRtm_USCOREmon_USCOREems_USCOREdevEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity (93)
/* Bsdrtmservice1:Rtm_mon_ems_devEntity */
class SOAP_CMAC Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity
{
public:
	std::string EmsID;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string EDevID;	/* optional element of type xsd:string */
	std::string DataTypeID;	/* optional element of type xsd:string */
	std::string IsAlert;	/* required element of type xsd:decimal */
	std::string Content;	/* optional element of type xsd:string */
	std::string IsComfirm;	/* required element of type xsd:decimal */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity() { Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__Rtm_USCOREmon_USCOREems_USCOREdevEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID (94)
/* Bsdrtmservice1:GetMonStationsByUserID */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsByUserID
{
public:
	std::string userID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsByUserID() { _Bsdrtmservice1__GetMonStationsByUserID::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsByUserID() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserIDResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserIDResponse (95)
/* Bsdrtmservice1:GetMonStationsByUserIDResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsByUserIDResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetMonStationsByUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsByUserIDResponse() { _Bsdrtmservice1__GetMonStationsByUserIDResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsByUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID3 (96)
/* Bsdrtmservice1:GetMonStationsByUserID3 */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsByUserID3
{
public:
	std::string userID;	/* optional element of type xsd:string */
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsByUserID3() { _Bsdrtmservice1__GetMonStationsByUserID3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsByUserID3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID3Response (97)
/* Bsdrtmservice1:GetMonStationsByUserID3Response */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsByUserID3Response
{
public:
	Bsdrtmservice1__OptResultOfString *GetMonStationsByUserID3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByUserID3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsByUserID3Response() { _Bsdrtmservice1__GetMonStationsByUserID3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsByUserID3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes (98)
/* Bsdrtmservice1:GetMonStationTypes */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationTypes
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationTypes() { _Bsdrtmservice1__GetMonStationTypes::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationTypes() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypesResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypesResponse (99)
/* Bsdrtmservice1:GetMonStationTypesResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationTypesResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetMonStationTypesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationTypesResponse() { _Bsdrtmservice1__GetMonStationTypesResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationTypesResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes3 (100)
/* Bsdrtmservice1:GetMonStationTypes3 */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationTypes3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationTypes3() { _Bsdrtmservice1__GetMonStationTypes3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationTypes3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes3Response (101)
/* Bsdrtmservice1:GetMonStationTypes3Response */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationTypes3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetMonStationTypes3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationTypes3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationTypes3Response() { _Bsdrtmservice1__GetMonStationTypes3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationTypes3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes (102)
/* Bsdrtmservice1:GetDeviceTypes */
class SOAP_CMAC _Bsdrtmservice1__GetDeviceTypes
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDeviceTypes() { _Bsdrtmservice1__GetDeviceTypes::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDeviceTypes() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypesResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypesResponse (103)
/* Bsdrtmservice1:GetDeviceTypesResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDeviceTypesResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetDeviceTypesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDeviceTypesResponse() { _Bsdrtmservice1__GetDeviceTypesResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDeviceTypesResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes3 (104)
/* Bsdrtmservice1:GetDeviceTypes3 */
class SOAP_CMAC _Bsdrtmservice1__GetDeviceTypes3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDeviceTypes3() { _Bsdrtmservice1__GetDeviceTypes3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDeviceTypes3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes3Response (105)
/* Bsdrtmservice1:GetDeviceTypes3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDeviceTypes3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetDeviceTypes3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDeviceTypes3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDeviceTypes3Response() { _Bsdrtmservice1__GetDeviceTypes3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDeviceTypes3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols (106)
/* Bsdrtmservice1:GetDevProtocols */
class SOAP_CMAC _Bsdrtmservice1__GetDevProtocols
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevProtocols() { _Bsdrtmservice1__GetDevProtocols::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevProtocols() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocolsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocolsResponse (107)
/* Bsdrtmservice1:GetDevProtocolsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevProtocolsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetDevProtocolsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocolsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevProtocolsResponse() { _Bsdrtmservice1__GetDevProtocolsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevProtocolsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols3 (108)
/* Bsdrtmservice1:GetDevProtocols3 */
class SOAP_CMAC _Bsdrtmservice1__GetDevProtocols3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevProtocols3() { _Bsdrtmservice1__GetDevProtocols3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevProtocols3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols3Response (109)
/* Bsdrtmservice1:GetDevProtocols3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDevProtocols3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetDevProtocols3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevProtocols3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevProtocols3Response() { _Bsdrtmservice1__GetDevProtocols3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevProtocols3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs (110)
/* Bsdrtmservice1:GetFuncs */
class SOAP_CMAC _Bsdrtmservice1__GetFuncs
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetFuncs() { _Bsdrtmservice1__GetFuncs::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetFuncs() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncsResponse (111)
/* Bsdrtmservice1:GetFuncsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetFuncsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetFuncsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetFuncsResponse() { _Bsdrtmservice1__GetFuncsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetFuncsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs3 (112)
/* Bsdrtmservice1:GetFuncs3 */
class SOAP_CMAC _Bsdrtmservice1__GetFuncs3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetFuncs3() { _Bsdrtmservice1__GetFuncs3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetFuncs3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs3Response (113)
/* Bsdrtmservice1:GetFuncs3Response */
class SOAP_CMAC _Bsdrtmservice1__GetFuncs3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmTypeEntity *GetFuncs3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmTypeEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetFuncs3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetFuncs3Response() { _Bsdrtmservice1__GetFuncs3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetFuncs3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels (114)
/* Bsdrtmservice1:GetDevModels */
class SOAP_CMAC _Bsdrtmservice1__GetDevModels
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModels() { _Bsdrtmservice1__GetDevModels::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModels() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelsResponse (115)
/* Bsdrtmservice1:GetDevModelsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmDevModelEntity *GetDevModelsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmDevModelEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelsResponse() { _Bsdrtmservice1__GetDevModelsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels3 (116)
/* Bsdrtmservice1:GetDevModels3 */
class SOAP_CMAC _Bsdrtmservice1__GetDevModels3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModels3() { _Bsdrtmservice1__GetDevModels3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModels3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels3Response (117)
/* Bsdrtmservice1:GetDevModels3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDevModels3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmDevModelEntity *GetDevModels3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmDevModelEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModels3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModels3Response() { _Bsdrtmservice1__GetDevModels3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModels3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams (118)
/* Bsdrtmservice1:GetDevModelFuncParams */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelFuncParams
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelFuncParams() { _Bsdrtmservice1__GetDevModelFuncParams::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelFuncParams() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParamsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParamsResponse (119)
/* Bsdrtmservice1:GetDevModelFuncParamsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelFuncParamsResponse
{
public:
	Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity *GetDevModelFuncParamsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmDevModelFunParamEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParamsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelFuncParamsResponse() { _Bsdrtmservice1__GetDevModelFuncParamsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelFuncParamsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams3 (120)
/* Bsdrtmservice1:GetDevModelFuncParams3 */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelFuncParams3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelFuncParams3() { _Bsdrtmservice1__GetDevModelFuncParams3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelFuncParams3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams3Response (121)
/* Bsdrtmservice1:GetDevModelFuncParams3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelFuncParams3Response
{
public:
	Bsdrtmservice1__OptResultOfvRtmDevModelFunParamEntity *GetDevModelFuncParams3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmDevModelFunParamEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParams3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelFuncParams3Response() { _Bsdrtmservice1__GetDevModelFuncParams3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelFuncParams3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParam
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParam (122)
/* Bsdrtmservice1:GetDevModelFuncParam */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelFuncParam
{
public:
	std::string devModelName;	/* optional element of type xsd:string */
	std::string funcNo;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParam */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelFuncParam() { _Bsdrtmservice1__GetDevModelFuncParam::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelFuncParam() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParamResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParamResponse (123)
/* Bsdrtmservice1:GetDevModelFuncParamResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevModelFuncParamResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetDevModelFuncParamResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevModelFuncParamResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevModelFuncParamResponse() { _Bsdrtmservice1__GetDevModelFuncParamResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevModelFuncParamResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs (124)
/* Bsdrtmservice1:GetMonOrgs */
class SOAP_CMAC _Bsdrtmservice1__GetMonOrgs
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 124; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonOrgs() { _Bsdrtmservice1__GetMonOrgs::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonOrgs() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgsResponse (125)
/* Bsdrtmservice1:GetMonOrgsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonOrgsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMonOrgEntity *GetMonOrgsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMonOrgEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 125; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonOrgsResponse() { _Bsdrtmservice1__GetMonOrgsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonOrgsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs3 (126)
/* Bsdrtmservice1:GetMonOrgs3 */
class SOAP_CMAC _Bsdrtmservice1__GetMonOrgs3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonOrgs3() { _Bsdrtmservice1__GetMonOrgs3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonOrgs3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs3Response (127)
/* Bsdrtmservice1:GetMonOrgs3Response */
class SOAP_CMAC _Bsdrtmservice1__GetMonOrgs3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmMonOrgEntity *GetMonOrgs3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMonOrgEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 127; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonOrgs3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonOrgs3Response() { _Bsdrtmservice1__GetMonOrgs3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonOrgs3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters (128)
/* Bsdrtmservice1:GetMonControlCenters */
class SOAP_CMAC _Bsdrtmservice1__GetMonControlCenters
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 128; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonControlCenters() { _Bsdrtmservice1__GetMonControlCenters::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonControlCenters() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCentersResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCentersResponse (129)
/* Bsdrtmservice1:GetMonControlCentersResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonControlCentersResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmControlCenterEntity *GetMonControlCentersResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmControlCenterEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 129; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCentersResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonControlCentersResponse() { _Bsdrtmservice1__GetMonControlCentersResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonControlCentersResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters3 (130)
/* Bsdrtmservice1:GetMonControlCenters3 */
class SOAP_CMAC _Bsdrtmservice1__GetMonControlCenters3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 130; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonControlCenters3() { _Bsdrtmservice1__GetMonControlCenters3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonControlCenters3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters3Response (131)
/* Bsdrtmservice1:GetMonControlCenters3Response */
class SOAP_CMAC _Bsdrtmservice1__GetMonControlCenters3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmControlCenterEntity *GetMonControlCenters3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmControlCenterEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 131; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonControlCenters3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonControlCenters3Response() { _Bsdrtmservice1__GetMonControlCenters3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonControlCenters3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations (132)
/* Bsdrtmservice1:GetMonStations */
class SOAP_CMAC _Bsdrtmservice1__GetMonStations
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 132; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStations() { _Bsdrtmservice1__GetMonStations::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStations() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsResponse (133)
/* Bsdrtmservice1:GetMonStationsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsResponse
{
public:
	Bsdrtmservice1__OptResultOfvRtmMonStationEntity *GetMonStationsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmMonStationEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 133; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsResponse() { _Bsdrtmservice1__GetMonStationsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations3 (134)
/* Bsdrtmservice1:GetMonStations3 */
class SOAP_CMAC _Bsdrtmservice1__GetMonStations3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStations3() { _Bsdrtmservice1__GetMonStations3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStations3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations3Response (135)
/* Bsdrtmservice1:GetMonStations3Response */
class SOAP_CMAC _Bsdrtmservice1__GetMonStations3Response
{
public:
	Bsdrtmservice1__OptResultOfvRtmMonStationEntity *GetMonStations3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmMonStationEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 135; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStations3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStations3Response() { _Bsdrtmservice1__GetMonStations3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStations3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs (136)
/* Bsdrtmservice1:GetRNCs */
class SOAP_CMAC _Bsdrtmservice1__GetRNCs
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 136; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRNCs() { _Bsdrtmservice1__GetRNCs::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRNCs() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCsResponse (137)
/* Bsdrtmservice1:GetRNCsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetRNCsResponse
{
public:
	Bsdrtmservice1__OptResultOfvRtmRncPORTEntity *GetRNCsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmRncPORTEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRNCsResponse() { _Bsdrtmservice1__GetRNCsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRNCsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs3 (138)
/* Bsdrtmservice1:GetRNCs3 */
class SOAP_CMAC _Bsdrtmservice1__GetRNCs3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRNCs3() { _Bsdrtmservice1__GetRNCs3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRNCs3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs3Response (139)
/* Bsdrtmservice1:GetRNCs3Response */
class SOAP_CMAC _Bsdrtmservice1__GetRNCs3Response
{
public:
	Bsdrtmservice1__OptResultOfvRtmRncPORTEntity *GetRNCs3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmRncPORTEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 139; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRNCs3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRNCs3Response() { _Bsdrtmservice1__GetRNCs3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRNCs3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs (140)
/* Bsdrtmservice1:GetAllRNCs */
class SOAP_CMAC _Bsdrtmservice1__GetAllRNCs
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 140; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllRNCs() { _Bsdrtmservice1__GetAllRNCs::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllRNCs() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCsResponse (141)
/* Bsdrtmservice1:GetAllRNCsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetAllRNCsResponse
{
public:
	Bsdrtmservice1__OptResultOfvRtmRncPort2Entity *GetAllRNCsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmRncPort2Entity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 141; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllRNCsResponse() { _Bsdrtmservice1__GetAllRNCsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllRNCsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs3 (142)
/* Bsdrtmservice1:GetAllRNCs3 */
class SOAP_CMAC _Bsdrtmservice1__GetAllRNCs3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 142; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllRNCs3() { _Bsdrtmservice1__GetAllRNCs3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllRNCs3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs3Response (143)
/* Bsdrtmservice1:GetAllRNCs3Response */
class SOAP_CMAC _Bsdrtmservice1__GetAllRNCs3Response
{
public:
	Bsdrtmservice1__OptResultOfvRtmRncPort2Entity *GetAllRNCs3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmRncPort2Entity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 143; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllRNCs3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllRNCs3Response() { _Bsdrtmservice1__GetAllRNCs3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllRNCs3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetRNCPassword
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetRNCPassword (144)
/* Bsdrtmservice1:SetRNCPassword */
class SOAP_CMAC _Bsdrtmservice1__SetRNCPassword
{
public:
	std::string rncUid;	/* optional element of type xsd:string */
	std::string password;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 144; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetRNCPassword */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetRNCPassword() { _Bsdrtmservice1__SetRNCPassword::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetRNCPassword() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetRNCPasswordResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetRNCPasswordResponse (145)
/* Bsdrtmservice1:SetRNCPasswordResponse */
class SOAP_CMAC _Bsdrtmservice1__SetRNCPasswordResponse
{
public:
	Bsdrtmservice1__OptResultOfString *SetRNCPasswordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 145; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetRNCPasswordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetRNCPasswordResponse() { _Bsdrtmservice1__SetRNCPasswordResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetRNCPasswordResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices (146)
/* Bsdrtmservice1:GetDevices */
class SOAP_CMAC _Bsdrtmservice1__GetDevices
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 146; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevices() { _Bsdrtmservice1__GetDevices::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevices() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevicesResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevicesResponse (147)
/* Bsdrtmservice1:GetDevicesResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevicesResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmDeviceEntity *GetDevicesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmDeviceEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 147; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevicesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevicesResponse() { _Bsdrtmservice1__GetDevicesResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevicesResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices3 (148)
/* Bsdrtmservice1:GetDevices3 */
class SOAP_CMAC _Bsdrtmservice1__GetDevices3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 148; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevices3() { _Bsdrtmservice1__GetDevices3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevices3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices3Response (149)
/* Bsdrtmservice1:GetDevices3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDevices3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmDeviceEntity *GetDevices3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmDeviceEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 149; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevices3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevices3Response() { _Bsdrtmservice1__GetDevices3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevices3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns (150)
/* Bsdrtmservice1:GetDevFuns */
class SOAP_CMAC _Bsdrtmservice1__GetDevFuns
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 150; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFuns() { _Bsdrtmservice1__GetDevFuns::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFuns() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunsResponse (151)
/* Bsdrtmservice1:GetDevFunsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevFunsResponse
{
public:
	Bsdrtmservice1__OptResultOfVRtmDevFunEntity *GetDevFunsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfVRtmDevFunEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 151; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFunsResponse() { _Bsdrtmservice1__GetDevFunsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFunsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns3 (152)
/* Bsdrtmservice1:GetDevFuns3 */
class SOAP_CMAC _Bsdrtmservice1__GetDevFuns3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 152; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFuns3() { _Bsdrtmservice1__GetDevFuns3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFuns3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns3Response (153)
/* Bsdrtmservice1:GetDevFuns3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDevFuns3Response
{
public:
	Bsdrtmservice1__OptResultOfVRtmDevFunEntity *GetDevFuns3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfVRtmDevFunEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 153; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFuns3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFuns3Response() { _Bsdrtmservice1__GetDevFuns3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFuns3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts (154)
/* Bsdrtmservice1:GetDevFunAnts */
class SOAP_CMAC _Bsdrtmservice1__GetDevFunAnts
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 154; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFunAnts() { _Bsdrtmservice1__GetDevFunAnts::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFunAnts() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAntsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAntsResponse (155)
/* Bsdrtmservice1:GetDevFunAntsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetDevFunAntsResponse
{
public:
	Bsdrtmservice1__OptResultOfvRtmDevAntEntity *GetDevFunAntsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmDevAntEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 155; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAntsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFunAntsResponse() { _Bsdrtmservice1__GetDevFunAntsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFunAntsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts3 (156)
/* Bsdrtmservice1:GetDevFunAnts3 */
class SOAP_CMAC _Bsdrtmservice1__GetDevFunAnts3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 156; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFunAnts3() { _Bsdrtmservice1__GetDevFunAnts3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFunAnts3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts3Response (157)
/* Bsdrtmservice1:GetDevFunAnts3Response */
class SOAP_CMAC _Bsdrtmservice1__GetDevFunAnts3Response
{
public:
	Bsdrtmservice1__OptResultOfvRtmDevAntEntity *GetDevFunAnts3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmDevAntEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 157; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetDevFunAnts3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetDevFunAnts3Response() { _Bsdrtmservice1__GetDevFunAnts3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetDevFunAnts3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAnts3
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAnts3 (158)
/* Bsdrtmservice1:GetAnts3 */
class SOAP_CMAC _Bsdrtmservice1__GetAnts3
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 158; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAnts3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAnts3() { _Bsdrtmservice1__GetAnts3::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAnts3() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAnts3Response
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAnts3Response (159)
/* Bsdrtmservice1:GetAnts3Response */
class SOAP_CMAC _Bsdrtmservice1__GetAnts3Response
{
public:
	Bsdrtmservice1__OptResultOfRtmAntEntity *GetAnts3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmAntEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 159; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAnts3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAnts3Response() { _Bsdrtmservice1__GetAnts3Response::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAnts3Response() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllAnts
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllAnts (160)
/* Bsdrtmservice1:GetAllAnts */
class SOAP_CMAC _Bsdrtmservice1__GetAllAnts
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 160; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllAnts */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllAnts() { _Bsdrtmservice1__GetAllAnts::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllAnts() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllAntsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllAntsResponse (161)
/* Bsdrtmservice1:GetAllAntsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetAllAntsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmAntEntity *GetAllAntsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmAntEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 161; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllAntsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllAntsResponse() { _Bsdrtmservice1__GetAllAntsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllAntsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddDevUseLog
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddDevUseLog (162)
/* Bsdrtmservice1:AddDevUseLog */
class SOAP_CMAC _Bsdrtmservice1__AddDevUseLog
{
public:
	Bsdrtmservice1__RtmDevUseLogEntity *useLog;	/* optional element of type Bsdrtmservice1:RtmDevUseLogEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 162; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddDevUseLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddDevUseLog() { _Bsdrtmservice1__AddDevUseLog::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddDevUseLog() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddDevUseLogResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddDevUseLogResponse (163)
/* Bsdrtmservice1:AddDevUseLogResponse */
class SOAP_CMAC _Bsdrtmservice1__AddDevUseLogResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddDevUseLogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 163; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddDevUseLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddDevUseLogResponse() { _Bsdrtmservice1__AddDevUseLogResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddDevUseLogResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeOfMonth
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeOfMonth (164)
/* Bsdrtmservice1:GetMonstationUseTimeOfMonth */
class SOAP_CMAC _Bsdrtmservice1__GetMonstationUseTimeOfMonth
{
public:
	std::string monStationNo;	/* optional element of type xsd:string */
	std::string month;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 164; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeOfMonth */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonstationUseTimeOfMonth() { _Bsdrtmservice1__GetMonstationUseTimeOfMonth::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonstationUseTimeOfMonth() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse (165)
/* Bsdrtmservice1:GetMonstationUseTimeOfMonthResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse
{
public:
	Bsdrtmservice1__OptResultOfTimeSpan *GetMonstationUseTimeOfMonthResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfTimeSpan */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 165; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse() { _Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonstationUseTimeOfMonthResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTime
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTime (166)
/* Bsdrtmservice1:GetMonstationUseTime */
class SOAP_CMAC _Bsdrtmservice1__GetMonstationUseTime
{
public:
	std::string monStationNo;	/* optional element of type xsd:string */
	std::string startDate;	/* optional element of type xsd:string */
	std::string endDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 166; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonstationUseTime() { _Bsdrtmservice1__GetMonstationUseTime::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonstationUseTime() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeResponse (167)
/* Bsdrtmservice1:GetMonstationUseTimeResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonstationUseTimeResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetMonstationUseTimeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 167; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonstationUseTimeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonstationUseTimeResponse() { _Bsdrtmservice1__GetMonstationUseTimeResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonstationUseTimeResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskIds
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskIds (168)
/* Bsdrtmservice1:GetRuningTaskIds */
class SOAP_CMAC _Bsdrtmservice1__GetRuningTaskIds
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 168; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskIds */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRuningTaskIds() { _Bsdrtmservice1__GetRuningTaskIds::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRuningTaskIds() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskIdsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskIdsResponse (169)
/* Bsdrtmservice1:GetRuningTaskIdsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetRuningTaskIdsResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetRuningTaskIdsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 169; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskIdsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRuningTaskIdsResponse() { _Bsdrtmservice1__GetRuningTaskIdsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRuningTaskIdsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskById
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskById (170)
/* Bsdrtmservice1:GetRuningTaskById */
class SOAP_CMAC _Bsdrtmservice1__GetRuningTaskById
{
public:
	std::string taskId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 170; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRuningTaskById() { _Bsdrtmservice1__GetRuningTaskById::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRuningTaskById() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskByIdResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskByIdResponse (171)
/* Bsdrtmservice1:GetRuningTaskByIdResponse */
class SOAP_CMAC _Bsdrtmservice1__GetRuningTaskByIdResponse
{
public:
	Bsdrtmservice1__OptResultOfVRtmMonTaskEntity *GetRuningTaskByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfVRtmMonTaskEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 171; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningTaskByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRuningTaskByIdResponse() { _Bsdrtmservice1__GetRuningTaskByIdResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRuningTaskByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddTaskLog
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddTaskLog (172)
/* Bsdrtmservice1:AddTaskLog */
class SOAP_CMAC _Bsdrtmservice1__AddTaskLog
{
public:
	Bsdrtmservice1__RtmMonTaskLogEntity *taskLog;	/* optional element of type Bsdrtmservice1:RtmMonTaskLogEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 172; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddTaskLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddTaskLog() { _Bsdrtmservice1__AddTaskLog::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddTaskLog() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddTaskLogResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddTaskLogResponse (173)
/* Bsdrtmservice1:AddTaskLogResponse */
class SOAP_CMAC _Bsdrtmservice1__AddTaskLogResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddTaskLogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 173; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddTaskLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddTaskLogResponse() { _Bsdrtmservice1__AddTaskLogResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddTaskLogResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetTaskState
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetTaskState (174)
/* Bsdrtmservice1:SetTaskState */
class SOAP_CMAC _Bsdrtmservice1__SetTaskState
{
public:
	std::string taskId;	/* optional element of type xsd:string */
	std::string taskState;	/* optional element of type xsd:string */
	std::string stateDesc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 174; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetTaskState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetTaskState() { _Bsdrtmservice1__SetTaskState::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetTaskState() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetTaskStateResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetTaskStateResponse (175)
/* Bsdrtmservice1:SetTaskStateResponse */
class SOAP_CMAC _Bsdrtmservice1__SetTaskStateResponse
{
public:
	Bsdrtmservice1__OptResultOfString *SetTaskStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 175; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetTaskStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetTaskStateResponse() { _Bsdrtmservice1__SetTaskStateResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetTaskStateResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonAlert
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonAlert (176)
/* Bsdrtmservice1:AddMonAlert */
class SOAP_CMAC _Bsdrtmservice1__AddMonAlert
{
public:
	Bsdrtmservice1__RtmMonAlertEntity *alert;	/* optional element of type Bsdrtmservice1:RtmMonAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 176; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonAlert */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMonAlert() { _Bsdrtmservice1__AddMonAlert::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMonAlert() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonAlertResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonAlertResponse (177)
/* Bsdrtmservice1:AddMonAlertResponse */
class SOAP_CMAC _Bsdrtmservice1__AddMonAlertResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddMonAlertResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 177; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonAlertResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMonAlertResponse() { _Bsdrtmservice1__AddMonAlertResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMonAlertResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfMonth
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfMonth (178)
/* Bsdrtmservice1:GetMonAlertOfMonth */
class SOAP_CMAC _Bsdrtmservice1__GetMonAlertOfMonth
{
public:
	std::string month;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 178; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfMonth */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonAlertOfMonth() { _Bsdrtmservice1__GetMonAlertOfMonth::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonAlertOfMonth() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfMonthResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfMonthResponse (179)
/* Bsdrtmservice1:GetMonAlertOfMonthResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonAlertOfMonthResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMonAlertEntity *GetMonAlertOfMonthResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMonAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 179; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfMonthResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonAlertOfMonthResponse() { _Bsdrtmservice1__GetMonAlertOfMonthResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonAlertOfMonthResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfDay
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfDay (180)
/* Bsdrtmservice1:GetMonAlertOfDay */
class SOAP_CMAC _Bsdrtmservice1__GetMonAlertOfDay
{
public:
	std::string day;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 180; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfDay */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonAlertOfDay() { _Bsdrtmservice1__GetMonAlertOfDay::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonAlertOfDay() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfDayResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfDayResponse (181)
/* Bsdrtmservice1:GetMonAlertOfDayResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonAlertOfDayResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMonAlertEntity *GetMonAlertOfDayResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMonAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 181; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonAlertOfDayResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonAlertOfDayResponse() { _Bsdrtmservice1__GetMonAlertOfDayResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonAlertOfDayResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPreDefinedMonitors
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPreDefinedMonitors (182)
/* Bsdrtmservice1:GetPreDefinedMonitors */
class SOAP_CMAC _Bsdrtmservice1__GetPreDefinedMonitors
{
public:
	std::string update;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 182; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPreDefinedMonitors */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetPreDefinedMonitors() { _Bsdrtmservice1__GetPreDefinedMonitors::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetPreDefinedMonitors() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPreDefinedMonitorsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPreDefinedMonitorsResponse (183)
/* Bsdrtmservice1:GetPreDefinedMonitorsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetPreDefinedMonitorsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmPredefinedMonitorEntity *GetPreDefinedMonitorsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmPredefinedMonitorEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 183; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPreDefinedMonitorsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetPreDefinedMonitorsResponse() { _Bsdrtmservice1__GetPreDefinedMonitorsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetPreDefinedMonitorsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReport
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReport (184)
/* Bsdrtmservice1:AddMonReport */
class SOAP_CMAC _Bsdrtmservice1__AddMonReport
{
public:
	Bsdrtmservice1__RtmMonReportEntity *report;	/* optional element of type Bsdrtmservice1:RtmMonReportEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 184; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReport */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMonReport() { _Bsdrtmservice1__AddMonReport::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMonReport() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportResponse (185)
/* Bsdrtmservice1:AddMonReportResponse */
class SOAP_CMAC _Bsdrtmservice1__AddMonReportResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddMonReportResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 185; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMonReportResponse() { _Bsdrtmservice1__AddMonReportResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMonReportResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReport
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReport (186)
/* Bsdrtmservice1:DelMonReport */
class SOAP_CMAC _Bsdrtmservice1__DelMonReport
{
public:
	std::string reportID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 186; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReport */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__DelMonReport() { _Bsdrtmservice1__DelMonReport::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__DelMonReport() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportResponse (187)
/* Bsdrtmservice1:DelMonReportResponse */
class SOAP_CMAC _Bsdrtmservice1__DelMonReportResponse
{
public:
	Bsdrtmservice1__OptResultOfString *DelMonReportResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 187; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__DelMonReportResponse() { _Bsdrtmservice1__DelMonReportResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__DelMonReportResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportOfFreq
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportOfFreq (188)
/* Bsdrtmservice1:GetMonReportOfFreq */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportOfFreq
{
public:
	std::string monStationno;	/* optional element of type xsd:string */
	LONG64 freq;	/* required element of type xsd:long */
	std::string startTime;	/* optional element of type xsd:string */
	std::string endTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 188; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportOfFreq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportOfFreq() { _Bsdrtmservice1__GetMonReportOfFreq::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportOfFreq() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportOfFreqResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportOfFreqResponse (189)
/* Bsdrtmservice1:GetMonReportOfFreqResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportOfFreqResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMonReportEntity *GetMonReportOfFreqResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMonReportEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 189; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportOfFreqResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportOfFreqResponse() { _Bsdrtmservice1__GetMonReportOfFreqResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportOfFreqResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportsOfFreqs
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportsOfFreqs (190)
/* Bsdrtmservice1:GetMonReportsOfFreqs */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportsOfFreqs
{
public:
	std::string monStationno;	/* optional element of type xsd:string */
	Bsdrtmservice1__ArrayOfLong *freqs;	/* optional element of type Bsdrtmservice1:ArrayOfLong */
	std::string startTime;	/* optional element of type xsd:string */
	std::string endTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 190; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportsOfFreqs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportsOfFreqs() { _Bsdrtmservice1__GetMonReportsOfFreqs::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportsOfFreqs() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportsOfFreqsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportsOfFreqsResponse (191)
/* Bsdrtmservice1:GetMonReportsOfFreqsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportsOfFreqsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMonReportEntity *GetMonReportsOfFreqsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMonReportEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 191; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportsOfFreqsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportsOfFreqsResponse() { _Bsdrtmservice1__GetMonReportsOfFreqsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportsOfFreqsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportFreqTypes
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportFreqTypes (192)
/* Bsdrtmservice1:GetMonReportFreqTypes */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportFreqTypes
{
public:
	std::string monStationno;	/* optional element of type xsd:string */
	Bsdrtmservice1__ArrayOfLong *freqs;	/* optional element of type Bsdrtmservice1:ArrayOfLong */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 192; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportFreqTypes */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportFreqTypes() { _Bsdrtmservice1__GetMonReportFreqTypes::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportFreqTypes() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportFreqTypesResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportFreqTypesResponse (193)
/* Bsdrtmservice1:GetMonReportFreqTypesResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportFreqTypesResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetMonReportFreqTypesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 193; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportFreqTypesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportFreqTypesResponse() { _Bsdrtmservice1__GetMonReportFreqTypesResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportFreqTypesResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__ExistMonReportofFreq
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__ExistMonReportofFreq (194)
/* Bsdrtmservice1:ExistMonReportofFreq */
class SOAP_CMAC _Bsdrtmservice1__ExistMonReportofFreq
{
public:
	std::string monStationNo;	/* optional element of type xsd:string */
	LONG64 freq;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 194; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__ExistMonReportofFreq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__ExistMonReportofFreq() { _Bsdrtmservice1__ExistMonReportofFreq::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__ExistMonReportofFreq() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__ExistMonReportofFreqResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__ExistMonReportofFreqResponse (195)
/* Bsdrtmservice1:ExistMonReportofFreqResponse */
class SOAP_CMAC _Bsdrtmservice1__ExistMonReportofFreqResponse
{
public:
	Bsdrtmservice1__OptResultOfBoolean *ExistMonReportofFreqResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfBoolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 195; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__ExistMonReportofFreqResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__ExistMonReportofFreqResponse() { _Bsdrtmservice1__ExistMonReportofFreqResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__ExistMonReportofFreqResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachments
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachments (196)
/* Bsdrtmservice1:GetMonReportAttachments */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportAttachments
{
public:
	std::string reportID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 196; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachments */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportAttachments() { _Bsdrtmservice1__GetMonReportAttachments::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportAttachments() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentsResponse (197)
/* Bsdrtmservice1:GetMonReportAttachmentsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportAttachmentsResponse
{
public:
	Bsdrtmservice1__OptResultOfAttachment *GetMonReportAttachmentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfAttachment */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 197; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportAttachmentsResponse() { _Bsdrtmservice1__GetMonReportAttachmentsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportAttachmentsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentContent
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentContent (198)
/* Bsdrtmservice1:GetMonReportAttachmentContent */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportAttachmentContent
{
public:
	std::string fileID;	/* optional element of type xsd:string */
	xsd__base64Binary *binData;	/* optional element of type xsd:base64Binary */
	LONG64 offSet;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 198; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportAttachmentContent() { _Bsdrtmservice1__GetMonReportAttachmentContent::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportAttachmentContent() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentContentResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentContentResponse (199)
/* Bsdrtmservice1:GetMonReportAttachmentContentResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonReportAttachmentContentResponse
{
public:
	Bsdrtmservice1__OptResultOfArrayOfByte *GetMonReportAttachmentContentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfArrayOfByte */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 199; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonReportAttachmentContentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonReportAttachmentContentResponse() { _Bsdrtmservice1__GetMonReportAttachmentContentResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonReportAttachmentContentResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportAttachment
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportAttachment (200)
/* Bsdrtmservice1:AddMonReportAttachment */
class SOAP_CMAC _Bsdrtmservice1__AddMonReportAttachment
{
public:
	std::string reportID;	/* optional element of type xsd:string */
	std::string fileName;	/* optional element of type xsd:string */
	xsd__base64Binary *binData;	/* optional element of type xsd:base64Binary */
	LONG64 offSet;	/* required element of type xsd:long */
	std::string flag;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 200; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportAttachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMonReportAttachment() { _Bsdrtmservice1__AddMonReportAttachment::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMonReportAttachment() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportAttachmentResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportAttachmentResponse (201)
/* Bsdrtmservice1:AddMonReportAttachmentResponse */
class SOAP_CMAC _Bsdrtmservice1__AddMonReportAttachmentResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddMonReportAttachmentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 201; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMonReportAttachmentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMonReportAttachmentResponse() { _Bsdrtmservice1__AddMonReportAttachmentResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMonReportAttachmentResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportAttachment
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportAttachment (202)
/* Bsdrtmservice1:DelMonReportAttachment */
class SOAP_CMAC _Bsdrtmservice1__DelMonReportAttachment
{
public:
	std::string reportID;	/* optional element of type xsd:string */
	std::string fileID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 202; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportAttachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__DelMonReportAttachment() { _Bsdrtmservice1__DelMonReportAttachment::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__DelMonReportAttachment() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportAttachmentResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportAttachmentResponse (203)
/* Bsdrtmservice1:DelMonReportAttachmentResponse */
class SOAP_CMAC _Bsdrtmservice1__DelMonReportAttachmentResponse
{
public:
	Bsdrtmservice1__OptResultOfString *DelMonReportAttachmentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 203; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__DelMonReportAttachmentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__DelMonReportAttachmentResponse() { _Bsdrtmservice1__DelMonReportAttachmentResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__DelMonReportAttachmentResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMalfunctionAlert
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMalfunctionAlert (204)
/* Bsdrtmservice1:AddMalfunctionAlert */
class SOAP_CMAC _Bsdrtmservice1__AddMalfunctionAlert
{
public:
	Bsdrtmservice1__RtmMalfunctionAlertEntity *alert;	/* optional element of type Bsdrtmservice1:RtmMalfunctionAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 204; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMalfunctionAlert */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMalfunctionAlert() { _Bsdrtmservice1__AddMalfunctionAlert::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMalfunctionAlert() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMalfunctionAlertResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMalfunctionAlertResponse (205)
/* Bsdrtmservice1:AddMalfunctionAlertResponse */
class SOAP_CMAC _Bsdrtmservice1__AddMalfunctionAlertResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddMalfunctionAlertResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 205; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddMalfunctionAlertResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddMalfunctionAlertResponse() { _Bsdrtmservice1__AddMalfunctionAlertResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddMalfunctionAlertResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionCode
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionCode (206)
/* Bsdrtmservice1:GetMalfunctionCode */
class SOAP_CMAC _Bsdrtmservice1__GetMalfunctionCode
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 206; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionCode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMalfunctionCode() { _Bsdrtmservice1__GetMalfunctionCode::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMalfunctionCode() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionCodeResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionCodeResponse (207)
/* Bsdrtmservice1:GetMalfunctionCodeResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMalfunctionCodeResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetMalfunctionCodeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 207; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionCodeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMalfunctionCodeResponse() { _Bsdrtmservice1__GetMalfunctionCodeResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMalfunctionCodeResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllMalfunctionAlertCount
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllMalfunctionAlertCount (208)
/* Bsdrtmservice1:GetAllMalfunctionAlertCount */
class SOAP_CMAC _Bsdrtmservice1__GetAllMalfunctionAlertCount
{
public:
	Bsdrtmservice1__ArrayOfString *monstationNos;	/* optional element of type Bsdrtmservice1:ArrayOfString */
	Bsdrtmservice1__ArrayOfInt *alertTypes;	/* optional element of type Bsdrtmservice1:ArrayOfInt */
	int alertLevel;	/* required element of type xsd:int */
	bool confirmed;	/* required element of type xsd:boolean */
	std::string startDate;	/* optional element of type xsd:string */
	std::string endDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 208; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllMalfunctionAlertCount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllMalfunctionAlertCount() { _Bsdrtmservice1__GetAllMalfunctionAlertCount::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllMalfunctionAlertCount() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllMalfunctionAlertCountResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllMalfunctionAlertCountResponse (209)
/* Bsdrtmservice1:GetAllMalfunctionAlertCountResponse */
class SOAP_CMAC _Bsdrtmservice1__GetAllMalfunctionAlertCountResponse
{
public:
	Bsdrtmservice1__OptResultOfInt64 *GetAllMalfunctionAlertCountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfInt64 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 209; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetAllMalfunctionAlertCountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetAllMalfunctionAlertCountResponse() { _Bsdrtmservice1__GetAllMalfunctionAlertCountResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetAllMalfunctionAlertCountResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPageMalfunctionAlerts
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPageMalfunctionAlerts (210)
/* Bsdrtmservice1:GetPageMalfunctionAlerts */
class SOAP_CMAC _Bsdrtmservice1__GetPageMalfunctionAlerts
{
public:
	int pageSize;	/* required element of type xsd:int */
	int pageIndex;	/* required element of type xsd:int */
	Bsdrtmservice1__ArrayOfString *monstationNos;	/* optional element of type Bsdrtmservice1:ArrayOfString */
	Bsdrtmservice1__ArrayOfInt *alertTypes;	/* optional element of type Bsdrtmservice1:ArrayOfInt */
	int alertLevel;	/* required element of type xsd:int */
	bool confirmed;	/* required element of type xsd:boolean */
	std::string startDate;	/* optional element of type xsd:string */
	std::string endDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 210; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPageMalfunctionAlerts */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetPageMalfunctionAlerts() { _Bsdrtmservice1__GetPageMalfunctionAlerts::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetPageMalfunctionAlerts() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPageMalfunctionAlertsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPageMalfunctionAlertsResponse (211)
/* Bsdrtmservice1:GetPageMalfunctionAlertsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetPageMalfunctionAlertsResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity *GetPageMalfunctionAlertsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMalfunctionAlertEntity */
	int totalCount;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 211; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetPageMalfunctionAlertsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetPageMalfunctionAlertsResponse() { _Bsdrtmservice1__GetPageMalfunctionAlertsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetPageMalfunctionAlertsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionAlertOfMonstationno
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionAlertOfMonstationno (212)
/* Bsdrtmservice1:GetMalfunctionAlertOfMonstationno */
class SOAP_CMAC _Bsdrtmservice1__GetMalfunctionAlertOfMonstationno
{
public:
	std::string monstationNo;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 212; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionAlertOfMonstationno */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMalfunctionAlertOfMonstationno() { _Bsdrtmservice1__GetMalfunctionAlertOfMonstationno::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMalfunctionAlertOfMonstationno() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse (213)
/* Bsdrtmservice1:GetMalfunctionAlertOfMonstationnoResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse
{
public:
	Bsdrtmservice1__OptResultOfRtmMalfunctionAlertEntity *GetMalfunctionAlertOfMonstationnoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtmMalfunctionAlertEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 213; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse() { _Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMalfunctionAlertOfMonstationnoResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetConfirmedState
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetConfirmedState (214)
/* Bsdrtmservice1:SetConfirmedState */
class SOAP_CMAC _Bsdrtmservice1__SetConfirmedState
{
public:
	std::string alertUid;	/* optional element of type xsd:string */
	int confirmed;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 214; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetConfirmedState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetConfirmedState() { _Bsdrtmservice1__SetConfirmedState::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetConfirmedState() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetConfirmedStateResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetConfirmedStateResponse (215)
/* Bsdrtmservice1:SetConfirmedStateResponse */
class SOAP_CMAC _Bsdrtmservice1__SetConfirmedStateResponse
{
public:
	Bsdrtmservice1__OptResultOfString *SetConfirmedStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 215; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetConfirmedStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetConfirmedStateResponse() { _Bsdrtmservice1__SetConfirmedStateResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetConfirmedStateResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByVideo
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByVideo (216)
/* Bsdrtmservice1:GetMonStationsByVideo */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsByVideo
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 216; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByVideo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsByVideo() { _Bsdrtmservice1__GetMonStationsByVideo::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsByVideo() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByVideoResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByVideoResponse (217)
/* Bsdrtmservice1:GetMonStationsByVideoResponse */
class SOAP_CMAC _Bsdrtmservice1__GetMonStationsByVideoResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetMonStationsByVideoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 217; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetMonStationsByVideoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetMonStationsByVideoResponse() { _Bsdrtmservice1__GetMonStationsByVideoResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetMonStationsByVideoResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningIntellTaskIds
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningIntellTaskIds (218)
/* Bsdrtmservice1:GetRuningIntellTaskIds */
class SOAP_CMAC _Bsdrtmservice1__GetRuningIntellTaskIds
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 218; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningIntellTaskIds */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRuningIntellTaskIds() { _Bsdrtmservice1__GetRuningIntellTaskIds::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRuningIntellTaskIds() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningIntellTaskIdsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningIntellTaskIdsResponse (219)
/* Bsdrtmservice1:GetRuningIntellTaskIdsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetRuningIntellTaskIdsResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetRuningIntellTaskIdsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 219; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetRuningIntellTaskIdsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetRuningIntellTaskIdsResponse() { _Bsdrtmservice1__GetRuningIntellTaskIdsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetRuningIntellTaskIdsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIntellTask
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIntellTask (220)
/* Bsdrtmservice1:GetIntellTask */
class SOAP_CMAC _Bsdrtmservice1__GetIntellTask
{
public:
	std::string taskId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 220; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIntellTask */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetIntellTask() { _Bsdrtmservice1__GetIntellTask::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetIntellTask() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIntellTaskResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIntellTaskResponse (221)
/* Bsdrtmservice1:GetIntellTaskResponse */
class SOAP_CMAC _Bsdrtmservice1__GetIntellTaskResponse
{
public:
	Bsdrtmservice1__OptResultOfvRtmIntellMonTaskEntity *GetIntellTaskResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfvRtmIntellMonTaskEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 221; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIntellTaskResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetIntellTaskResponse() { _Bsdrtmservice1__GetIntellTaskResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetIntellTaskResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddInetllTaskLog
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddInetllTaskLog (222)
/* Bsdrtmservice1:AddInetllTaskLog */
class SOAP_CMAC _Bsdrtmservice1__AddInetllTaskLog
{
public:
	Bsdrtmservice1__RtmMonTaskLogEntity *taskLog;	/* optional element of type Bsdrtmservice1:RtmMonTaskLogEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 222; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddInetllTaskLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddInetllTaskLog() { _Bsdrtmservice1__AddInetllTaskLog::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddInetllTaskLog() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddInetllTaskLogResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddInetllTaskLogResponse (223)
/* Bsdrtmservice1:AddInetllTaskLogResponse */
class SOAP_CMAC _Bsdrtmservice1__AddInetllTaskLogResponse
{
public:
	Bsdrtmservice1__OptResultOfString *AddInetllTaskLogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 223; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__AddInetllTaskLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__AddInetllTaskLogResponse() { _Bsdrtmservice1__AddInetllTaskLogResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__AddInetllTaskLogResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetInetllTaskState
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetInetllTaskState (224)
/* Bsdrtmservice1:SetInetllTaskState */
class SOAP_CMAC _Bsdrtmservice1__SetInetllTaskState
{
public:
	std::string taskId;	/* optional element of type xsd:string */
	std::string taskState;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 224; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetInetllTaskState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetInetllTaskState() { _Bsdrtmservice1__SetInetllTaskState::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetInetllTaskState() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetInetllTaskStateResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetInetllTaskStateResponse (225)
/* Bsdrtmservice1:SetInetllTaskStateResponse */
class SOAP_CMAC _Bsdrtmservice1__SetInetllTaskStateResponse
{
public:
	Bsdrtmservice1__OptResultOfString *SetInetllTaskStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 225; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__SetInetllTaskStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__SetInetllTaskStateResponse() { _Bsdrtmservice1__SetInetllTaskStateResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__SetInetllTaskStateResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevice
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevice (226)
/* Bsdrtmservice1:GetExtendDevice */
class SOAP_CMAC _Bsdrtmservice1__GetExtendDevice
{
public:
	std::string monno;	/* optional element of type xsd:string */
	std::string datatype;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 226; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevice */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetExtendDevice() { _Bsdrtmservice1__GetExtendDevice::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetExtendDevice() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDeviceResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDeviceResponse (227)
/* Bsdrtmservice1:GetExtendDeviceResponse */
class SOAP_CMAC _Bsdrtmservice1__GetExtendDeviceResponse
{
public:
	Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity *GetExtendDeviceResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtm_mon_ems_devEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 227; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDeviceResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetExtendDeviceResponse() { _Bsdrtmservice1__GetExtendDeviceResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetExtendDeviceResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevices
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevices (228)
/* Bsdrtmservice1:GetExtendDevices */
class SOAP_CMAC _Bsdrtmservice1__GetExtendDevices
{
public:
	std::string monno;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 228; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevices */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetExtendDevices() { _Bsdrtmservice1__GetExtendDevices::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetExtendDevices() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesResponse (229)
/* Bsdrtmservice1:GetExtendDevicesResponse */
class SOAP_CMAC _Bsdrtmservice1__GetExtendDevicesResponse
{
public:
	Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity *GetExtendDevicesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtm_mon_ems_devEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 229; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetExtendDevicesResponse() { _Bsdrtmservice1__GetExtendDevicesResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetExtendDevicesResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesByDataTypes
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesByDataTypes (230)
/* Bsdrtmservice1:GetExtendDevicesByDataTypes */
class SOAP_CMAC _Bsdrtmservice1__GetExtendDevicesByDataTypes
{
public:
	std::string monno;	/* optional element of type xsd:string */
	Bsdrtmservice1__ArrayOfString *datatypes;	/* optional element of type Bsdrtmservice1:ArrayOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 230; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesByDataTypes */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetExtendDevicesByDataTypes() { _Bsdrtmservice1__GetExtendDevicesByDataTypes::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetExtendDevicesByDataTypes() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesByDataTypesResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesByDataTypesResponse (231)
/* Bsdrtmservice1:GetExtendDevicesByDataTypesResponse */
class SOAP_CMAC _Bsdrtmservice1__GetExtendDevicesByDataTypesResponse
{
public:
	Bsdrtmservice1__OptResultOfRtm_USCOREmon_USCOREems_USCOREdevEntity *GetExtendDevicesByDataTypesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfRtm_mon_ems_devEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 231; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetExtendDevicesByDataTypesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetExtendDevicesByDataTypesResponse() { _Bsdrtmservice1__GetExtendDevicesByDataTypesResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetExtendDevicesByDataTypesResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIEMSExDevs
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIEMSExDevs (232)
/* Bsdrtmservice1:GetIEMSExDevs */
class SOAP_CMAC _Bsdrtmservice1__GetIEMSExDevs
{
public:
	std::string monno;	/* optional element of type xsd:string */
	std::string ip;	/* optional element of type xsd:string */
	std::string port;	/* required element of type xsd:decimal */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 232; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIEMSExDevs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetIEMSExDevs() { _Bsdrtmservice1__GetIEMSExDevs::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetIEMSExDevs() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIEMSExDevsResponse
#define SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIEMSExDevsResponse (233)
/* Bsdrtmservice1:GetIEMSExDevsResponse */
class SOAP_CMAC _Bsdrtmservice1__GetIEMSExDevsResponse
{
public:
	Bsdrtmservice1__OptResultOfString *GetIEMSExDevsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type Bsdrtmservice1:OptResultOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 233; } /* = unique id SOAP_TYPE_Bsdrtmservice__Bsdrtmservice1__GetIEMSExDevsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _Bsdrtmservice1__GetIEMSExDevsResponse() { _Bsdrtmservice1__GetIEMSExDevsResponse::soap_default(NULL); }
	virtual ~_Bsdrtmservice1__GetIEMSExDevsResponse() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmDevModelFunParamEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmDevModelFunParamEntity (24)
/* Bsdrtmservice1:vRtmDevModelFunParamEntity */
class SOAP_CMAC Bsdrtmservice1__vRtmDevModelFunParamEntity : public Bsdrtmservice1__RtmDevModelFunParamEntity
{
public:
	std::string Devmodelname;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmDevModelFunParamEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__vRtmDevModelFunParamEntity() { Bsdrtmservice1__vRtmDevModelFunParamEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__vRtmDevModelFunParamEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmMonStationEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmMonStationEntity (34)
/* Bsdrtmservice1:vRtmMonStationEntity */
class SOAP_CMAC Bsdrtmservice1__vRtmMonStationEntity : public Bsdrtmservice1__RtmMonStationEntity
{
public:
	std::string Mongridid;	/* required element of type xsd:decimal */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmMonStationEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__vRtmMonStationEntity() { Bsdrtmservice1__vRtmMonStationEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__vRtmMonStationEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmRncPORTEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmRncPORTEntity (38)
/* Bsdrtmservice1:vRtmRncPORTEntity */
class SOAP_CMAC Bsdrtmservice1__vRtmRncPORTEntity : public Bsdrtmservice1__RtmRncPortEntity
{
public:
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Rncip;	/* optional element of type xsd:string */
	std::string Rncport;	/* required element of type xsd:decimal */
	std::string Rncip2;	/* optional element of type xsd:string */
	std::string Rncport2;	/* required element of type xsd:decimal */
	std::string Rncname;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmRncPORTEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__vRtmRncPORTEntity() { Bsdrtmservice1__vRtmRncPORTEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__vRtmRncPORTEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__VRtmDevFunEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__VRtmDevFunEntity (48)
/* Bsdrtmservice1:VRtmDevFunEntity */
class SOAP_CMAC Bsdrtmservice1__VRtmDevFunEntity : public Bsdrtmservice1__RtmDevFunEntity
{
public:
	std::string Devmodelname;	/* optional element of type xsd:string */
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string ParamUID;	/* required element of type xsd:decimal */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__VRtmDevFunEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__VRtmDevFunEntity() { Bsdrtmservice1__VRtmDevFunEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__VRtmDevFunEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmDevAntEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmDevAntEntity (52)
/* Bsdrtmservice1:vRtmDevAntEntity */
class SOAP_CMAC Bsdrtmservice1__vRtmDevAntEntity : public Bsdrtmservice1__RtmDevFunEntity
{
public:
	std::string Monstationno;	/* optional element of type xsd:string */
	std::string Devno;	/* optional element of type xsd:string */
	std::string Antname;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmDevAntEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__vRtmDevAntEntity() { Bsdrtmservice1__vRtmDevAntEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__vRtmDevAntEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__VRtmMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__VRtmMonTaskEntity (62)
/* Bsdrtmservice1:VRtmMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__VRtmMonTaskEntity : public Bsdrtmservice1__RtmMonTaskEntity
{
public:
	std::string Username;	/* optional element of type xsd:string */
	std::string Name;	/* optional element of type xsd:string */
	std::string Tasktype;	/* optional element of type xsd:string */
	std::string Monstationname;	/* optional element of type xsd:string */
	std::string Devname;	/* optional element of type xsd:string */
	std::string Funname;	/* optional element of type xsd:string */
	std::string Arrowrunname;	/* optional element of type xsd:string */
	std::string Taskstatename;	/* optional element of type xsd:string */
	std::string Devuid;	/* optional element of type xsd:string */
	std::string Serviceip;	/* optional element of type xsd:string */
	std::string Serviceport;	/* required element of type xsd:decimal */
	std::string Devprotocol;	/* required element of type xsd:decimal */
	std::string Devmodeluid;	/* optional element of type xsd:string */
	std::string Devmodelname;	/* optional element of type xsd:string */
	std::string Monstartdatename;	/* optional element of type xsd:string */
	std::string Monenddatename;	/* optional element of type xsd:string */
	std::string Monstarttimename;	/* optional element of type xsd:string */
	std::string Monendtimename;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__VRtmMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__VRtmMonTaskEntity() { Bsdrtmservice1__VRtmMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__VRtmMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmIntellMonTaskEntity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmIntellMonTaskEntity (89)
/* Bsdrtmservice1:vRtmIntellMonTaskEntity */
class SOAP_CMAC Bsdrtmservice1__vRtmIntellMonTaskEntity : public Bsdrtmservice1__RtmIntellMonTaskEntity
{
public:
	std::string MonStationName;	/* optional element of type xsd:string */
	std::string DevName;	/* optional element of type xsd:string */
	std::string DevModelUid;	/* optional element of type xsd:string */
	std::string FunName;	/* optional element of type xsd:string */
	std::string ArrowRunName;	/* optional element of type xsd:string */
	std::string TaskStateName;	/* optional element of type xsd:string */
	std::string Longi;	/* required element of type xsd:decimal */
	std::string Lati;	/* required element of type xsd:decimal */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmIntellMonTaskEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__vRtmIntellMonTaskEntity() { Bsdrtmservice1__vRtmIntellMonTaskEntity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__vRtmIntellMonTaskEntity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_StringArray
#define SOAP_TYPE_Bsdrtmservice_StringArray (234)
/* SOAP encoded array of xsd:string schema type: */
class SOAP_CMAC StringArray
{
public:
	std::string *__ptrString;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 234; } /* = unique id SOAP_TYPE_Bsdrtmservice_StringArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         StringArray() { StringArray::soap_default(NULL); }
	virtual ~StringArray() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmRncPort2Entity
#define SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmRncPort2Entity (42)
/* Bsdrtmservice1:vRtmRncPort2Entity */
class SOAP_CMAC Bsdrtmservice1__vRtmRncPort2Entity : public Bsdrtmservice1__vRtmRncPORTEntity
{
public:
	std::string Rnctype;	/* optional element of type xsd:string */
	std::string Password;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_Bsdrtmservice_Bsdrtmservice1__vRtmRncPort2Entity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         Bsdrtmservice1__vRtmRncPort2Entity() { Bsdrtmservice1__vRtmRncPort2Entity::soap_default(NULL); }
	virtual ~Bsdrtmservice1__vRtmRncPort2Entity() { }
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationsByUserID
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationsByUserID (341)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStationsByUserID
{
public:
	_Bsdrtmservice1__GetMonStationsByUserID *Bsdrtmservice1__GetMonStationsByUserID;	/* optional element of type Bsdrtmservice1:GetMonStationsByUserID */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationsByUserID3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationsByUserID3 (345)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStationsByUserID3
{
public:
	_Bsdrtmservice1__GetMonStationsByUserID3 *Bsdrtmservice1__GetMonStationsByUserID3;	/* optional element of type Bsdrtmservice1:GetMonStationsByUserID3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationTypes
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationTypes (349)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStationTypes
{
public:
	_Bsdrtmservice1__GetMonStationTypes *Bsdrtmservice1__GetMonStationTypes;	/* optional element of type Bsdrtmservice1:GetMonStationTypes */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationTypes3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationTypes3 (353)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStationTypes3
{
public:
	_Bsdrtmservice1__GetMonStationTypes3 *Bsdrtmservice1__GetMonStationTypes3;	/* optional element of type Bsdrtmservice1:GetMonStationTypes3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDeviceTypes
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDeviceTypes (357)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDeviceTypes
{
public:
	_Bsdrtmservice1__GetDeviceTypes *Bsdrtmservice1__GetDeviceTypes;	/* optional element of type Bsdrtmservice1:GetDeviceTypes */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDeviceTypes3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDeviceTypes3 (361)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDeviceTypes3
{
public:
	_Bsdrtmservice1__GetDeviceTypes3 *Bsdrtmservice1__GetDeviceTypes3;	/* optional element of type Bsdrtmservice1:GetDeviceTypes3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevProtocols
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevProtocols (365)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevProtocols
{
public:
	_Bsdrtmservice1__GetDevProtocols *Bsdrtmservice1__GetDevProtocols;	/* optional element of type Bsdrtmservice1:GetDevProtocols */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevProtocols3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevProtocols3 (369)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevProtocols3
{
public:
	_Bsdrtmservice1__GetDevProtocols3 *Bsdrtmservice1__GetDevProtocols3;	/* optional element of type Bsdrtmservice1:GetDevProtocols3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetFuncs
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetFuncs (373)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetFuncs
{
public:
	_Bsdrtmservice1__GetFuncs *Bsdrtmservice1__GetFuncs;	/* optional element of type Bsdrtmservice1:GetFuncs */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetFuncs3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetFuncs3 (377)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetFuncs3
{
public:
	_Bsdrtmservice1__GetFuncs3 *Bsdrtmservice1__GetFuncs3;	/* optional element of type Bsdrtmservice1:GetFuncs3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModels
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModels (381)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevModels
{
public:
	_Bsdrtmservice1__GetDevModels *Bsdrtmservice1__GetDevModels;	/* optional element of type Bsdrtmservice1:GetDevModels */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModels3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModels3 (385)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevModels3
{
public:
	_Bsdrtmservice1__GetDevModels3 *Bsdrtmservice1__GetDevModels3;	/* optional element of type Bsdrtmservice1:GetDevModels3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModelFuncParams
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModelFuncParams (389)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevModelFuncParams
{
public:
	_Bsdrtmservice1__GetDevModelFuncParams *Bsdrtmservice1__GetDevModelFuncParams;	/* optional element of type Bsdrtmservice1:GetDevModelFuncParams */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModelFuncParams3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModelFuncParams3 (393)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevModelFuncParams3
{
public:
	_Bsdrtmservice1__GetDevModelFuncParams3 *Bsdrtmservice1__GetDevModelFuncParams3;	/* optional element of type Bsdrtmservice1:GetDevModelFuncParams3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModelFuncParam
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevModelFuncParam (397)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevModelFuncParam
{
public:
	_Bsdrtmservice1__GetDevModelFuncParam *Bsdrtmservice1__GetDevModelFuncParam;	/* optional element of type Bsdrtmservice1:GetDevModelFuncParam */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonOrgs
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonOrgs (401)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonOrgs
{
public:
	_Bsdrtmservice1__GetMonOrgs *Bsdrtmservice1__GetMonOrgs;	/* optional element of type Bsdrtmservice1:GetMonOrgs */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonOrgs3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonOrgs3 (405)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonOrgs3
{
public:
	_Bsdrtmservice1__GetMonOrgs3 *Bsdrtmservice1__GetMonOrgs3;	/* optional element of type Bsdrtmservice1:GetMonOrgs3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonControlCenters
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonControlCenters (409)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonControlCenters
{
public:
	_Bsdrtmservice1__GetMonControlCenters *Bsdrtmservice1__GetMonControlCenters;	/* optional element of type Bsdrtmservice1:GetMonControlCenters */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonControlCenters3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonControlCenters3 (413)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonControlCenters3
{
public:
	_Bsdrtmservice1__GetMonControlCenters3 *Bsdrtmservice1__GetMonControlCenters3;	/* optional element of type Bsdrtmservice1:GetMonControlCenters3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStations
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStations (417)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStations
{
public:
	_Bsdrtmservice1__GetMonStations *Bsdrtmservice1__GetMonStations;	/* optional element of type Bsdrtmservice1:GetMonStations */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStations3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStations3 (421)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStations3
{
public:
	_Bsdrtmservice1__GetMonStations3 *Bsdrtmservice1__GetMonStations3;	/* optional element of type Bsdrtmservice1:GetMonStations3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRNCs
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRNCs (425)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetRNCs
{
public:
	_Bsdrtmservice1__GetRNCs *Bsdrtmservice1__GetRNCs;	/* optional element of type Bsdrtmservice1:GetRNCs */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRNCs3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRNCs3 (429)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetRNCs3
{
public:
	_Bsdrtmservice1__GetRNCs3 *Bsdrtmservice1__GetRNCs3;	/* optional element of type Bsdrtmservice1:GetRNCs3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllRNCs
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllRNCs (433)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetAllRNCs
{
public:
	_Bsdrtmservice1__GetAllRNCs *Bsdrtmservice1__GetAllRNCs;	/* optional element of type Bsdrtmservice1:GetAllRNCs */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllRNCs3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllRNCs3 (437)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetAllRNCs3
{
public:
	_Bsdrtmservice1__GetAllRNCs3 *Bsdrtmservice1__GetAllRNCs3;	/* optional element of type Bsdrtmservice1:GetAllRNCs3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetRNCPassword
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetRNCPassword (441)
/* Operation wrapper: */
struct __Bsdrtmservice1__SetRNCPassword
{
public:
	_Bsdrtmservice1__SetRNCPassword *Bsdrtmservice1__SetRNCPassword;	/* optional element of type Bsdrtmservice1:SetRNCPassword */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevices
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevices (445)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevices
{
public:
	_Bsdrtmservice1__GetDevices *Bsdrtmservice1__GetDevices;	/* optional element of type Bsdrtmservice1:GetDevices */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevices3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevices3 (449)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevices3
{
public:
	_Bsdrtmservice1__GetDevices3 *Bsdrtmservice1__GetDevices3;	/* optional element of type Bsdrtmservice1:GetDevices3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFuns
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFuns (453)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevFuns
{
public:
	_Bsdrtmservice1__GetDevFuns *Bsdrtmservice1__GetDevFuns;	/* optional element of type Bsdrtmservice1:GetDevFuns */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFuns3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFuns3 (457)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevFuns3
{
public:
	_Bsdrtmservice1__GetDevFuns3 *Bsdrtmservice1__GetDevFuns3;	/* optional element of type Bsdrtmservice1:GetDevFuns3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFunAnts
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFunAnts (461)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevFunAnts
{
public:
	_Bsdrtmservice1__GetDevFunAnts *Bsdrtmservice1__GetDevFunAnts;	/* optional element of type Bsdrtmservice1:GetDevFunAnts */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFunAnts3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetDevFunAnts3 (465)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetDevFunAnts3
{
public:
	_Bsdrtmservice1__GetDevFunAnts3 *Bsdrtmservice1__GetDevFunAnts3;	/* optional element of type Bsdrtmservice1:GetDevFunAnts3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAnts3
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAnts3 (469)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetAnts3
{
public:
	_Bsdrtmservice1__GetAnts3 *Bsdrtmservice1__GetAnts3;	/* optional element of type Bsdrtmservice1:GetAnts3 */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllAnts
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllAnts (473)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetAllAnts
{
public:
	_Bsdrtmservice1__GetAllAnts *Bsdrtmservice1__GetAllAnts;	/* optional element of type Bsdrtmservice1:GetAllAnts */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddDevUseLog
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddDevUseLog (477)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddDevUseLog
{
public:
	_Bsdrtmservice1__AddDevUseLog *Bsdrtmservice1__AddDevUseLog;	/* optional element of type Bsdrtmservice1:AddDevUseLog */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonstationUseTimeOfMonth
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonstationUseTimeOfMonth (481)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonstationUseTimeOfMonth
{
public:
	_Bsdrtmservice1__GetMonstationUseTimeOfMonth *Bsdrtmservice1__GetMonstationUseTimeOfMonth;	/* optional element of type Bsdrtmservice1:GetMonstationUseTimeOfMonth */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonstationUseTime
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonstationUseTime (485)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonstationUseTime
{
public:
	_Bsdrtmservice1__GetMonstationUseTime *Bsdrtmservice1__GetMonstationUseTime;	/* optional element of type Bsdrtmservice1:GetMonstationUseTime */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRuningTaskIds
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRuningTaskIds (489)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetRuningTaskIds
{
public:
	_Bsdrtmservice1__GetRuningTaskIds *Bsdrtmservice1__GetRuningTaskIds;	/* optional element of type Bsdrtmservice1:GetRuningTaskIds */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRuningTaskById
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRuningTaskById (493)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetRuningTaskById
{
public:
	_Bsdrtmservice1__GetRuningTaskById *Bsdrtmservice1__GetRuningTaskById;	/* optional element of type Bsdrtmservice1:GetRuningTaskById */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddTaskLog
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddTaskLog (497)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddTaskLog
{
public:
	_Bsdrtmservice1__AddTaskLog *Bsdrtmservice1__AddTaskLog;	/* optional element of type Bsdrtmservice1:AddTaskLog */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetTaskState
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetTaskState (501)
/* Operation wrapper: */
struct __Bsdrtmservice1__SetTaskState
{
public:
	_Bsdrtmservice1__SetTaskState *Bsdrtmservice1__SetTaskState;	/* optional element of type Bsdrtmservice1:SetTaskState */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMonAlert
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMonAlert (505)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddMonAlert
{
public:
	_Bsdrtmservice1__AddMonAlert *Bsdrtmservice1__AddMonAlert;	/* optional element of type Bsdrtmservice1:AddMonAlert */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonAlertOfMonth
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonAlertOfMonth (509)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonAlertOfMonth
{
public:
	_Bsdrtmservice1__GetMonAlertOfMonth *Bsdrtmservice1__GetMonAlertOfMonth;	/* optional element of type Bsdrtmservice1:GetMonAlertOfMonth */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonAlertOfDay
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonAlertOfDay (513)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonAlertOfDay
{
public:
	_Bsdrtmservice1__GetMonAlertOfDay *Bsdrtmservice1__GetMonAlertOfDay;	/* optional element of type Bsdrtmservice1:GetMonAlertOfDay */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetPreDefinedMonitors
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetPreDefinedMonitors (517)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetPreDefinedMonitors
{
public:
	_Bsdrtmservice1__GetPreDefinedMonitors *Bsdrtmservice1__GetPreDefinedMonitors;	/* optional element of type Bsdrtmservice1:GetPreDefinedMonitors */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMonReport
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMonReport (521)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddMonReport
{
public:
	_Bsdrtmservice1__AddMonReport *Bsdrtmservice1__AddMonReport;	/* optional element of type Bsdrtmservice1:AddMonReport */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__DelMonReport
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__DelMonReport (525)
/* Operation wrapper: */
struct __Bsdrtmservice1__DelMonReport
{
public:
	_Bsdrtmservice1__DelMonReport *Bsdrtmservice1__DelMonReport;	/* optional element of type Bsdrtmservice1:DelMonReport */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportOfFreq
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportOfFreq (529)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonReportOfFreq
{
public:
	_Bsdrtmservice1__GetMonReportOfFreq *Bsdrtmservice1__GetMonReportOfFreq;	/* optional element of type Bsdrtmservice1:GetMonReportOfFreq */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportsOfFreqs
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportsOfFreqs (533)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonReportsOfFreqs
{
public:
	_Bsdrtmservice1__GetMonReportsOfFreqs *Bsdrtmservice1__GetMonReportsOfFreqs;	/* optional element of type Bsdrtmservice1:GetMonReportsOfFreqs */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportFreqTypes
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportFreqTypes (537)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonReportFreqTypes
{
public:
	_Bsdrtmservice1__GetMonReportFreqTypes *Bsdrtmservice1__GetMonReportFreqTypes;	/* optional element of type Bsdrtmservice1:GetMonReportFreqTypes */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__ExistMonReportofFreq
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__ExistMonReportofFreq (541)
/* Operation wrapper: */
struct __Bsdrtmservice1__ExistMonReportofFreq
{
public:
	_Bsdrtmservice1__ExistMonReportofFreq *Bsdrtmservice1__ExistMonReportofFreq;	/* optional element of type Bsdrtmservice1:ExistMonReportofFreq */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportAttachments
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportAttachments (545)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonReportAttachments
{
public:
	_Bsdrtmservice1__GetMonReportAttachments *Bsdrtmservice1__GetMonReportAttachments;	/* optional element of type Bsdrtmservice1:GetMonReportAttachments */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportAttachmentContent
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonReportAttachmentContent (549)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonReportAttachmentContent
{
public:
	_Bsdrtmservice1__GetMonReportAttachmentContent *Bsdrtmservice1__GetMonReportAttachmentContent;	/* optional element of type Bsdrtmservice1:GetMonReportAttachmentContent */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMonReportAttachment
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMonReportAttachment (553)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddMonReportAttachment
{
public:
	_Bsdrtmservice1__AddMonReportAttachment *Bsdrtmservice1__AddMonReportAttachment;	/* optional element of type Bsdrtmservice1:AddMonReportAttachment */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__DelMonReportAttachment
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__DelMonReportAttachment (557)
/* Operation wrapper: */
struct __Bsdrtmservice1__DelMonReportAttachment
{
public:
	_Bsdrtmservice1__DelMonReportAttachment *Bsdrtmservice1__DelMonReportAttachment;	/* optional element of type Bsdrtmservice1:DelMonReportAttachment */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMalfunctionAlert
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddMalfunctionAlert (561)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddMalfunctionAlert
{
public:
	_Bsdrtmservice1__AddMalfunctionAlert *Bsdrtmservice1__AddMalfunctionAlert;	/* optional element of type Bsdrtmservice1:AddMalfunctionAlert */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMalfunctionCode
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMalfunctionCode (565)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMalfunctionCode
{
public:
	_Bsdrtmservice1__GetMalfunctionCode *Bsdrtmservice1__GetMalfunctionCode;	/* optional element of type Bsdrtmservice1:GetMalfunctionCode */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllMalfunctionAlertCount
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetAllMalfunctionAlertCount (569)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetAllMalfunctionAlertCount
{
public:
	_Bsdrtmservice1__GetAllMalfunctionAlertCount *Bsdrtmservice1__GetAllMalfunctionAlertCount;	/* optional element of type Bsdrtmservice1:GetAllMalfunctionAlertCount */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetPageMalfunctionAlerts
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetPageMalfunctionAlerts (573)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetPageMalfunctionAlerts
{
public:
	_Bsdrtmservice1__GetPageMalfunctionAlerts *Bsdrtmservice1__GetPageMalfunctionAlerts;	/* optional element of type Bsdrtmservice1:GetPageMalfunctionAlerts */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMalfunctionAlertOfMonstationno
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMalfunctionAlertOfMonstationno (577)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMalfunctionAlertOfMonstationno
{
public:
	_Bsdrtmservice1__GetMalfunctionAlertOfMonstationno *Bsdrtmservice1__GetMalfunctionAlertOfMonstationno;	/* optional element of type Bsdrtmservice1:GetMalfunctionAlertOfMonstationno */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetConfirmedState
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetConfirmedState (581)
/* Operation wrapper: */
struct __Bsdrtmservice1__SetConfirmedState
{
public:
	_Bsdrtmservice1__SetConfirmedState *Bsdrtmservice1__SetConfirmedState;	/* optional element of type Bsdrtmservice1:SetConfirmedState */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationsByVideo
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetMonStationsByVideo (585)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetMonStationsByVideo
{
public:
	_Bsdrtmservice1__GetMonStationsByVideo *Bsdrtmservice1__GetMonStationsByVideo;	/* optional element of type Bsdrtmservice1:GetMonStationsByVideo */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRuningIntellTaskIds
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetRuningIntellTaskIds (589)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetRuningIntellTaskIds
{
public:
	_Bsdrtmservice1__GetRuningIntellTaskIds *Bsdrtmservice1__GetRuningIntellTaskIds;	/* optional element of type Bsdrtmservice1:GetRuningIntellTaskIds */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetIntellTask
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetIntellTask (593)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetIntellTask
{
public:
	_Bsdrtmservice1__GetIntellTask *Bsdrtmservice1__GetIntellTask;	/* optional element of type Bsdrtmservice1:GetIntellTask */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddInetllTaskLog
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__AddInetllTaskLog (597)
/* Operation wrapper: */
struct __Bsdrtmservice1__AddInetllTaskLog
{
public:
	_Bsdrtmservice1__AddInetllTaskLog *Bsdrtmservice1__AddInetllTaskLog;	/* optional element of type Bsdrtmservice1:AddInetllTaskLog */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetInetllTaskState
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__SetInetllTaskState (601)
/* Operation wrapper: */
struct __Bsdrtmservice1__SetInetllTaskState
{
public:
	_Bsdrtmservice1__SetInetllTaskState *Bsdrtmservice1__SetInetllTaskState;	/* optional element of type Bsdrtmservice1:SetInetllTaskState */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetExtendDevice
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetExtendDevice (605)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetExtendDevice
{
public:
	_Bsdrtmservice1__GetExtendDevice *Bsdrtmservice1__GetExtendDevice;	/* optional element of type Bsdrtmservice1:GetExtendDevice */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetExtendDevices
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetExtendDevices (609)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetExtendDevices
{
public:
	_Bsdrtmservice1__GetExtendDevices *Bsdrtmservice1__GetExtendDevices;	/* optional element of type Bsdrtmservice1:GetExtendDevices */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetExtendDevicesByDataTypes
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetExtendDevicesByDataTypes (613)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetExtendDevicesByDataTypes
{
public:
	_Bsdrtmservice1__GetExtendDevicesByDataTypes *Bsdrtmservice1__GetExtendDevicesByDataTypes;	/* optional element of type Bsdrtmservice1:GetExtendDevicesByDataTypes */
};
#endif

#ifndef SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetIEMSExDevs
#define SOAP_TYPE_Bsdrtmservice___Bsdrtmservice1__GetIEMSExDevs (617)
/* Operation wrapper: */
struct __Bsdrtmservice1__GetIEMSExDevs
{
public:
	_Bsdrtmservice1__GetIEMSExDevs *Bsdrtmservice1__GetIEMSExDevs;	/* optional element of type Bsdrtmservice1:GetIEMSExDevs */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Header
#define SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Header (618)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Code
#define SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Code (619)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Detail
#define SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Detail (621)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Reason
#define SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Reason (624)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Fault
#define SOAP_TYPE_Bsdrtmservice_SOAP_ENV__Fault (625)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_Bsdrtmservice__QName
#define SOAP_TYPE_Bsdrtmservice__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_Bsdrtmservice__XML
#define SOAP_TYPE_Bsdrtmservice__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_Bsdrtmservice_xsd__decimal
#define SOAP_TYPE_Bsdrtmservice_xsd__decimal (13)
typedef std::string xsd__decimal;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace Bsdrtmservice


#endif

/* End of BsdrtmserviceStub.h */
