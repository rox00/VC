/* BsdsysserviceBSDSYSSoap12Proxy.cpp
   Generated by gSOAP 2.8.2 from Bsdsysservice.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#include "BsdsysserviceBSDSYSSoap12Proxy.h"

namespace Bsdsysservice {

BSDSYSSoap12Proxy::BSDSYSSoap12Proxy()
{	this->soap = soap_new();
	this->own = true;
	BSDSYSSoap12Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BSDSYSSoap12Proxy::BSDSYSSoap12Proxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	BSDSYSSoap12Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BSDSYSSoap12Proxy::BSDSYSSoap12Proxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	BSDSYSSoap12Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

BSDSYSSoap12Proxy::BSDSYSSoap12Proxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	BSDSYSSoap12Proxy_init(iomode, iomode);
}

BSDSYSSoap12Proxy::BSDSYSSoap12Proxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	BSDSYSSoap12Proxy_init(iomode, iomode);
	soap_endpoint = url;
}

BSDSYSSoap12Proxy::BSDSYSSoap12Proxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	BSDSYSSoap12Proxy_init(imode, omode);
}

BSDSYSSoap12Proxy::~BSDSYSSoap12Proxy()
{	if (this->own)
		soap_free(this->soap);
}

void BSDSYSSoap12Proxy::BSDSYSSoap12Proxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://www.w3.org/2003/05/soap-envelope", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://www.w3.org/2003/05/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"Bsdsysservice", "BSDSYS", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void BSDSYSSoap12Proxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void BSDSYSSoap12Proxy::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Fault *BSDSYSSoap12Proxy::soap_fault()
{	return this->soap->fault;
}

const char *BSDSYSSoap12Proxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *BSDSYSSoap12Proxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int BSDSYSSoap12Proxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

void BSDSYSSoap12Proxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
void BSDSYSSoap12Proxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}

char *BSDSYSSoap12Proxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int BSDSYSSoap12Proxy::VerifyUser(_Bsdsysservice__VerifyUser *Bsdsysservice__VerifyUser, _Bsdsysservice__VerifyUserResponse *Bsdsysservice__VerifyUserResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__VerifyUser soap_tmp___Bsdsysservice__VerifyUser;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/VerifyUser";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__VerifyUser.Bsdsysservice__VerifyUser = Bsdsysservice__VerifyUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__VerifyUser(soap, &soap_tmp___Bsdsysservice__VerifyUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__VerifyUser(soap, &soap_tmp___Bsdsysservice__VerifyUser, "-Bsdsysservice:VerifyUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__VerifyUser(soap, &soap_tmp___Bsdsysservice__VerifyUser, "-Bsdsysservice:VerifyUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__VerifyUserResponse)
		return soap_closesock(soap);
	Bsdsysservice__VerifyUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__VerifyUserResponse->soap_get(soap, "Bsdsysservice:VerifyUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetUsersForApple(_Bsdsysservice__GetUsersForApple *Bsdsysservice__GetUsersForApple, _Bsdsysservice__GetUsersForAppleResponse *Bsdsysservice__GetUsersForAppleResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetUsersForApple soap_tmp___Bsdsysservice__GetUsersForApple;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetUsersForApple";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetUsersForApple.Bsdsysservice__GetUsersForApple = Bsdsysservice__GetUsersForApple;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetUsersForApple(soap, &soap_tmp___Bsdsysservice__GetUsersForApple);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetUsersForApple(soap, &soap_tmp___Bsdsysservice__GetUsersForApple, "-Bsdsysservice:GetUsersForApple", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetUsersForApple(soap, &soap_tmp___Bsdsysservice__GetUsersForApple, "-Bsdsysservice:GetUsersForApple", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetUsersForAppleResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetUsersForAppleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetUsersForAppleResponse->soap_get(soap, "Bsdsysservice:GetUsersForAppleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::VerifyFunction(_Bsdsysservice__VerifyFunction *Bsdsysservice__VerifyFunction, _Bsdsysservice__VerifyFunctionResponse *Bsdsysservice__VerifyFunctionResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__VerifyFunction soap_tmp___Bsdsysservice__VerifyFunction;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/VerifyFunction";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__VerifyFunction.Bsdsysservice__VerifyFunction = Bsdsysservice__VerifyFunction;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__VerifyFunction(soap, &soap_tmp___Bsdsysservice__VerifyFunction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__VerifyFunction(soap, &soap_tmp___Bsdsysservice__VerifyFunction, "-Bsdsysservice:VerifyFunction", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__VerifyFunction(soap, &soap_tmp___Bsdsysservice__VerifyFunction, "-Bsdsysservice:VerifyFunction", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__VerifyFunctionResponse)
		return soap_closesock(soap);
	Bsdsysservice__VerifyFunctionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__VerifyFunctionResponse->soap_get(soap, "Bsdsysservice:VerifyFunctionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetServerTime(_Bsdsysservice__GetServerTime *Bsdsysservice__GetServerTime, _Bsdsysservice__GetServerTimeResponse *Bsdsysservice__GetServerTimeResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetServerTime soap_tmp___Bsdsysservice__GetServerTime;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetServerTime";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetServerTime.Bsdsysservice__GetServerTime = Bsdsysservice__GetServerTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetServerTime(soap, &soap_tmp___Bsdsysservice__GetServerTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetServerTime(soap, &soap_tmp___Bsdsysservice__GetServerTime, "-Bsdsysservice:GetServerTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetServerTime(soap, &soap_tmp___Bsdsysservice__GetServerTime, "-Bsdsysservice:GetServerTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetServerTimeResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetServerTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetServerTimeResponse->soap_get(soap, "Bsdsysservice:GetServerTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetAppSetting(_Bsdsysservice__GetAppSetting *Bsdsysservice__GetAppSetting, _Bsdsysservice__GetAppSettingResponse *Bsdsysservice__GetAppSettingResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetAppSetting soap_tmp___Bsdsysservice__GetAppSetting;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetAppSetting";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetAppSetting.Bsdsysservice__GetAppSetting = Bsdsysservice__GetAppSetting;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetAppSetting(soap, &soap_tmp___Bsdsysservice__GetAppSetting);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetAppSetting(soap, &soap_tmp___Bsdsysservice__GetAppSetting, "-Bsdsysservice:GetAppSetting", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetAppSetting(soap, &soap_tmp___Bsdsysservice__GetAppSetting, "-Bsdsysservice:GetAppSetting", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetAppSettingResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetAppSettingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetAppSettingResponse->soap_get(soap, "Bsdsysservice:GetAppSettingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetConnString(_Bsdsysservice__GetConnString *Bsdsysservice__GetConnString, _Bsdsysservice__GetConnStringResponse *Bsdsysservice__GetConnStringResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetConnString soap_tmp___Bsdsysservice__GetConnString;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetConnString";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetConnString.Bsdsysservice__GetConnString = Bsdsysservice__GetConnString;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetConnString(soap, &soap_tmp___Bsdsysservice__GetConnString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetConnString(soap, &soap_tmp___Bsdsysservice__GetConnString, "-Bsdsysservice:GetConnString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetConnString(soap, &soap_tmp___Bsdsysservice__GetConnString, "-Bsdsysservice:GetConnString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetConnStringResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetConnStringResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetConnStringResponse->soap_get(soap, "Bsdsysservice:GetConnStringResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::AlertMsgDirect(_Bsdsysservice__AlertMsgDirect *Bsdsysservice__AlertMsgDirect, _Bsdsysservice__AlertMsgDirectResponse *Bsdsysservice__AlertMsgDirectResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__AlertMsgDirect soap_tmp___Bsdsysservice__AlertMsgDirect;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/AlertMsgDirect";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__AlertMsgDirect.Bsdsysservice__AlertMsgDirect = Bsdsysservice__AlertMsgDirect;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__AlertMsgDirect(soap, &soap_tmp___Bsdsysservice__AlertMsgDirect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__AlertMsgDirect(soap, &soap_tmp___Bsdsysservice__AlertMsgDirect, "-Bsdsysservice:AlertMsgDirect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__AlertMsgDirect(soap, &soap_tmp___Bsdsysservice__AlertMsgDirect, "-Bsdsysservice:AlertMsgDirect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__AlertMsgDirectResponse)
		return soap_closesock(soap);
	Bsdsysservice__AlertMsgDirectResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__AlertMsgDirectResponse->soap_get(soap, "Bsdsysservice:AlertMsgDirectResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetUnSendMsg(_Bsdsysservice__GetUnSendMsg *Bsdsysservice__GetUnSendMsg, _Bsdsysservice__GetUnSendMsgResponse *Bsdsysservice__GetUnSendMsgResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetUnSendMsg soap_tmp___Bsdsysservice__GetUnSendMsg;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetUnSendMsg";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetUnSendMsg.Bsdsysservice__GetUnSendMsg = Bsdsysservice__GetUnSendMsg;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetUnSendMsg(soap, &soap_tmp___Bsdsysservice__GetUnSendMsg);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetUnSendMsg(soap, &soap_tmp___Bsdsysservice__GetUnSendMsg, "-Bsdsysservice:GetUnSendMsg", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetUnSendMsg(soap, &soap_tmp___Bsdsysservice__GetUnSendMsg, "-Bsdsysservice:GetUnSendMsg", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetUnSendMsgResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetUnSendMsgResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetUnSendMsgResponse->soap_get(soap, "Bsdsysservice:GetUnSendMsgResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::WriteLog(_Bsdsysservice__WriteLog *Bsdsysservice__WriteLog, _Bsdsysservice__WriteLogResponse *Bsdsysservice__WriteLogResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__WriteLog soap_tmp___Bsdsysservice__WriteLog;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/WriteLog";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__WriteLog.Bsdsysservice__WriteLog = Bsdsysservice__WriteLog;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__WriteLog(soap, &soap_tmp___Bsdsysservice__WriteLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__WriteLog(soap, &soap_tmp___Bsdsysservice__WriteLog, "-Bsdsysservice:WriteLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__WriteLog(soap, &soap_tmp___Bsdsysservice__WriteLog, "-Bsdsysservice:WriteLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__WriteLogResponse)
		return soap_closesock(soap);
	Bsdsysservice__WriteLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__WriteLogResponse->soap_get(soap, "Bsdsysservice:WriteLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetMobileByUserId(_Bsdsysservice__GetMobileByUserId *Bsdsysservice__GetMobileByUserId, _Bsdsysservice__GetMobileByUserIdResponse *Bsdsysservice__GetMobileByUserIdResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetMobileByUserId soap_tmp___Bsdsysservice__GetMobileByUserId;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetMobileByUserId";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetMobileByUserId.Bsdsysservice__GetMobileByUserId = Bsdsysservice__GetMobileByUserId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetMobileByUserId(soap, &soap_tmp___Bsdsysservice__GetMobileByUserId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetMobileByUserId(soap, &soap_tmp___Bsdsysservice__GetMobileByUserId, "-Bsdsysservice:GetMobileByUserId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetMobileByUserId(soap, &soap_tmp___Bsdsysservice__GetMobileByUserId, "-Bsdsysservice:GetMobileByUserId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetMobileByUserIdResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetMobileByUserIdResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetMobileByUserIdResponse->soap_get(soap, "Bsdsysservice:GetMobileByUserIdResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetFunctionsByUserId(_Bsdsysservice__GetFunctionsByUserId *Bsdsysservice__GetFunctionsByUserId, _Bsdsysservice__GetFunctionsByUserIdResponse *Bsdsysservice__GetFunctionsByUserIdResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetFunctionsByUserId soap_tmp___Bsdsysservice__GetFunctionsByUserId;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetFunctionsByUserId";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetFunctionsByUserId.Bsdsysservice__GetFunctionsByUserId = Bsdsysservice__GetFunctionsByUserId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetFunctionsByUserId(soap, &soap_tmp___Bsdsysservice__GetFunctionsByUserId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetFunctionsByUserId(soap, &soap_tmp___Bsdsysservice__GetFunctionsByUserId, "-Bsdsysservice:GetFunctionsByUserId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetFunctionsByUserId(soap, &soap_tmp___Bsdsysservice__GetFunctionsByUserId, "-Bsdsysservice:GetFunctionsByUserId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetFunctionsByUserIdResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetFunctionsByUserIdResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetFunctionsByUserIdResponse->soap_get(soap, "Bsdsysservice:GetFunctionsByUserIdResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetFunctions3(_Bsdsysservice__GetFunctions3 *Bsdsysservice__GetFunctions3, _Bsdsysservice__GetFunctions3Response *Bsdsysservice__GetFunctions3Response)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetFunctions3 soap_tmp___Bsdsysservice__GetFunctions3;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetFunctions3";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetFunctions3.Bsdsysservice__GetFunctions3 = Bsdsysservice__GetFunctions3;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetFunctions3(soap, &soap_tmp___Bsdsysservice__GetFunctions3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetFunctions3(soap, &soap_tmp___Bsdsysservice__GetFunctions3, "-Bsdsysservice:GetFunctions3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetFunctions3(soap, &soap_tmp___Bsdsysservice__GetFunctions3, "-Bsdsysservice:GetFunctions3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetFunctions3Response)
		return soap_closesock(soap);
	Bsdsysservice__GetFunctions3Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetFunctions3Response->soap_get(soap, "Bsdsysservice:GetFunctions3Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetRegions(_Bsdsysservice__GetRegions *Bsdsysservice__GetRegions, _Bsdsysservice__GetRegionsResponse *Bsdsysservice__GetRegionsResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetRegions soap_tmp___Bsdsysservice__GetRegions;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetRegions";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetRegions.Bsdsysservice__GetRegions = Bsdsysservice__GetRegions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetRegions(soap, &soap_tmp___Bsdsysservice__GetRegions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetRegions(soap, &soap_tmp___Bsdsysservice__GetRegions, "-Bsdsysservice:GetRegions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetRegions(soap, &soap_tmp___Bsdsysservice__GetRegions, "-Bsdsysservice:GetRegions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetRegionsResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetRegionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetRegionsResponse->soap_get(soap, "Bsdsysservice:GetRegionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetRegions3(_Bsdsysservice__GetRegions3 *Bsdsysservice__GetRegions3, _Bsdsysservice__GetRegions3Response *Bsdsysservice__GetRegions3Response)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetRegions3 soap_tmp___Bsdsysservice__GetRegions3;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetRegions3";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetRegions3.Bsdsysservice__GetRegions3 = Bsdsysservice__GetRegions3;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetRegions3(soap, &soap_tmp___Bsdsysservice__GetRegions3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetRegions3(soap, &soap_tmp___Bsdsysservice__GetRegions3, "-Bsdsysservice:GetRegions3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetRegions3(soap, &soap_tmp___Bsdsysservice__GetRegions3, "-Bsdsysservice:GetRegions3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetRegions3Response)
		return soap_closesock(soap);
	Bsdsysservice__GetRegions3Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetRegions3Response->soap_get(soap, "Bsdsysservice:GetRegions3Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetUserList3(_Bsdsysservice__GetUserList3 *Bsdsysservice__GetUserList3, _Bsdsysservice__GetUserList3Response *Bsdsysservice__GetUserList3Response)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetUserList3 soap_tmp___Bsdsysservice__GetUserList3;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetUserList3";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetUserList3.Bsdsysservice__GetUserList3 = Bsdsysservice__GetUserList3;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetUserList3(soap, &soap_tmp___Bsdsysservice__GetUserList3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetUserList3(soap, &soap_tmp___Bsdsysservice__GetUserList3, "-Bsdsysservice:GetUserList3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetUserList3(soap, &soap_tmp___Bsdsysservice__GetUserList3, "-Bsdsysservice:GetUserList3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetUserList3Response)
		return soap_closesock(soap);
	Bsdsysservice__GetUserList3Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetUserList3Response->soap_get(soap, "Bsdsysservice:GetUserList3Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetDepartmentList3(_Bsdsysservice__GetDepartmentList3 *Bsdsysservice__GetDepartmentList3, _Bsdsysservice__GetDepartmentList3Response *Bsdsysservice__GetDepartmentList3Response)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetDepartmentList3 soap_tmp___Bsdsysservice__GetDepartmentList3;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetDepartmentList3";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetDepartmentList3.Bsdsysservice__GetDepartmentList3 = Bsdsysservice__GetDepartmentList3;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetDepartmentList3(soap, &soap_tmp___Bsdsysservice__GetDepartmentList3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetDepartmentList3(soap, &soap_tmp___Bsdsysservice__GetDepartmentList3, "-Bsdsysservice:GetDepartmentList3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetDepartmentList3(soap, &soap_tmp___Bsdsysservice__GetDepartmentList3, "-Bsdsysservice:GetDepartmentList3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetDepartmentList3Response)
		return soap_closesock(soap);
	Bsdsysservice__GetDepartmentList3Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetDepartmentList3Response->soap_get(soap, "Bsdsysservice:GetDepartmentList3Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetAllUserID(_Bsdsysservice__GetAllUserID *Bsdsysservice__GetAllUserID, _Bsdsysservice__GetAllUserIDResponse *Bsdsysservice__GetAllUserIDResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetAllUserID soap_tmp___Bsdsysservice__GetAllUserID;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetAllUserID";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetAllUserID.Bsdsysservice__GetAllUserID = Bsdsysservice__GetAllUserID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetAllUserID(soap, &soap_tmp___Bsdsysservice__GetAllUserID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetAllUserID(soap, &soap_tmp___Bsdsysservice__GetAllUserID, "-Bsdsysservice:GetAllUserID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetAllUserID(soap, &soap_tmp___Bsdsysservice__GetAllUserID, "-Bsdsysservice:GetAllUserID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetAllUserIDResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetAllUserIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetAllUserIDResponse->soap_get(soap, "Bsdsysservice:GetAllUserIDResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BSDSYSSoap12Proxy::GetUserList(_Bsdsysservice__GetUserList *Bsdsysservice__GetUserList, _Bsdsysservice__GetUserListResponse *Bsdsysservice__GetUserListResponse)
{	struct soap *soap = this->soap;
	struct __Bsdsysservice__GetUserList soap_tmp___Bsdsysservice__GetUserList;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.101.234/rim3/rim/bsdsysservice.asmx";
	soap_action = "BSDSYS/GetUserList";
	soap->encodingStyle = NULL;
	soap_tmp___Bsdsysservice__GetUserList.Bsdsysservice__GetUserList = Bsdsysservice__GetUserList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Bsdsysservice__GetUserList(soap, &soap_tmp___Bsdsysservice__GetUserList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Bsdsysservice__GetUserList(soap, &soap_tmp___Bsdsysservice__GetUserList, "-Bsdsysservice:GetUserList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Bsdsysservice__GetUserList(soap, &soap_tmp___Bsdsysservice__GetUserList, "-Bsdsysservice:GetUserList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Bsdsysservice__GetUserListResponse)
		return soap_closesock(soap);
	Bsdsysservice__GetUserListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Bsdsysservice__GetUserListResponse->soap_get(soap, "Bsdsysservice:GetUserListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace Bsdsysservice

/* End of client proxy code */
