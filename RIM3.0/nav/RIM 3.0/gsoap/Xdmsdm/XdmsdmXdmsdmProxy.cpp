/* XdmsdmXdmsdmProxy.cpp
   Generated by gSOAP 2.8.2 from Xdmsdm.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#include "XdmsdmXdmsdmProxy.h"

namespace Xdmsdm {

XdmsdmProxy::XdmsdmProxy()
{	this->soap = soap_new();
	this->own = true;
	XdmsdmProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

XdmsdmProxy::XdmsdmProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	XdmsdmProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

XdmsdmProxy::XdmsdmProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	XdmsdmProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

XdmsdmProxy::XdmsdmProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	XdmsdmProxy_init(iomode, iomode);
}

XdmsdmProxy::XdmsdmProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	XdmsdmProxy_init(iomode, iomode);
	soap_endpoint = url;
}

XdmsdmProxy::XdmsdmProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	XdmsdmProxy_init(imode, omode);
}

XdmsdmProxy::~XdmsdmProxy()
{	if (this->own)
		soap_free(this->soap);
}

void XdmsdmProxy::XdmsdmProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://www.w3.org/2003/05/soap-envelope", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://www.w3.org/2003/05/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"Xdmsdm", "urn:Xdmsdm", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void XdmsdmProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void XdmsdmProxy::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Fault *XdmsdmProxy::soap_fault()
{	return this->soap->fault;
}

const char *XdmsdmProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *XdmsdmProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int XdmsdmProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

void XdmsdmProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
void XdmsdmProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}

char *XdmsdmProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int XdmsdmProxy::QueryVersionInfo(_Xdmsdm__QueryVersionInfo *Xdmsdm__QueryVersionInfo, _Xdmsdm__QueryVersionInfoResponse *Xdmsdm__QueryVersionInfoResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryVersionInfo soap_tmp___Xdmsdm__QueryVersionInfo;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryVersionInfo.Xdmsdm__QueryVersionInfo = Xdmsdm__QueryVersionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryVersionInfo(soap, &soap_tmp___Xdmsdm__QueryVersionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryVersionInfo(soap, &soap_tmp___Xdmsdm__QueryVersionInfo, "-Xdmsdm:QueryVersionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryVersionInfo(soap, &soap_tmp___Xdmsdm__QueryVersionInfo, "-Xdmsdm:QueryVersionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryVersionInfoResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryVersionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryVersionInfoResponse->soap_get(soap, "Xdmsdm:QueryVersionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryRegionNO(_Xdmsdm__QueryRegionNO *Xdmsdm__QueryRegionNO, _Xdmsdm__QueryRegionNOResponse *Xdmsdm__QueryRegionNOResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryRegionNO soap_tmp___Xdmsdm__QueryRegionNO;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryRegionNO.Xdmsdm__QueryRegionNO = Xdmsdm__QueryRegionNO;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryRegionNO(soap, &soap_tmp___Xdmsdm__QueryRegionNO);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryRegionNO(soap, &soap_tmp___Xdmsdm__QueryRegionNO, "-Xdmsdm:QueryRegionNO", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryRegionNO(soap, &soap_tmp___Xdmsdm__QueryRegionNO, "-Xdmsdm:QueryRegionNO", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryRegionNOResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryRegionNOResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryRegionNOResponse->soap_get(soap, "Xdmsdm:QueryRegionNOResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryFreqLayout(_Xdmsdm__QueryFreqLayout *Xdmsdm__QueryFreqLayout, _Xdmsdm__QueryFreqLayoutResponse *Xdmsdm__QueryFreqLayoutResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryFreqLayout soap_tmp___Xdmsdm__QueryFreqLayout;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryFreqLayout.Xdmsdm__QueryFreqLayout = Xdmsdm__QueryFreqLayout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryFreqLayout(soap, &soap_tmp___Xdmsdm__QueryFreqLayout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryFreqLayout(soap, &soap_tmp___Xdmsdm__QueryFreqLayout, "-Xdmsdm:QueryFreqLayout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryFreqLayout(soap, &soap_tmp___Xdmsdm__QueryFreqLayout, "-Xdmsdm:QueryFreqLayout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryFreqLayoutResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryFreqLayoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryFreqLayoutResponse->soap_get(soap, "Xdmsdm:QueryFreqLayoutResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryWebService(_Xdmsdm__QueryWebService *Xdmsdm__QueryWebService, _Xdmsdm__QueryWebServiceResponse *Xdmsdm__QueryWebServiceResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryWebService soap_tmp___Xdmsdm__QueryWebService;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryWebService.Xdmsdm__QueryWebService = Xdmsdm__QueryWebService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryWebService(soap, &soap_tmp___Xdmsdm__QueryWebService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryWebService(soap, &soap_tmp___Xdmsdm__QueryWebService, "-Xdmsdm:QueryWebService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryWebService(soap, &soap_tmp___Xdmsdm__QueryWebService, "-Xdmsdm:QueryWebService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryWebServiceResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryWebServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryWebServiceResponse->soap_get(soap, "Xdmsdm:QueryWebServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::AuthUser(_Xdmsdm__AuthUser *Xdmsdm__AuthUser, _Xdmsdm__AuthUserResponse *Xdmsdm__AuthUserResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__AuthUser soap_tmp___Xdmsdm__AuthUser;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__AuthUser.Xdmsdm__AuthUser = Xdmsdm__AuthUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__AuthUser(soap, &soap_tmp___Xdmsdm__AuthUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__AuthUser(soap, &soap_tmp___Xdmsdm__AuthUser, "-Xdmsdm:AuthUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__AuthUser(soap, &soap_tmp___Xdmsdm__AuthUser, "-Xdmsdm:AuthUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__AuthUserResponse)
		return soap_closesock(soap);
	Xdmsdm__AuthUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__AuthUserResponse->soap_get(soap, "Xdmsdm:AuthUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::AuthUserLicenseFunc(_Xdmsdm__AuthUserLicenseFunc *Xdmsdm__AuthUserLicenseFunc, _Xdmsdm__AuthUserLicenseFuncResponse *Xdmsdm__AuthUserLicenseFuncResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__AuthUserLicenseFunc soap_tmp___Xdmsdm__AuthUserLicenseFunc;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__AuthUserLicenseFunc.Xdmsdm__AuthUserLicenseFunc = Xdmsdm__AuthUserLicenseFunc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__AuthUserLicenseFunc(soap, &soap_tmp___Xdmsdm__AuthUserLicenseFunc);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__AuthUserLicenseFunc(soap, &soap_tmp___Xdmsdm__AuthUserLicenseFunc, "-Xdmsdm:AuthUserLicenseFunc", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__AuthUserLicenseFunc(soap, &soap_tmp___Xdmsdm__AuthUserLicenseFunc, "-Xdmsdm:AuthUserLicenseFunc", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__AuthUserLicenseFuncResponse)
		return soap_closesock(soap);
	Xdmsdm__AuthUserLicenseFuncResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__AuthUserLicenseFuncResponse->soap_get(soap, "Xdmsdm:AuthUserLicenseFuncResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryUserLicenseFunc(_Xdmsdm__QueryUserLicenseFunc *Xdmsdm__QueryUserLicenseFunc, _Xdmsdm__QueryUserLicenseFuncResponse *Xdmsdm__QueryUserLicenseFuncResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryUserLicenseFunc soap_tmp___Xdmsdm__QueryUserLicenseFunc;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryUserLicenseFunc.Xdmsdm__QueryUserLicenseFunc = Xdmsdm__QueryUserLicenseFunc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryUserLicenseFunc(soap, &soap_tmp___Xdmsdm__QueryUserLicenseFunc);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryUserLicenseFunc(soap, &soap_tmp___Xdmsdm__QueryUserLicenseFunc, "-Xdmsdm:QueryUserLicenseFunc", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryUserLicenseFunc(soap, &soap_tmp___Xdmsdm__QueryUserLicenseFunc, "-Xdmsdm:QueryUserLicenseFunc", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryUserLicenseFuncResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryUserLicenseFuncResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryUserLicenseFuncResponse->soap_get(soap, "Xdmsdm:QueryUserLicenseFuncResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::SubmitOperateLog(_Xdmsdm__SubmitOperateLog *Xdmsdm__SubmitOperateLog, _Xdmsdm__SubmitOperateLogResponse *Xdmsdm__SubmitOperateLogResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__SubmitOperateLog soap_tmp___Xdmsdm__SubmitOperateLog;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__SubmitOperateLog.Xdmsdm__SubmitOperateLog = Xdmsdm__SubmitOperateLog;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__SubmitOperateLog(soap, &soap_tmp___Xdmsdm__SubmitOperateLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__SubmitOperateLog(soap, &soap_tmp___Xdmsdm__SubmitOperateLog, "-Xdmsdm:SubmitOperateLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__SubmitOperateLog(soap, &soap_tmp___Xdmsdm__SubmitOperateLog, "-Xdmsdm:SubmitOperateLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__SubmitOperateLogResponse)
		return soap_closesock(soap);
	Xdmsdm__SubmitOperateLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__SubmitOperateLogResponse->soap_get(soap, "Xdmsdm:SubmitOperateLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryStandardTime(_Xdmsdm__QueryStandardTime *Xdmsdm__QueryStandardTime, _Xdmsdm__QueryStandardTimeResponse *Xdmsdm__QueryStandardTimeResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryStandardTime soap_tmp___Xdmsdm__QueryStandardTime;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryStandardTime.Xdmsdm__QueryStandardTime = Xdmsdm__QueryStandardTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryStandardTime(soap, &soap_tmp___Xdmsdm__QueryStandardTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryStandardTime(soap, &soap_tmp___Xdmsdm__QueryStandardTime, "-Xdmsdm:QueryStandardTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryStandardTime(soap, &soap_tmp___Xdmsdm__QueryStandardTime, "-Xdmsdm:QueryStandardTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryStandardTimeResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryStandardTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryStandardTimeResponse->soap_get(soap, "Xdmsdm:QueryStandardTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryUserMobileNO(_Xdmsdm__QueryUserMobileNO *Xdmsdm__QueryUserMobileNO, _Xdmsdm__QueryUserMobileNOResponse *Xdmsdm__QueryUserMobileNOResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryUserMobileNO soap_tmp___Xdmsdm__QueryUserMobileNO;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryUserMobileNO.Xdmsdm__QueryUserMobileNO = Xdmsdm__QueryUserMobileNO;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryUserMobileNO(soap, &soap_tmp___Xdmsdm__QueryUserMobileNO);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryUserMobileNO(soap, &soap_tmp___Xdmsdm__QueryUserMobileNO, "-Xdmsdm:QueryUserMobileNO", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryUserMobileNO(soap, &soap_tmp___Xdmsdm__QueryUserMobileNO, "-Xdmsdm:QueryUserMobileNO", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryUserMobileNOResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryUserMobileNOResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryUserMobileNOResponse->soap_get(soap, "Xdmsdm:QueryUserMobileNOResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::SendMobileMessage(_Xdmsdm__SendMobileMessage *Xdmsdm__SendMobileMessage, _Xdmsdm__SendMobileMessageResponse *Xdmsdm__SendMobileMessageResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__SendMobileMessage soap_tmp___Xdmsdm__SendMobileMessage;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__SendMobileMessage.Xdmsdm__SendMobileMessage = Xdmsdm__SendMobileMessage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__SendMobileMessage(soap, &soap_tmp___Xdmsdm__SendMobileMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__SendMobileMessage(soap, &soap_tmp___Xdmsdm__SendMobileMessage, "-Xdmsdm:SendMobileMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__SendMobileMessage(soap, &soap_tmp___Xdmsdm__SendMobileMessage, "-Xdmsdm:SendMobileMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__SendMobileMessageResponse)
		return soap_closesock(soap);
	Xdmsdm__SendMobileMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__SendMobileMessageResponse->soap_get(soap, "Xdmsdm:SendMobileMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::QueryUserInfo(_Xdmsdm__QueryUserInfo *Xdmsdm__QueryUserInfo, _Xdmsdm__QueryUserInfoResponse *Xdmsdm__QueryUserInfoResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__QueryUserInfo soap_tmp___Xdmsdm__QueryUserInfo;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__QueryUserInfo.Xdmsdm__QueryUserInfo = Xdmsdm__QueryUserInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__QueryUserInfo(soap, &soap_tmp___Xdmsdm__QueryUserInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__QueryUserInfo(soap, &soap_tmp___Xdmsdm__QueryUserInfo, "-Xdmsdm:QueryUserInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__QueryUserInfo(soap, &soap_tmp___Xdmsdm__QueryUserInfo, "-Xdmsdm:QueryUserInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__QueryUserInfoResponse)
		return soap_closesock(soap);
	Xdmsdm__QueryUserInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__QueryUserInfoResponse->soap_get(soap, "Xdmsdm:QueryUserInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::SetMonthReportWorkPlans(_Xdmsdm__SetMonthReportWorkPlans *Xdmsdm__SetMonthReportWorkPlans, _Xdmsdm__SetMonthReportWorkPlansResponse *Xdmsdm__SetMonthReportWorkPlansResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__SetMonthReportWorkPlans soap_tmp___Xdmsdm__SetMonthReportWorkPlans;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__SetMonthReportWorkPlans.Xdmsdm__SetMonthReportWorkPlans = Xdmsdm__SetMonthReportWorkPlans;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__SetMonthReportWorkPlans(soap, &soap_tmp___Xdmsdm__SetMonthReportWorkPlans);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__SetMonthReportWorkPlans(soap, &soap_tmp___Xdmsdm__SetMonthReportWorkPlans, "-Xdmsdm:SetMonthReportWorkPlans", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__SetMonthReportWorkPlans(soap, &soap_tmp___Xdmsdm__SetMonthReportWorkPlans, "-Xdmsdm:SetMonthReportWorkPlans", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__SetMonthReportWorkPlansResponse)
		return soap_closesock(soap);
	Xdmsdm__SetMonthReportWorkPlansResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__SetMonthReportWorkPlansResponse->soap_get(soap, "Xdmsdm:SetMonthReportWorkPlansResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::GetMonthReportWorkPlans(_Xdmsdm__GetMonthReportWorkPlans *Xdmsdm__GetMonthReportWorkPlans, _Xdmsdm__GetMonthReportWorkPlansResponse *Xdmsdm__GetMonthReportWorkPlansResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__GetMonthReportWorkPlans soap_tmp___Xdmsdm__GetMonthReportWorkPlans;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__GetMonthReportWorkPlans.Xdmsdm__GetMonthReportWorkPlans = Xdmsdm__GetMonthReportWorkPlans;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__GetMonthReportWorkPlans(soap, &soap_tmp___Xdmsdm__GetMonthReportWorkPlans);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__GetMonthReportWorkPlans(soap, &soap_tmp___Xdmsdm__GetMonthReportWorkPlans, "-Xdmsdm:GetMonthReportWorkPlans", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__GetMonthReportWorkPlans(soap, &soap_tmp___Xdmsdm__GetMonthReportWorkPlans, "-Xdmsdm:GetMonthReportWorkPlans", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__GetMonthReportWorkPlansResponse)
		return soap_closesock(soap);
	Xdmsdm__GetMonthReportWorkPlansResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__GetMonthReportWorkPlansResponse->soap_get(soap, "Xdmsdm:GetMonthReportWorkPlansResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::SetMonthReportBusFreqs(_Xdmsdm__SetMonthReportBusFreqs *Xdmsdm__SetMonthReportBusFreqs, _Xdmsdm__SetMonthReportBusFreqsResponse *Xdmsdm__SetMonthReportBusFreqsResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__SetMonthReportBusFreqs soap_tmp___Xdmsdm__SetMonthReportBusFreqs;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__SetMonthReportBusFreqs.Xdmsdm__SetMonthReportBusFreqs = Xdmsdm__SetMonthReportBusFreqs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__SetMonthReportBusFreqs(soap, &soap_tmp___Xdmsdm__SetMonthReportBusFreqs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__SetMonthReportBusFreqs(soap, &soap_tmp___Xdmsdm__SetMonthReportBusFreqs, "-Xdmsdm:SetMonthReportBusFreqs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__SetMonthReportBusFreqs(soap, &soap_tmp___Xdmsdm__SetMonthReportBusFreqs, "-Xdmsdm:SetMonthReportBusFreqs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__SetMonthReportBusFreqsResponse)
		return soap_closesock(soap);
	Xdmsdm__SetMonthReportBusFreqsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__SetMonthReportBusFreqsResponse->soap_get(soap, "Xdmsdm:SetMonthReportBusFreqsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int XdmsdmProxy::GetMonthReportBusFreqs(_Xdmsdm__GetMonthReportBusFreqs *Xdmsdm__GetMonthReportBusFreqs, _Xdmsdm__GetMonthReportBusFreqsResponse *Xdmsdm__GetMonthReportBusFreqsResponse)
{	struct soap *soap = this->soap;
	struct __Xdmsdm__GetMonthReportBusFreqs soap_tmp___Xdmsdm__GetMonthReportBusFreqs;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___Xdmsdm__GetMonthReportBusFreqs.Xdmsdm__GetMonthReportBusFreqs = Xdmsdm__GetMonthReportBusFreqs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___Xdmsdm__GetMonthReportBusFreqs(soap, &soap_tmp___Xdmsdm__GetMonthReportBusFreqs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___Xdmsdm__GetMonthReportBusFreqs(soap, &soap_tmp___Xdmsdm__GetMonthReportBusFreqs, "-Xdmsdm:GetMonthReportBusFreqs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___Xdmsdm__GetMonthReportBusFreqs(soap, &soap_tmp___Xdmsdm__GetMonthReportBusFreqs, "-Xdmsdm:GetMonthReportBusFreqs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!Xdmsdm__GetMonthReportBusFreqsResponse)
		return soap_closesock(soap);
	Xdmsdm__GetMonthReportBusFreqsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	Xdmsdm__GetMonthReportBusFreqsResponse->soap_get(soap, "Xdmsdm:GetMonthReportBusFreqsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace Xdmsdm

/* End of client proxy code */
